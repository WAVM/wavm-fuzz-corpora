(module
  (type $0 (func (param i32 f64) (result f32)))
  (type $1 (func (param externref f32 f32)))
  (type $2 (func (param externref f64) (result i32 externref)))
  (type $3 (func (param i32 i32 i64) (result i64 f32)))
  (type $4 (func (param f64 f32) (result f64 funcref)))
  (type $5 (func (result f64 f32 externref)))
  (type $6 (func (param i32) (result funcref funcref i32 v128)))
  (type $7 (func (result i32 f64 f32 i32)))
  (type $8 (func (result i32 f64 funcref i64)))
  (type $9 (func (result externref i32)))
  (import "env" "table" (table $10 18 4294967295 externref))
  (global $11  i32 (i32.const 975082161))
  (global $12  (mut i32) (i32.const 2031119287))
  (elem $13 funcref
    (ref.func $16) (ref.null func) (ref.func $17) (ref.func $16)
    (ref.func $16) (ref.func $18) (ref.func $16) (ref.null func)
    (ref.null func) (ref.func $19) (ref.func $16) (ref.func $18)
    (ref.func $19) (ref.func $16) (ref.func $17) (ref.func $16)
    (ref.func $20) (ref.func $19) (ref.func $18) (ref.func $18)
    (ref.func $20) (ref.func $19) (ref.func $20) (ref.func $16)
    (ref.null func) (ref.func $19) (ref.func $19) (ref.func $19)
    (ref.func $20))
  
  (func $16 (type $0)
    (param $0 i32)
    (param $1 f64)
    (result f32)
    (local $2 funcref)
    (local $3 f64)
    (local $4 f64)
    (local $5 externref)
    f64.const -0x1.64e427c87ceb1p-1001
    local.tee $3
    nop
    table.size $10
    local.set $0
    atomic.fence
    i64.const -2842670507861209972
    f64.convert_i64_u
    local.tee $4
    f64.nearest
    f64.ge
    table.get $10
    ref.null extern
    local.get $1
    f64.nearest
    local.set $3
    ref.is_null
    local.set $0
    ref.null extern
    ref.is_null
    table.get $10
    ref.null extern
    ref.null func
    drop
    drop
    unreachable
    )
  
  (func $17 (type $1)
    (param $0 externref)
    (param $1 f32)
    (param $2 f32)
    (local $3 i32)
    (local $4 externref)
    i32.const -1039710013
    i64.extend_i32_u
    local.get $0
    local.get $2
    i32.reinterpret_f32
    f32.convert_i32_u
    local.set $2
    local.get $4
    local.get $1
    i32.trunc_sat_f32_s
    return
    )
  
  (func $18 (type $2)
    (param $0 externref)
    (param $1 f64)
    (result i32 externref)
    (local $2 i64)
    (local $3 v128)
    i64.const -3205358263120154273
    f64.reinterpret_i64
    block $block (result f64 f32 externref)
      data.drop $14
      local.get $1
      block $block_0
        atomic.fence
        local.get $0
        loop $loop (result f64)
          ref.null extern
          local.get $0
          data.drop $15
          ref.is_null
          block $block_1 (param i32) (result funcref funcref i32 v128)
            table.get $10
            unreachable
          end ;; $block_1
          br $block_0
        end ;; $loop
        br $block_0
      end ;; $block_0
      i64.trunc_sat_f64_s
      drop
      atomic.fence
      local.get $2
      ref.null func
      ref.is_null
      global.set $12
      drop
      table.size $10
      ref.null func
      ref.null func
      ref.is_null
      drop
      unreachable
    end ;; $block
    local.set $0
    unreachable
    )
  
  (func $19 (type $3)
    (param $0 i32)
    (param $1 i32)
    (param $2 i64)
    (result i64 f32)
    (local $3 v128)
    (local $4 v128)
    atomic.fence
    f32.const 0x1.b33f4ap-40
    f32.trunc
    atomic.fence
    drop
    v128.const i32x4 0x4b0352d5 0x429faee7 0x0c0dad2d 0x2a09da81
    i64x2.neg
    i32x4.trunc_sat_f32x4_u
    i64.const 1674542323159714445
    f64.convert_i64_u
    elem.drop $13
    f64.const -0x1.3b530d8289131p-326
    f64.max
    block $block (result i32 f64 f32 i32)
      elem.drop $13
      i32.const -579005529
      local.get $1
      i32.rem_u
      global.get $11
      i32.div_u
      table.size $10
      i32.ne
      local.get $3
      drop
      global.get $11
      i32.add
      i64.extend_i32_u
      ref.null extern
      ref.null func
      ref.null extern
      unreachable
    end ;; $block
    table.get $10
    drop
    ref.null func
    unreachable
    )
  
  (func $20 (type $4)
    (param $0 f64)
    (param $1 f32)
    (result f64 funcref)
    ref.null func
    atomic.fence
    atomic.fence
    nop
    f32.const -0x1.5213f6p+8
    local.set $1
    block $block (result i32 f64 funcref i64)
      nop
      elem.drop $13
      i32.const 383493832
      atomic.fence
      loop $loop
        global.get $12
        f32.reinterpret_i32
        f32x4.splat
        drop
        br $loop
      end ;; $loop
      i64.extend_i32_s
      drop
      global.get $12
      local.get $0
      loop $loop_0 (result externref i32)
        br $loop_0
      end ;; $loop_0
      unreachable
    end ;; $block
    unreachable
    )
  
  (data $14 
    "`\c0\9e\83 \"\b1\e7>\0b\98B\fd\9f\d8k\8c\10\c0\88\17p\b37v\07\cf\a0\f85^\86\c7\f9N\80U\c7\1c\8aNm=\eaU\9a}{\84\18\1c&\a8o\03\f4\fc\b3\c1\ce\a4d\96\07"
    "\8eG\1a\d1\d7\ef\ef6-\17U\85\86\d4I\eb\a6\14\c7\afB\7f&;Cn\fd\06")
  
  (data $15 
    "\8c(\9eK\15:\ed\98X\84\1c{\170\95\fbM\f2\1d\0f\15\1b\0f\e3\85\b6\bd}\c8u\81><\af\ff\02q\9e\a1\fe\b1\d4\ac$\a4\b7\ed$"))