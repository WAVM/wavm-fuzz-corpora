(module
  (type $0 (func (param externref i32 f32 externref) (result externref funcref)))
  (type $1 (func (result f32)))
  (type $2 (func (result f32 f32)))
  (type $3 (func (param f32 f32 externref) (result i32 externref)))
  (type $4 (func (param i64)))
  (type $5 (func (result i32 f32 v128 i32)))
  (import "env" "table" (table $6 33 4294967295 externref))
  (import "env" "global1" (global $10 (mut f32)))
  (import "env" "global3" (global $11 funcref))
  (import "env" "global4" (global $12 (mut i32)))
  (import "env" "global5" (global $13 funcref))
  (import "env" "global8" (global $14 (mut funcref)))
  (import "env" "global9" (global $15 (mut f64)))
  (import "env" "func0" (func $22 (result f32)))
  (import "env" "func1" (func $23 (result f32 f32)))
  (memory $8  31 6511 shared)
  (memory $9  81 13073)
  (table $7  45 4294967295 shared funcref)
  (global $16  (mut i64) (i64.const -7333469516650454128))
  (global $17  (mut i32) (i32.const -275147248))
  (global $18  (mut v128) (v128.const i32x4 0x7d1a6eb5 0x8a18a0c4 0x4d5cfdf7 0xd0abc9e1))
  (global $19  (mut v128) (v128.const i32x4 0xea96fa18 0x9809d723 0xb6240679 0xcdad0ec8))
  (elem $20 exception_type)
  (elem $21 exception_type)
  
  (func $24 (type $0)
    (param $0 externref)
    (param $1 i32)
    (param $2 f32)
    (param $3 externref)
    (result externref funcref)
    (local $4 i32)
    (local $5 funcref)
    i64.const 8454087203644201216
    local.get $4
    i32.clz
    ref.null func
    global.get $15
    i64.trunc_sat_f64_s
    global.get $18
    v128.const i32x4 0x131fdb52 0x06d0e518 0x6cd70218 0xbc06d0a6
    i16x8.max_s
    i16x8.bitmask
    i64.extend_i32_s
    loop $loop (param i64)
      global.get $17
      local.set $4
      global.get $18
      global.set $18
      drop
      unreachable
    end ;; $loop
    ref.null func
    global.set $14
    drop
    ref.is_null
    i32.xor
    call_indirect $7 (type $4)
    table.size $6
    global.set $17
    i32.const -697517142
    table.get $7
    global.set $14
    call $22
    global.set $10
    memory.size $9
    global.set $12
    call $23
    local.set $2
    local.set $2
    i64.const -5967829213312653010
    global.set $16
    local.get $0
    global.get $14
    unreachable
    )
  
  (func $25 (type $3)
    (param $0 f32)
    (param $1 f32)
    (param $2 externref)
    (result i32 externref)
    (local $3 v128)
    (local $4 i32)
    local.get $2
    global.get $12
    if $if (result i32 f32 v128 i32)
      global.get $10
      global.get $11
      i32.const -1039554479
      v32x4.load_interleaved_4 offset=1647663351
      i8x16.narrow_i16x8_s
      i32x4.widen_high_i16x8_u
      i64x2.add
      i8x16.all_true
      i64.const -2049149901923984845
      i64.atomic.store8 $9 offset=2797165611
      i16x8.widen_low_i8x16_u
      call $23
      f32.le
      table.get $6
      ref.is_null
      i16x8.shl
      local.set $3
      ref.is_null
      global.set $12
      local.set $0
      global.get $14
      ref.null extern
      unreachable
    else
      atomic.fence
      local.get $3
      ref.null func
      unreachable
    end ;; $if
    i32x4.shr_u
    global.set $19
    unreachable
    ))