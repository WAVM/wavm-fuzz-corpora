(module
  (type $0 (func (param f64 i32)))
  (type $1 (func (result f32)))
  (type $2 (func (param funcref i64 f32 i64) (result externref i32)))
  (type $3 (func (param f32 f64) (result funcref externref)))
  (type $4 (func (param funcref f32 f64 v128) (result i64)))
  (type $5 (func (param funcref) (result v128)))
  (type $6 (func (param i64) (result externref i32 externref)))
  (type $7 (func (param i32) (result f64 f64 i64)))
  (type $8 (func (result externref f32 i32 f64)))
  (import "env" "table" (table $9 36 4294967295 externref))
  (import "env" "table" (table $10 22 4294967295 shared funcref))
  (import "env" "global0" (global $12 v128))
  (import "env" "global1" (global $13 funcref))
  (import "env" "global2" (global $14 i64))
  (import "env" "func0" (func $17 (param f64 i32)))
  (table $11  10 4294967295 shared funcref)
  (global $15  (mut v128) (v128.const i32x4 0x4e181d33 0x8f49bf18 0x1f128ba9 0xbab2828a))
  (elem $16 declare funcref
    (ref.func $20) (ref.func $21) (ref.func $17) (ref.null func)
    (ref.func $17) (ref.null func) (ref.func $18) (ref.func $21)
    (ref.func $21) (ref.func $20) (ref.func $17))
  
  (func $18 (type $1)
    (result f32)
    (local $0 i32)
    (local $1 funcref)
    atomic.fence
    ref.null extern
    elem.drop $16
    f32.const 0x1.881ae2p+27
    f32.nearest
    br 0
    )
  
  (func $19 (type $2)
    (param $0 funcref)
    (param $1 i64)
    (param $2 f32)
    (param $3 i64)
    (result externref i32)
    (local $4 v128)
    f32.const -0x1.42ee00p+116
    call $18
    local.get $0
    loop $loop (param funcref) (result v128)
      local.get $0
      call $18
      f32.neg
      f32.nearest
      i64.trunc_f32_u
      i64x2.splat
      i32x4.trunc_sat_f32x4_u
      i32x4.any_true
      call_indirect $11 (type $5)
      local.get $1
      loop $loop_0 (param i64) (result externref i32 externref)
        br $loop_0
      end ;; $loop_0
      unreachable
    end ;; $loop
    drop
    f32.sub
    unreachable
    )
  
  (func $20 (type $3)
    (param $0 f32)
    (param $1 f64)
    (result funcref externref)
    (local $2 v128)
    (local $3 i32)
    unreachable
    )
  
  (func $21 (type $4)
    (param $0 funcref)
    (param $1 f32)
    (param $2 f64)
    (param $3 v128)
    (result i64)
    (local $4 f32)
    i64.const -335337458071027435
    global.get $15
    i32x4.trunc_sat_f32x4_u
    i32x4.widen_low_i16x8_s
    i32x4.widen_high_i16x8_u
    local.get $1
    f32.neg
    i32.const -813953089
    local.get $1
    f32.nearest
    i32.trunc_f32_u
    i32.div_u
    block $block (param i32) (result f64 f64 i64)
      loop $loop (result externref f32 i32 f64)
        br $loop
      end ;; $loop
      unreachable
    end ;; $block
    ref.null func
    ref.null func
    ref.is_null
    table.get $11
    ref.is_null
    call_indirect $11 (type $5)
    unreachable
    ))