(module
  (type $0 (func (param f32 i32 v128)))
  (type $1 (func (param f64 i64 externref) (result f32)))
  (type $2 (func (param i32)))
  (type $3 (func (param v128 i32) (result v128 f64 funcref)))
  (import "env" "memory" (memory $7 76 7424 shared))
  (import "env" "global0" (global $10 i32))
  (import "env" "global1" (global $11 externref))
  (import "env" "func0" (func $12 (param f64 i64 externref) (result f32)))
  (memory $8  7 5232 shared)
  (memory $9  8 55551 shared)
  (table $4  96 4294967295 externref)
  (table $5  79 4294967295 externref)
  (table $6  75 4294967295 funcref)
  
  (func $13 (type $0)
    (param $0 f32)
    (param $1 i32)
    (param $2 v128)
    (local $3 i32)
    (local $4 f32)
    (local $5 i32)
    (local $6 f64)
    local.get $2
    i16x8.bitmask
    br_if 0
    local.get $5
    v16x8.load_interleaved_4 $8 offset=2767837121 align=2
    i32x4.trunc_sat_f32x4_u
    i32x4.abs
    i8x16.neg
    i16x8.extract_lane_u 0
    table.size $5
    if $if (param v128 i32) (result v128 f64 funcref)
      i32.load8_s $8 offset=3368220169
      i64.load32_s $8 offset=757492208 align=2
      atomic.fence
      local.get $5
      table.get $4
      unreachable
    else
      i8x16.shr_u
      i16x8.all_true
      local.set $3
      memory.size
      return
    end ;; $if
    ref.is_null
    ref.null extern
    return
    )
  
  (func $14 (type $2)
    (param $0 i32)
    (local $1 f32)
    (local $2 i64)
    (local $3 v128)
    v128.const i32x4 0x228b9ea8 0x264d4918 0xbe32c003 0x4a37617f
    i32x4.abs
    local.get $3
    i8x16.add_saturate_s
    i16x8.widen_high_i8x16_u
    table.size $6
    v128.const i32x4 0x252d538a 0xf5802a80 0xf1c161e0 0xbe9e261f
    i16x8.widen_high_i8x16_u
    local.tee $3
    local.get $3
    i16x8.mul
    f32x4.sqrt
    i32x4.abs
    i16x8.abs
    i16x8.widen_low_i8x16_u
    return
    ))