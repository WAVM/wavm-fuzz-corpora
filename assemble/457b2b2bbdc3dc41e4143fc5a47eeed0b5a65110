(module
  (type $0 (func (result f32)))
  (type $1 (func (result f64)))
  (export "f32.epsilon" (func $2))
  (export "f64.epsilon" (func $3))
  
  (func $2 (type $0)
    (result f32)
    (local $x f32)
    (local $result f32)
    f32.const 0x1.000000p-0
    local.set $x
    loop $loop
      local.get $x
          f32.const 0x1.000000p-1
      f32.mul
      local.tee $x
      f32.const 0x1.000000p-0
      f32.add
      f32.const 0x1.000000p-0
      f32.gt
      br_if $loop
    end ;; $loop
    local.get $result
    )
  
  (func $3 (type $1)
    (result f64)
    (local $x f64)
    (local $result f64)
    f64.const 0x1.0000000000000p-0
    local.set $x
    loop $loop
      local.get $x
      local.tee $result
      f64.const 0x1.0000000000000p-1
      f64.mul
      local.tee $x
      f64.const 0x1.0000000000000p-0
      f64.add
      f64.const 0x1.0000000000000p-0
      f64.gt
      br_if $loop
    end ;; $loop
    local.get $result
    ))