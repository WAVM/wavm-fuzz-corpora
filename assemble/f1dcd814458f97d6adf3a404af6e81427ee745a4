(module
  (type $0 (func (result i32)))
  (type $1 (func))
  (type $2 (func (param i32) (result i32)))
  (import "a" "ef0" (func $7 (result i32)))
  (import "a" "ef1" (func $8 (result i32)))
  (import "a" "ef2" (func $9 (result i32)))
  (import "a" "ef3" (func $10 (result i32)))
  (import "a" "ef4" (func $11 (result i32)))
  (table $t0  30 30 funcref)
  (table $t1  30 30 funcref)
  (export "test" (func $17))
  (export "check" (func $18))
  (elem $3 (table $t1) (i32.const 2)
    $10 $8 $11 $8)
  (elem $4 funcref
    (ref.func $9) (ref.func $14) (ref.func $8) (ref.func $15))
  (elem $5 (table $t1) (i32.const 12)
    $14 $12 $9 $10 $13)
  (elem $6 funcref
    (ref.func $12) (ref.func $16) (ref.func $9) (ref.func $14)
    (ref.func $13))
  
  (func $12 (type $0)
    (result i32)
    i32.const 5
    )
  
  (func $13 (type $0)
    (result i32)
    i32.const 6
    )
  
  (func $14 (type $0)
    (result i32)
    i32.const 7
    )
  
  (func $15 (type $0)
    (result i32)
    i32.const 8
    )
  
  (func $16 (type $0)
    (result i32)
    i32.const 9
    )
  
  (func $17 (type $1)
    i32.const 7
    i32.const 0
    i32.const 4
    table.init $t1 $4
    elem.drop $4
    i32.const 15
    i32.const 1
    i32.const 3
    table.init $t1 $6
    elem.drop $6
    i32.const 20
    i32.const 15
    i32.const 5
    table.copy $t1
    i32.const 21
    i32.const 29
    i32.const 1
    table.copy $t1
    i32.const 24
    i32.const 10
    i32.const 1
    table.copy $t1
    i32.const 13
    i32.const 11
    i32.const 4
    table.copy $t1
    i32.const 19
    i32.const 20
    i32.const 5
    table.copy $t1
    )
  
  (func $18 (type $2)
    (param $0 i32)
    (result i32)
    local.get $0
    call_indirect $t1 (type $0)
    ))