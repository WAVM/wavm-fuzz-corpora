(module
  (type $0 (func (param funcref) (result funcref i32)))
  (type $1 (func (param funcref i64 funcref f64) (result externref)))
  (type $2 (func (param i64 f32)))
  (type $3 (func (param i32 externref) (result funcref i32)))
  (type $4 (func (param funcref f32) (result funcref)))
  (type $5 (func (param externref externref i32 i32) (result f64 i32 v128)))
  (type $6 (func (param f64)))
  (type $7 (func (result v128 i64)))
  (type $8 (func (param funcref funcref) (result funcref f64)))
  (import "env" "table" (table $9 1 4294967295 shared funcref))
  (import "env" "global1" (global $12 externref))
  (import "env" "global2" (global $13 i32))
  (import "env" "global3" (global $14 (mut f64)))
  (import "env" "global4" (global $15 funcref))
  (import "env" "global5" (global $16 i64))
  (import "env" "global8" (global $17 funcref))
  (import "env" "func0" (func $22 (param funcref) (result funcref i32)))
  (import "env" "func1" (func $23 (param i64 f32)))
  (table $10  36 4294967295 externref)
  (table $11  34 4294967295 shared funcref)
  (global $18  f32 (f32.const 0x1.189c38p+31))
  (global $19  (mut funcref) (ref.null func))
  (global $20  funcref (ref.null func))
  
  (func $24 (type $1)
    (param $0 funcref)
    (param $1 i64)
    (param $2 funcref)
    (param $3 f64)
    (result externref)
    (local $4 i32)
    (local $5 funcref)
    global.get $19
    i32.const 1163044372
    i32.clz
    i32.const -1903621863
    unreachable
    )
  
  (func $25 (type $3)
    (param $0 i32)
    (param $1 externref)
    (result funcref i32)
    (local $2 externref)
    global.get $17
    local.get $1
    local.get $1
    local.get $2
    local.tee $2
    local.tee $2
    table.size $10
    table.size $9
    atomic.fence
    loop $loop (param externref externref i32 i32) (result f64 i32 v128)
      f64.convert_i32_u
      block $block (param f64)
        v128.const i32x4 0x2c9a2167 0xf67349c2 0x4844a27b 0x9d106d8b
        f64.const -0x1.8f2ea86532aa6p+812
        f64.sqrt
        br $block
      end ;; $block
      local.set $0
      unreachable
    end ;; $loop
    ref.null func
    ref.is_null
    ref.null func
    global.set $19
    i8x16.replace_lane 12
    ref.null extern
    local.set $1
    unreachable
    )
  
  (func $26 (type $4)
    (param $0 funcref)
    (param $1 f32)
    (result funcref)
    (local $2 f64)
    (local $3 funcref)
    v128.const i32x4 0x8a3542da 0x822945ea 0x277a5910 0x747476ad
    global.get $18
    block $block (result v128 i64)
      f64.const 0x1.5be9b234e4adfp+664
      local.get $3
      call $22
      f32.reinterpret_i32
      ref.null func
      local.get $0
      atomic.fence
      atomic.fence
      i32.const -2099499964
      nop
      if $if (param funcref funcref) (result funcref f64)
        data.drop $21
        br 2
      else
        ref.null extern
        unreachable
      end ;; $if
      drop
      br 1
    end ;; $block
    drop
    drop
    local.set $1
    unreachable
    )
  
  (data $21 
    "\c1P\fd\84\fc\16,7E\cb\04\ec\a0\b2l7\e9\f9\06\f7t\03\f5\89f\e8\9e\c3\df\afaI\d3\c01\02\cb\c3\94\b7{\01\b2\8bf\e6*\ec\ec\c67\9c\fbq\cd\f8\ebyBe\11\bf%\92"
    "#BX\80qw\f1\bd}\8c\03\d1\baZ\15\e88\da\1c3G"))