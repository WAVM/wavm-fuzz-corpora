(module
  (type $0 (func))
  (type $1 (func (param v128 i64 externref)))
  (type $2 (func (param i64 f32 i64 funcref)))
  (type $3 (func (result f64 i32)))
  (type $4 (func (param v128 f64 externref i32) (result i64 i32)))
  (type $5 (func (param i64 f64 i64) (result v128 externref f64)))
  (type $6 (func (result externref i64)))
  (type $7 (func (param f64) (result externref)))
  (type $8 (func (result v128 i64)))
  (type $9 (func (param f64) (result i64)))
  (type $10 (func (result v128 v128)))
  (import "env" "memory" (memory $12 88 2841))
  (import "env" "global0" (global $14 externref))
  (import "env" "global1" (global $15 (mut i32)))
  (import "env" "global6" (global $16 externref))
  (import "env" "global7" (global $17 (mut i32)))
  (import "env" "global9" (global $18 (mut externref)))
  (import "env" "func0" (func $27 (result f64 i32)))
  (memory $13  90 695 shared)
  (table $11  44 4294967295 shared funcref)
  (global $19  (mut f64) (f64.const 0x1.59c14a5a65634p+62))
  (global $20  (mut funcref) (ref.null func))
  (global $21  f32 (f32.const 0x1.2b7e68p+31))
  (global $22  (mut externref) (ref.null extern))
  (global $23  (mut f32) (f32.const 0x1.38c41cp+31))
  (elem $24 declare table
    $11 $11 $11 $11 $11 $11 $11 $11
    $11 $11 $11 $11 $11 $11 $11 $11)
  (elem $25 externref
    (ref.null extern) (ref.null extern) (ref.null extern) (ref.null extern)
    (ref.null extern) (ref.null extern) (ref.null extern) (ref.null extern)
    (ref.null extern) (ref.null extern) (ref.null extern) (ref.null extern)
    (ref.null extern) (ref.null extern) (ref.null extern) (ref.null extern)
    (ref.null extern) (ref.null extern) (ref.null extern) (ref.null extern)
    (ref.null extern) (ref.null extern) (ref.null extern) (ref.null extern)
    (ref.null extern) (ref.null extern) (ref.null extern) (ref.null extern)
    (ref.null extern) (ref.null extern) (ref.null extern) (ref.null extern)
    (ref.null extern) (ref.null extern) (ref.null extern) (ref.null extern)
    (ref.null extern) (ref.null extern) (ref.null extern) (ref.null extern)
    (ref.null extern) (ref.null extern) (ref.null extern) (ref.null extern)
    (ref.null extern) (ref.null extern) (ref.null extern) (ref.null extern)
    (ref.null extern) (ref.null extern) (ref.null extern) (ref.null extern)
    (ref.null extern) (ref.null extern) (ref.null extern) (ref.null extern)
    (ref.null extern) (ref.null extern) (ref.null extern) (ref.null extern)
    (ref.null extern) (ref.null extern) (ref.null extern) (ref.null extern)
    (ref.null extern) (ref.null extern) (ref.null extern) (ref.null extern)
    (ref.null extern))
  
  (func $28 (type $0)
    (local $0 funcref)
    (local $1 v128)
    elem.drop $24
    global.get $16
    data.drop $26
    i64.const 607831844358236286
    nop
    f64.const -0x1.7660cc613b06cp-461
    i64.const -4211457266181722557
    i64.extend16_s
    loop $loop (param i64 f64 i64) (result v128 externref f64)
      block $block (result externref i64)
        global.get $14
        global.get $17
        f64.convert_i32_u
        loop $loop_0 (param f64) (result externref)
          i64.trunc_sat_f64_u
          drop
          global.get $20
          unreachable
        end ;; $loop_0
        drop
        global.get $21
        br 2
      end ;; $block
      return
    end ;; $loop
    return
    )
  
  (func $29 (type $1)
    (param $0 v128)
    (param $1 i64)
    (param $2 externref)
    (local $3 i32)
    br 0
    )
  
  (func $30 (type $2)
    (param $0 i64)
    (param $1 f32)
    (param $2 i64)
    (param $3 funcref)
    (local $4 f64)
    (local $5 f64)
    (local $6 externref)
    call $28
    call $28
    memory.size $13
    i32.atomic.load offset=2392884705
    memory.size $13
    i32.atomic.rmw.add offset=1777536924
    i32.extend8_s
    nop
    i16x8.splat
    global.get $17
    table.get $11
    global.get $17
    memory.size
    i32.atomic.rmw.add $13 offset=4272372300
    v16x8.load_interleaved_2 $13 offset=2453381399
    i64x2.mul
    br 0
    )
  
  (func $31 (type $4)
    (param $0 v128)
    (param $1 f64)
    (param $2 externref)
    (param $3 i32)
    (result i64 i32)
    (local $4 i32)
    (local $5 externref)
    (local $6 v128)
    (local $7 f64)
    local.get $3
    v128.load $13 offset=3403425608 align=1
    i8x16.extract_lane_s 12
    table.size $11
    i64x2.load32x2_s $13 offset=1804088305 align=4
    i8x16.abs
    loop $loop (result v128 i64)
      local.get $7
      local.get $6
      local.set $6
      loop $loop_0 (result f64)
        global.get $19
        f64.const 0x1.f90abb1c77a77p-964
        block $block (param f64) (result i64)
          global.get $22
          ref.is_null
          call_indirect $11 (type $7)
          unreachable
        end ;; $block
        br $loop
      end ;; $loop_0
      f64.ge
      ref.null extern
      global.set $18
      local.set $4
      local.get $6
      v128.not
      i32x4.widen_low_i16x8_s
      block $block_0 (result v128 v128)
        f32.const -0x1.ffc9e8p-60
        unreachable
      end ;; $block_0
      i16x8.min_s
      i16x8.mul
      i32x4.trunc_sat_f32x4_s
      i16x8.extract_lane_u 4
      drop
      memory.size
      call_indirect $11 (type $0)
      global.get $14
      global.set $22
      i64.const 313937180685417538
      ref.null func
      global.set $20
      unreachable
    end ;; $loop
    i64x2.replace_lane 0
    i8x16.sub
    unreachable
    )
  
  (data $26 (memory $13) (i32.const -446635459)
    "\1c\e0\89\cf\18\c0o\b9K\cdVyYrEl\f5G"))