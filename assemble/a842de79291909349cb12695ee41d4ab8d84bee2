(module
  (type $0 (func (param v128 v128) (result v128)))
  (type $1 (func (param v128) (result v128)))
  (type $2 (func (result v128)))
  (export "f32x4.min" (func $3))
  (export "f32x4.max" (func $4))
  (export "f32x4.abs" (func $5))
  (export "f32x4.min_with_const_0" (func $6))
  (export "f32x4.min_with_const_1" (func $7))
  (export "f32x4.min_with_const_2" (func $8))
  (export "f32x4.min_with_const_3" (func $9))
  (export "f32x4.min_with_const_5" (func $10))
  (export "f32x4.min_with_const_6" (func $11))
  (export "f32x4.min_with_const_7" (func $12))
  (export "f32st_8" (func $13))
  (export "f32x4.max_with_const_10" (func $14))
  (export "f32x4.max_with_const_11" (func $15))
  (export "f32x4.max_with_const_12" (func $16))
  (export "f32x4.max_with_const_13" (func $17))
  (export "f32x4.max_with_const_15" (func $18))
  (export "f32x4.max_with_const_16" (func $19))
  (export "f32x4.max_with_const_17" (func $20))
  (export "f32x4.max_with_const_18" (func $21))
  (export "f32x4.abs_with_const" (func $22))
  
  (func $3 (type $0)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    f32x4.min
    )
  
  (func $4 (type $0)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    f32x4.max
    )
  
  (func $5 (type $1)
    (param $0 v128)
    (result v128)
    local.get $0
    f32x4.abs
    )
  
  (func $6 (type $2)
    (result v128)
    v128.const i32x4 0x00000000 0x3f800000 0x40000000 0xc0400000
    v128.const i32x4 0x00000000 0x40000000 0x3f800000 0x40400000
    f32x4.min
    )
  
  (func $7 (type $2)
    (result v128)
    v128.const i32x4 0x00000000 0x3f800000 0x40000000 0x40400000
    v128.const i32x4 0x00000000 0x3f800000 0x40000000 0x40400000
    f32x4.min
    )
  
  (func $8 (type $2)
    (result v128)
    v128.const i32x4 0x00000000 0x3f800000 0x40000000 0x4f000000
    v128.const i32x4 0x00000000 0x40000000 0x3f800000 0x4f000000
    f32x4.min
    )
  
  (func $9 (type $2)
    (result v128)
    v128.const i32x4 0x00000000 0x3f800000 0x40000000 0x4f000000
    v128.const i32x4 0x00000000 0x3f800000 0x40000000 0x4f000000
    f32x4.min
    )
  
  (func $10 (type $1)
    (param $0 v128)
    (result v128)
    local.get $0
    v128.const i32x4 0x00000000 0x3f800000 0x40000000 0xc0400000
    f32x4.min
    )
  
  (func $11 (type $1)
    (param $0 v128)
    (result v128)
    v128.const i32x4 0x00000000 0x3f800000 0x40000000 0x40400000
    local.get $0
    f32x4.min
    )
  
  (func $12 (type $1)
    (param $0 v128)
    (result v128)
    v128.const i32x4 0x00000000 0x3f800000 0x40000000 0x4f000000
    local.get $0
    f32x4.min
    )
  
  (func $13 (type $1)
    (param $0 v128)
    (result v128)
    local.get $0
    v128.const i32x4 0x00000000 0x3f800000 0x40000000 0x4f000000
    f32x4.min
    )
  
  (func $14 (type $2)
    (result v128)
    v128.const i32x4 0x00000000 0x3f800000 0x40000000 0xc0400000
    v128.const i32x4 0x00000000 0x40000000 0x3f800000 0x40400000
    f32x4.max
    )
  
  (func $15 (type $2)
    (result v128)
    v128.const i32x4 0x00000000 0x3f800000 0x40000000 0x40400000
    v128.const i32x4 0x00000000 0x3f800000 0x40000000 0x40400000
    f32x4.max
    )
  
  (func $16 (type $2)
    (result v128)
    v128.const i32x4 0x00000000 0x3f800000 0x40000000 0x4f000000
    v128.const i32x4 0x00000000 0x40000000 0x3f800000 0x4f000000
    f32x4.max
    )
  
  (func $17 (type $2)
    (result v128)
    v128.const i32x4 0x00000000 0x3f800000 0x40000000 0x4f000000
    v128.const i32x4 0x00000000 0x3f800000 0x40000000 0x4f000000
    f32x4.max
    )
  
  (func $18 (type $1)
    (param $0 v128)
    (result v128)
    local.get $0
    v128.const i32x4 0x00000000 0x3f800000 0x40000000 0xc0400000
    f32x4.max
    )
  
  (func $19 (type $1)
    (param $0 v128)
    (result v128)
    v128.const i32x4 0x00000000 0x3f800000 0x40000000 0x40400000
    local.get $0
    f32x4.max
    )
  
  (func $20 (type $1)
    (param $0 v128)
    (result v128)
    v128.const i32x4 0x00000000 0x3f800000 0x40000000 0x4f000000
    local.get $0
    f32x4.max
    )
  
  (func $21 (type $1)
    (param $0 v128)
    (result v128)
    local.get $0
    v128.const i32x4 0x00000000 0x3f800000 0x40000000 0x4f000000
    f32x4.max
    )
  
  (func $22 (type $2)
    (result v128)
    v128.const i32x4 0x80000000 0xbf800000 0xc0000000 0xc0400000
    f32x4.abs
    ))