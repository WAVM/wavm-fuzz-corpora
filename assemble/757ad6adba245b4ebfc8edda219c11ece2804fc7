(
module
  (type $sig (func (param i32 i32 i32) (result i32)))
  (type $0 (func (result i32)))
  (type $1 (func (result i64)))
  (type $2 (func (result f32)))
  (type $3 (func (result f64)))
  (type $4 (func (param i32) (result i32)))
  (type $5 (func (param i64) (result i64)))
  (type $6 (func (param f32) (result f32)))
  (type $7 (func (param f64) (result f64)))
  (type $8 (func (param i64 f32 f64 i32 i32)))
  (type $9 (func (param i64 f32 f64 i32 i32) (result i64)))
  (type $10 (func (param i64 f32 f64 i32 i32) (result f64)))
  (type $11 (func))
  (type $12 (func (param i32)))
  (type $13 (func (param i32 i32) (result i32)))
  (type $14 (func (param i64) (result i32)))
  (export "ty`e-local-i32" (func $18))
  (export "type-local-i64" (func $19))
  (export "tye-local-f32" (func $20))
  (export "type-local-f64" (func $21))
  (export "type-paroperand" (func $71))
  (export "as-memory.grow-size" (func $72))
  (memory $16  1)
  (table $15  1 1 funcref)
  (global $g  (mut i32) (i32.const 0))
  (elem $17 (table $15) (i32.const 0)
    $f)
  
  (func $18 (type $0)
    (result i32)
    (local $0 i32)
    i32.const 0
    local.tee $0
    )
  
  (func $19 (type $1)
    (result i64)
    (local $0 i64)
    i64.const 0
    local.tee $0
    )
  
  (func $20 (type $2)
    (result f32)
    (local $0 f32)
    f32.const 0x0.000000p-127
    local.tee $0
    )
  
  (func $21 (type $3)
    (result f64)
    (local $0 f64)
    f64.const 0x0.0000000000000p-1023
    local.tee $0
    )
  
  (func $22 (type $4)
    (param $0 i32)
    (result i32)
    i32.const 10   local.tee $0
    end ;; $if
    )
  
  (func $46 (type $13)
    (param $0 i32)
    (param $1 i32)
    (result i32)
    i32.const 5
    local.tee $0
    local.get $0
    local.get $1
    select
    )
  
  (func $47 (type $13)
    (param $0 i32)
    (param $1 i32)
    (result i32)
    local.get $0
    i32.const 3
    local.tee $0
    local.get $1
    select
    )
  
  (func $48 (type $4)
    (param $0 i32)
    (result i32)
    i32.const 0
    i32.const 1
    i32.const 7
    local.tee $0
    select
    )
  
  (func $f (type $sig)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    i32.const -1
    )
  
  (func $49 (type $4)
    (param $0 i32)
    (result i32)
    i32.const 12
    local.tee $0
    i32.const 2
    i32.const 3
    call $f
    )
  
  (func $50 (type $4)
    (param $0 i32)
    (result i32)
    i32.const 1
    i32.const 13
    local.tee $0
    i32.const 3
    call $f
    )
  
  (func $51 (type $4)
    (param $0 i32)
    (result i32)
    i32.const 1
    i32.const 2
    i32.const 14
    local.tee $0
    call $f
    )
  
  (func $04 (type $4)
    (param $0 i32)
    (result i32)
    i32.const 1
    local.tee $0
    i32.const 2
    i32.const 3
    i32.const 0
    call_indirect $15 (type $sig)
    )
  
  (func $53 (type $4)
    (param $0 i32)
    (result i32)
    i32.const 1
    i32.const 2
    local.tee $0
    i32.const 3
    i32.const 0
    call_indirect $15 (type $sig)
    )
  
  (func $54 (type $4)
    (param $0 i32)
    (result i32)
    i32.const 10
    i32.const 42
    local.tee $0
    i32.ne
    )
  
  (func $71 (type $14)
    (param $0 i64)
    (result i32)
    i64.const 41
    local.tee $0
    i32.wrap_i64
    )
  
  (func $72 (type $4)
    (param $0 i32)
    (result i32)
    i32.const 40
    local.tee $0
    memory.grow
    ))