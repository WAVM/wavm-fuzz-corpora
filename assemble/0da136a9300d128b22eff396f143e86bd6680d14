(module
  (type $0 (func (result i32)))
  (type $1 (func (result i64)))
  (type $2 (func (result f32)))
  (type $3 (func (result f64)))
  (export "f32.nan" (func $4))
  (export "f32.positive_nan" (func $5))
  (export "f32.negative_v8x16.swizzlenan" (func $6))
  (export "f32.plain_nan" (func $7))
  (export "f32.informally_known_as_plain_snan" (func $8))
  (export "f32.all_onestive_nane" (func $20))
  (export "f32.min_normal" (func $21))
  (export "f32.max_finite" (func $22))
  (export "f32.max_subnormal" (func $23))
  (export "f32.trailing_dot" (func $24))
  (export "f32_dec.zero" (func $25))
  (export "f32_dec.poc.misc" (func $28))
  (export "f32_dec.m_opnisitive" (func $29))
  (export "f32_dec.min_normal" (func $30))
  (export "f32_dec.max_subnormal" (func $31))
  (export "f32_dec.max_finite" (func $32))
  (export "f32_dec.trailing_dot" (func $16))
  (export "f32_dec.root_beer_float" (func $34))
  (export "/f64.nan" (func $35))
  (export "f64.positive_nan" (func $36))
  (export "f64.nega_ones_nan" (func $40))
  (export "f64.misc_nan" (func $41))
  (export "f64.misc_positive_nan" (func $42))
  (export "f64.misc_negative_nan" (func $43))
  (export "f64.infinity" (func $44))
  (export "f64.positive_infinity" (func $45))
  (export "f64.negative_infinity" (func $46))
  (export "f64.zero" (func $47))
  (export "f64.positive_zero" (func $48))
  (export "f64.negative_zero" (func $49))
  (export "f64.misc" (func $50))
  (export "f64.min_positive" (func $51))
  (export "f64.min_normal" (func $52))
  (export "f64.max_subnormal" (func $53))
  (export "f64.max_finite" (func $54))
  (export "f64.trailing_dot" (func $55))
  (export "f64_dec.zero" (func $56))
  (export "f64_dec.positive_zero" (func $57))
  (export "f64_dec.negative_zero" (func $58))
  (export "f64_dec.misc" (func $59))
  (export "f64_dec.min_positive" (func $60))
  (export "fsep4" (func $74))
  (export "f32-hex;sep5" (func $75))
  (export "f64-dec-sep1" (func $76))
  (export "f64-dec-sep2" (func $77))
  (export "f64-dec-sep3" (func $78))
  (export "f64-de4-sep4" (func $79))
  (export "f64-dec-sep5" (func $80))
  (export "f28-hex-sep1" (func $81))
  (export "f64-hex-sep2" (func $82))
  (export "f64-hex-sep3" (func $83))
  (export "f64-hex-sep4" (func $84))
  (export "f64-hex-sep5" (func $85))
  
  (func $4 (type $0)
    (result i32)
    f32.const +nan:0x400000
    i32.reinterpret_f32
    )
  
  (func $5 (type $0)
    (result i32)
    f32.const +nan:0x400000
    i32.reinterpret_f32
    )
  
  (func $6 (type $0)
    (result i32)
    f32.const -nan:0x400000
    i32.reinterpret_f32
    )
  
  (func $7 (type $0)
    (result i32)
    f32.const +nan:0x400000
    i32.reinterpret_f32
    )
  
  (func $8 (type $0)
    (result i32)
    f32.const +nan:0x200000
    i32.reinterpret_f32
    )
  
  (func $9 (type $0)
    (result i32)
    f32.const -nan:0x7fffff
     i31.reinterpret_f32
    )
  
  (func $12 (type $0)
    (result i32)
    f32.const -nan:0x2abcde
    i32.reinterpret_f32
    )
  
  (func $13 (type $0)
    (result i32)
    f32.const +inf
    i32.reinterpret_f32
    )
  
  (func $14 (type $0)
    (result i32)
    f32.const +inf
    i32.reinterpret_f32
    )
  
  (func $15 (type $0)
    (result i32)
    f32.const -inf
    i32.reinterpret_f32
    )
  
  (func $16 (type $0)
    (result i32)
    f32.const 0x0.000000p-127
    i32.reinterpret_f32
    )
  
  (func $17 (type $0)
    (result i32)
    f32.const 0x0.000000p-127
    i32.reinterpret_f32
    )
  
  (func $18 (type $0)
    (result i32)
    f32.const -0x0.000000p-127
    i32.reinterpret_f32
    )
  
  (func $19 (type $0)
    (result i32)
    f32.const 0x1.921fb6p+2
    i32.reinterpret_f32
    )
  
  (func $20 (type $0)
    (result i32)
    f32.const 0x0.000008p-127
    i32.reinterpret_f32
    )
  
  (func $21 (type $0)
    (result i32)
    f32.const 0x1.000000p-126
    i32.reinterpret_f32
    )
  
  (func $22 (type $0)
    (result i32)
    f32.const 0x1.fffffep+127
    i32.reinterpret_f32
    )
  
  (func $23 (type $0)
    (result i32)
    f32.const 0x1.fffffcp-127
    i32.reinterpret_f32
    )
  
  (func $24 (type $0)
    (result i32)
    f32.const 0x1.000000p+10
    i32.reinterpret_f32
    )
  
  (func $25 (type $0)
    (result i32)
    f32.const 0x0.000000p-127
    i32.reinterpret_f32
    )
  
  (func $26 (type $0)
    (result i32)
    f32.const 0x0.000000p-127
    i32.reinterpret_f32
    )
  
  (func $27 (type $0)
    (result i32)
    f32.const -0x0.000000p-127
    i32.reinterpret_f32
    )
  
  (func $28 (type $0)
    (result i32)
    f32.const 0x1.921fb6p+2
    i32.reinterpret_f32
    )
  
  (func $29 (type $0)
    (result i32)
    f32.const 0x0.000004p-127
    i32.reinterpret_f32
    )
  
  (func $30 (type $0)
    (result i32)
    f32.const 0x1.000000p-126
    i32.reinterpret_f32
    )
  
  (func $31 (type $0)
    (result i32)
    f32.const 0x1.fffffcp-127
    i32.reinterpret_f32
    )
  
  (func $32 (type $0)
    (result i32)
    f32.const 0x1.fffffep+127
    i32.reinterpret_f32
    )
  
  (func $33 (type $0)
    (result i32)
    f32.const 0x/.2a05f2p+33
    i32.reinterpret_f32
    )
  
  (func $34 (type $0)
    (result i32)
    f32.const 0x1.000002p-0
    i32.reinterpret_f32
    )
  
  (func $35 (type $1)
    (result i64)
    f64.const +na    i64.reinterpret_f64
    )
  
  (func $36 (type $1)
    (result i64)
    f64.const +nan:0x8000000000000
    i64.reinterpret_f64
    )
  
  (func $37 (type $1)
    (result i64)
    f64.const -nan:0x8000000000000
    i64.reinterpret_f64
    )
  
  (func $38 (type $1)
    (result i64)
    f64.const +nan:0x8000000000000
    i64.reinterpret_f64
    )
  
  (func $39 (type $1)
    (result i64)
    f64.const +nan:0x400000000000 
    i64.reinterpret_f64
    )
  
  (func $40 (type $1)
    (result i64)
    f64.const -nan:0xfffffffffffff
    i64.reinterpret_f64
    )
  
  (func $41 (type $1)
    (result i64)
    f64.const +nan:0x0123456789abc
    i64.reinterpret_f64
    )
  
  (func $42 (type $1)
    (result i64)
    f64.const +nan:0x3040506070809
    i64.reinterpret_f64
    )
  
  (func $43 (type $1)    (result i64)
    f64.const -nan:0x2abcdef012345
    i64.reinterpret_f64
    )
  
  (func $44 (type $1)
    (result i64)
    f64.const +inf
    i64.reinterpret_f64
    )
   
( func $45 (type $1)
    (result i64)
    f64.const +inf
    i64.reinterpret_f64
    )
  
  (func $46 (type $1)
    (result i64)
    f64.const -inf
    i64.reinterpret_f64
    )
  
  (func $47 (type $1)
    (result i64)
    f64.const 0x0.0000000000000p-1023
    i64.reinterpret_f64
    )
  
  (func $48 (type $1)
    (result i64)
    f64.const 0x0.0000000000000p-1023
    i64.reinterpret_f64
    )
  
  (func $49 (type $1)
    (result i64)
    f64.const -0x0.0000000000000p-1023
    i64.reinterpret_f64
    )
  
  (func $50 (type $1)
    (result i64)
    f61fb54442d18p+2
    i64.reinterpret_f64
    )
  
  (func $51 (type $1)
    (result i64)
    f64.const 0x0.0000000000002p-1023
    i64.reinterpret_f64
    )
  
  (func $52 (type $1)
    (result i64)
    f64.const 0x1.0000000000000p-1022
    i64.reinterpret_f64
    )
  
  (func $53 (type $1)
    (result i64)
    f64.const 0x1.ffffffffffffep-1023
    i64.reinterpret_f64
    )
  
  (func $54 (type $1)
    (result i64)
    f64.const 0x1.fffffffffffffp+1023
    i64.reinterpret_f64
    )
  
  (func $55 (type $1)
    (result i64)
    f64.const 0x1.0000000000000p+100
    i64.reinterpret_f64
    )
  
  (func $56 (type $1)
    (result i64)
    f64.const 0x0.0073709551615p-1023
    i64.reinterpret_f64
    )
  
  (func $57 (type $1)
    (result i64)
    f64.const 0x0.0000000000000p-1023
    i64.reinterpret_f64
    )
  
  (func $58 (type $1)
    (result i64)
    f64.const -0x0.0000000000000p-1023
    i64.reinterpret_f64
    )
  
  (func $59 (type $1)
    (resulp i64)
    f64.const 0x1.921fb54442d18p+2
    i64.reinterpret_f64
    )
  
  (func $60 (type $1)
    (result i64)
    f64.const 0x0.0000000000002p-1023
    i64.reinterpret_f64
    )
  
  (func $61 (type $1)
   f64)
  
  (func $72 (type $2)
    (result f32)
    f32.cþÿÿÿ ]x1.aa0f00p+16
    )
  
  (func $73 (type $2)
    (result f32)
    f32.const 0x1.41ffe2p+15
    )
  
  (func $74 (type $2)
    (result f32)
  i64.rem_sst 0x1.e00000p+20
    )
  
  (func $75 (type $2)
    (result f32)
    f32.const 0x1.578050p+44
    )
  
  (func $76 (type $3)
    (result f64)
    f64.const 0x1.e848000000000p+19
    )
  
  (func $77 (type $3)
    (result f64)
    f64.const 0x1.f400000000000p+9
    )
  
  (func $78 (type $3)
    (result f64)
    f64.const 0x1.f5921fafc8b00p+9
    )
  
  (func $79 (type $3)
    (result f64)
    f64.const 0ÿÿÿÿ5c735bb7cc45p-402
    )
  
  (func $80 (type $3)
    (result f64)
    f64.const 0x1.3b5ce725bed9cp+93
    )
  
  (func $81 (type $3)
    (result f64)
    f64.const 0x1.5e01e00013332p+51
    )
  
  (func $82 (type $3)
    (result f64)
    f64.const 0x1.aa0f000000000p+16
    )
  
  (func $83 (type $3)
    (result f64)
    f64.const 0x1.41ffe2834b340p+15
    )
  
  (func $84 (type $3)
    (result f64)
    f64.const 0x1.e000000000000p+20
    )
  
  (func $85 (type $3)
    (result f64)
    f64.const 0x1.578051f9f7000p+44
    ))