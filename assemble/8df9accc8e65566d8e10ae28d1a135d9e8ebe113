(module
  (type $0 (func (result i64)))
  (type $1 (func (param i32) (result i32)))
  (type $2 (func (param f64) (result v128 externref)))
  (type $3 (func (param externref i64 i32 funcref) (result funcref f32)))
  (type $4 (func (param v128)))
  (type $5 (func (param externref)))
  (import "env" "memory" (memory $7 58 12044 shared))
  (import "env" "table" (table $6 44 4294967295 shared funcref))
  (import "env" "global1" (global $8 (mut i64)))
  (import "env" "global2" (global $9 externref))
  (import "env" "global3" (global $10 (mut v128)))
  (import "env" "global4" (global $11 externref))
  (import "env" "func0" (func $16 (param i32) (result i32)))
  (import "env" "func1" (func $17 (param f64) (result v128 externref)))
  (import "env" "func2" (func $18 (param externref i64 i32 funcref) (result funcref f32)))
  (import "env" "func3" (func $19 (param v128)))
  (global $12  (mut i64) (i64.const -5377176339491006371))
  (global $13  (mut v128) (v128.const i32x4 0xd0a3cc4f 0x8aa65ae1 0x48523ca3 0x2aad9678))
  
  (func $20 (type $0)
    (result i64)
    ref.null extern
    drop
    call $20
    i64x2.splat
    i64x2.neg
    f64x2.neg
    i16x8.any_true
    i64.load16_u offset=3255894839
    ref.null func
    ref.null extern
    block $block (param externref)
      global.get $8
      i64.const 4751364486033689341
      i64.or
      global.get $12
      i64.or
      global.set $8
      ref.null func
      br $block
    end ;; $block
    drop
    br 0
    )
  
  (data $14 
    "\8b\fc\95k\d6[\a3\e6\94")
  
  (data $15 (i32.const 354060135)
    "ES\c8\ce\d0\d6\02\aa\d9\9d&\e9#-\1aj:\dd\05\9c\aa\98\c9\96\e3J\e7\15\f57k\c3\ceB\b6/]\16\1c,T\b2\db\bb\06T\10"))