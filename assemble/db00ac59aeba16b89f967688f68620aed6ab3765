(module
  (type $0 (func (param i64 v128 i32 v128) (result funcref)))
  (type $1 (func (param f32 i64 funcref f64) (result f32 externref)))
  (type $2 (func (result f64 v128)))
  (type $3 (func (param externref f32 v128)))
  (type $4 (func (param f64 funcref f64 i32)))
  (type $5 (func (param f64 v128 i32) (result f64 i64 funcref i64)))
  (import "env" "memory" (memory $6 56 22682 shared))
  (import "env" "memory" (memory $7 13 14496 shared))
  (import "env" "global2" (global $9 i32))
  (import "env" "global3" (global $10 i32))
  (import "env" "global7" (global $11 f64))
  (import "env" "global8" (global $12 (mut funcref)))
  (import "env" "func0" (func $19 (param i64 v128 i32 v128) (result funcref)))
  (import "env" "func1" (func $20 (param externref f32 v128)))
  (memory $8  15 15190 shared)
  (global $13  (mut i64) (i64.const 6348958337987355505))
  (global $14  i32 (i32.const 1705069257))
  (global $15  f64 (f64.const 0x1.ccb02dd681e15p+62))
  (global $16  (mut i64) (i64.const -1875942186037838592))
  (global $17  (mut funcref) (ref.null func))
  
  (func $21 (type $1)
    (param $0 f32)
    (param $1 i64)
    (param $2 funcref)
    (param $3 f64)
    (result f32 externref)
    (local $4 f32)
    (local $5 v128)
    (local $6 externref)
    (local $7 f32)
    unreachable
    )
  
  (func $22 (type $2)
    (result f64 v128)
    (local $0 f64)
    global.get $16
    data.drop $18
    i64.const 7133465180389863802
    f32.convert_i64_s
    i32.trunc_sat_f32_s
    i64.load16_s $7 offset=1175773029 align=1
    i64.lt_s
    v32x4.load_splat $8 offset=164000958 align=1
    f32x4.neg
    f32.const -0x1.f91e78p-49
    i32.const 292465891
    f32.reinterpret_i32
    f32.sqrt
    f32.min
    f32x4.splat
    i16x8.gt_s
    unreachable
    )
  
  (func $23 (type $4)
    (param $0 f64)
    (param $1 funcref)
    (param $2 f64)
    (param $3 i32)
    local.get $0
    global.get $10
    i16x8.load8x8_s $7 offset=274452320 align=2
    global.get $13
    local.get $2
    memory.size
    v8x16.load_interleaved_4 $7 offset=2445316830
    f64x2.div
    i32x4.ge_u
    f32x4.neg
    i8x16.extract_lane_u 4
    global.get $10
    i32.or
    i32.load16_u $7 offset=456959798
    loop $loop (param f64 v128 i32) (result f64 i64 funcref i64)
      i32.clz
      i64.extend_i32_s
      f64.reinterpret_i64
      drop
      br 1
    end ;; $loop
    br 0
    )
  
  (data $18 (memory $8) (i32.const -1980812621)
    "\1bz~\04j\e5\f0\08>\83\88R\8an\81\10\dc\10"))