(module
  (type $0 (func (param v128 i64 f64 i64) (result f64 i64)))
  (type $1 (func (param i32 v128 funcref) (result v128 v128)))
  (type $2 (func (result f32 i32)))
  (type $3 (func (result f64 f32)))
  (import "env" "memory" (memory $7 60 32263 shared))
  (import "env" "memory" (memory $8 39 21117))
  (import "env" "table" (table $4 48 4294967295 shared funcref))
  (import "env" "table" (table $5 97 4294967295 externref))
  (import "env" "global0" (global $10 funcref))
  (import "env" "global2" (global $11 i64))
  (import "env" "func0" (func $17 (param v128 i64 f64 i64) (result f64 i64)))
  (memory $9  23 1902)
  (table $6  30 4294967295 shared funcref)
  (global $12  externref (ref.null extern))
  (global $13  (mut f64) (f64.const 0x1.61325378c4d3fp+62))
  (global $14  funcref (ref.null func))
  (global $15  externref (ref.null extern))
  (elem $16 global
    $12 $12 $10 $11 $13 $13 $10 $11
    $14)
  
  (func $18 (type $1)
    (param $0 i32)
    (param $1 v128)
    (param $2 funcref)
    (result v128 v128)
    elem.drop $16
    local.get $2
    i64.const 2672187457414717149
    elem.drop $16
    block $block (result f32 i32)
      i64.const 3173917070613412825
      i64.extend32_s
      global.get $11
      i64.and
      i64.eqz
      f64.convert_i32_u
      global.set $13
      f32.const 0x1.eb441cp+115
      loop $loop (result f64 f32)
        memory.size $8
        br_if $loop
        f32.const 0x1.102750p-76
        ref.null func
        drop
        br $loop
      end ;; $loop
      unreachable
    end ;; $block
    drop
    unreachable
    ))