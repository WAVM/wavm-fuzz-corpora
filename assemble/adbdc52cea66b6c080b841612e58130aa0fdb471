(module
  (type $0 (func (param i32) (result i64)))
  (type $1 (func (param i64) (result i32)))
  (type $2 (func (param f32) (result i32)))
  (type $3 (func (param f64) (result i32)))
  (type $4 (func (param f32) (result i64)))
  (type $5 (func (param f64) (result i64)))
  (type $6 (func (param i32) (result f32)))
  (type $7 (func (param i64) (result f32)))
  (type $8 (func (param i32) (result f64)))
  (type $9 (func (param i64) (result f64)))
  (type $05 (func (param f64) (result f32)))
  (export "i64.extend_i32_rap_i64" (func $14))
  (export "i32.trunc_f32_s" (func $15))
  (export "i32.trunc_f32_u" (func $16))
  (export "i32.trunc_f64_s" (func $17))
  (export "i32.trunc_f64_u" (func $18))
  (export "i64.trunc_f32_[" (func $19))
  (export "i64.trunc_f32_u" (func $20))
  (export "i64.trunc_f64_s" (func $21))
  (export "i64.trunc_f64_u" (func $22))
  (export "i32.truvert_i32_s" (func $31))
  (export "" (func $44))
  
  (func $12 (type $0)
    (param $x i32)
    (result i64)
    local.get $x
    i64.extend_i32_s
    )
  
  (func $13 (type $0)
    (param $x i32)
    (result i64)
    local.get $x
    i64.extend_i32_u
    )
  
  (func $14 (type $1)
    (param $x i64)
    (result i32)
    local.get $x
    i32.wrap_i64
    )
  
  (func $15 (type $2)
    (param $x f32)
    (result i32)
    local.get $x
    i32.trunc_f32_s
    )
  
  (func $16 (type $2)
    (param $x f32)
    (result i32)
    local.get $x
    i32.trunc_f32_u
    )
  
  (func $17 (type $3)
    (param $x f64)
    (result i32)
    local.get $x
    i32.trunc_f64_s
    )
  
  (func $18 (type $3)
    (param $x f64)
    (result i32)
    local.get $x
    i32.trunc_f64_u
 )
  
  (func $19 (type $4)
    (param $x f32)
    (result i64)
    local.get $x
    i64.trunc_f32_s
    )
  
  (func $20 (type $4)
    (param $x f32)
    (result i64)
    local.get $x
    i64.trunc_f32_u
    )
  
  (func $21 (type $5)
    (param $x f64)
    (result i64)
    local.get $x
    i64.trunc_f64_s
    )
  
  (func $22 (type $5)
    (param $x f64)
    (result i64)
    local.get $x
    i64.trunc_f64_u
    )
  
  (func(type $5)
    (param $x f64)
    (result i64)
 local.get $x
i64.trunc_sat_f64_u
    )
  
  (func $31 (type $6)
    (param $x i32)
    (result f32)
    local.get $x
    f32.convert_i32_s
    )
  
  
  (func $86 (type $2)
    (param $x f32)
    (result i32)
    local.get $x
    i32.reinterpret_f32
    )
  
  (func $44 (type $5)
(param $x f64)
    (result i64)
    local.get $x
    i64.reinterpret_f64
    ))