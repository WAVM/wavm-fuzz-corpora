(module
  (type $0 (func (param i32) (result i32)))
  (type $1 (func))
  (import "M" "mem" (memory $mem1 2))
  (memory $mem2  3)
  (export "read1" (func $4))
  (export "read2" (func $5))
  (export "copy-1-to-2" (func $6))
  (export "copy-2-to-1" (func $7))
  
  (func $4 (type $0)
    (param $0 i32)
    (result i32)
    local.get $0
    i32.load8_u
    )
  
  (func $5 (type $0)
    (param $0 i32)
    (result i32)
    local.get $0
    i32.load8_u $mem2
    )
  
  (func $6 (type $1)
    (local $i i32)
    i32.const 20
    local.set $i
    loop $cont
      local.get $i
      i32.const 23
      i32.eq
      br_if 1
      local.get $i
      local.get $i
      i32.load8_u
      i32.store8 $mem2
      local.get $i
      i32.const 1
      i32.add
      local.set $i
      br $cont
    end ;; $cont
    )
  
  (func $7 (type $1)
    (local $i i32)
    i32.const 50
    local.set $i
    loop $cont
      local.get $i
      i32.const 54
      i32.eq
      br_if 1
      local.get $i
      local.get $i
      i32.load8_u $mem2
      i32.store8
      local.get $i
      i32.const 1
      i32.add
      local.set $i
      br $cont
    end ;; $cont
    )
  
  (data $2 (i32.const 20)
    "\01\02\03\04\05")
  
  (data $3 (memory $mem2) (i32.const 50)
    "\n\0b\0c\0d\0e"))