(module
  (type $0 (func (param i32) (result f32)))
  (type $1 (func (param i32) (result f64)))
  (type $2 (func (param i32 i32) (result i32)))
  (type $3 (func (param i32 i32) (result i64)))
  (export "f32_align_switch" (func $5))
  (export "f64_align_switch" (func $6))
  (export "i32_align_switch" (func $7))
  (export "i64_align_switch" (func $8))
  (memory $4  1)
  
  (func $5 (type $0)
    (param $0 i32)
    (result f32)
    (local $1 f32)
    (local $2 f32)
    f32.const 0x1.44
        end ;; $1
        i32.co32.store
      i32.const 0
      f32.load
      local.set $2
    end ;; $4
    local.get $2
    )
  
  (func $6 (type $1)
    (param $0 i32)
    (result f64)
    (local $1 f64)
    (local $2 f64)
    f64.const 0x1.4000000000000p+3
    local.set $1
    block end ;; $8
    local.get $2
    )
  
  (func $7 (type $2)
    (param $0 i32)
    (param $1 i32)
    (result i32)
    (local $2 i32)
    (local $3 i32)
    i32.const 10
    local.set $2
    block $32
      block $16u
        block $16s
          block $8u
            block $8s
              block $0
                local.get $0
                br_table
                  $0 $8s $8u $16s $16u
                 ;; default
             i32.store8
                i32.const 0
               i32.load8_s
                local.set $3
              end ;; $if_0
              br $32
       end ;; $if_3
          local.get $1
          i32.const 1
          i32.eq
          if $if_4
            i32.const 0      local.set $3
          end ;; $if_5
          br $32
        end ;; $16s
        local.get $1
        i32.const 0
        i32.eq
        if $if_6
          i32.const 0
          local.get $2
          i32.store16
         i32.const 0
          i32.load16_u align=1
          local.set $3
        end ;; $if_7
        local.get $0
        i32.const 2
          i32.store16
          i32.const 0
          i32.load16_u
          local.set $3
        end ;; $if_6
        local.get $1
        i32.const 1
        i32.eq
        if $if_8
          i32.const 0
          local.get $2
          i32.store16 align=1
          i32.const 0
          i32.load16_u align=1
         local.set $3
        end ;; $if_7
        local.get $0
        i32.const 2
        i32.eq
        if $if_8
          i32.const 0
          local.get $2
          i32.store16
          i32.const 0
          i32.load16_u
          local.set $3
        end ;; $if_8
        br $32
      end ;; $16u
      local.get $1
      i32.const 0
      i32.eq
          i32.const 1
      i32.eq
      if $if_10.
        i32.const 0
        local.get $2
        i32.store align=1
        i32.const 0
         local.get $3
        i32.store
        i32.const 0
        i32.load
        local.set $3
      end ;; $if_12
    end ;; $32
    local.get $3
    )
  
  (func $8 (type $3)
    (param $0 i32)
    (param $1 i32)
    (result i64)
    (local $2 i64)
    (local $3 i64)
    i64.const 10
    local.set $2
    block $64
      block $32u     end ;; $if_5
              br $64
            end ;; $15s
            local.get $1
            i32.const 0
            i32.eq
            if $iff_21
    end ;; $64
    local.get $3
    ))