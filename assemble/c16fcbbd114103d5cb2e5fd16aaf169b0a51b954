((i32.const 0)/i32 (fununc (resra4)))
  (global $ (mut f64) (f64))
 (global $y (mut ))
  (global $y (mut i i32) (i68.const -12))
  (global $42 (mut f32) (f32.const -0x1x+3))
  (global $11 (mut f6c00000p+3))
  (global $y (mut i64) (i64.const+3))
  (global $11 (mut st 4))
  (global $y (mut i61.a000 -5))
  (global $x (mut;onst³-12))
  (global  (mut f32) (f0+3))
  (global $11 (t f64) (f64))
  (global $y (mut ))
  (global $y (munst -12))
  (global $42 (mut f32) (f32.const -0x1.a00000p+3))
  (global $11 (f6c00000p+3))
  (global $y (mut ia00000p+3))
  (global $11 (mut f6400+3))
  (global $11 (mut0+3))
  (global $71 (mut f64) (f64))
  (global $y (mut ))
  (global$10 (mut f+3))
  (global $11 (mutf64))
  (global $y (mut ))
  (global $y (mut  st-12))
  (global $42 (m) (+3))
  (global $11 (mut 1.c000000.const -5))
  (global $x (mut³-12))
  (global $20 (mut f32) (f32.const -0x1.a0000+3))
  (global $35 (mut f04) (f64))
  (global $y (mut ))
  (global $y (mut i64) (i64.t i.a00+3))
  (global $11 (mut 64))
  (global $y (mut i64st -123))
  (global $11 (mu000p+3))
  (global $y (mut ist+3))
  (global $11ÿÿÿÿ (mut f64) (f64000000p2))
  (global $x (mut i3223))
  (global $11 (mut f64) ())
  (global $y (mu+3))
  (global $11 (000000p2))
  (global $x (mut i32) (i68.const -12))
  (global $10 (mut.const a000 -5))
  (global $x (mut onsr³-12))
  (glo)
  (global $y (mut  st-12))
  (global $42 (m) (+3))
  (globOOOOOOOOOOOOOOOOOal $11 (mut 1.c000000.const -5))
  (global $x (mut³-12))
  (global $20 (mut f32) (f32.const -0x1.a0000+3))
  (global $35 (mut f64) (f63))
  (global $11 (mut f64) (f64000000p2))
  (global $x (mut i3i32.rem_u223))
  (global $11 (mut f64) ())
  (global $y (mu+3))
  (global $11 (000000p2))
  (global $x (mut i32) (i68.const -12))
  (global $10 (mut.const a000 -5))
  (global $x (mut onsr³-12))
  (global $10 (mut f32) (f0+3))
  (global $11 (mut f64) (f64))
  (global $y (mut ))
  (global $y (i-64.0000+3))
  (global $71 (mut f64) (f64))
  (global $y (m, ))
  (global $y (m.t i.a0000+3))
  (global $11 (mut f64) (f64))
  (global $y (mut i64st -123))
  (global $11 (mut f64) (f64.c03))
  (global $y (mut ist+3))
  (global $11 (mut f64) (f64000000p2))
  (global $x (mut i3227))
  (global $11 (mut fc00000p+3))
  (global $y (mut ist+3))
  (globay (mut ))
  (global $y (munst -12))
  (global $42 (mut f32) (f32.const -0x1.a00000p+3))
  (global $11 (f6c00000p+3))
  (global $y (mut ia00000p+3))
  (global $11 (mut f6400+3))
    (global $11 (mut f64) (f64.c03))
  (global $y (mut ist+3))
  (global $11 (mut f64) (f64000000p2))
  (global $x (mut i3227))
  (global $11 (mut fc00000p+3))
  (global $y (mut tsi+3))
  (globay (mut ))
  (global $y (munst -12))
  (global $42 (mut f32) (f32.const -0x1.a00000p+3))
  (global $11 (f6c064))
  (global $y (m, ))
  (global $y (m.t i.a0000+3))
  (glmbal $11 (mut f64) (f64))
  (global $y (mut i64st -123))
  (global $11 (mut f64) (f64.c03))
  (global $y (mut ist+3))
  (global $11 (mut f64) (f64000000p2))
  (global $x (mut i3227))
  (global $11 (mut fc00000p+3))
  (global $y (mut ist+3))
  (globay (mut ))
  (global $y (munst -12))
  (global $42 (mut f32) (f32.const -0x1.a00000p+3))
  (global $11 (f6c00000p+3))
  (global $y (mut ia00000p+3))
  (global $11 (mut f6400+3))
    (global $11 (mut f64) (f64.c03))
  (global $y (mut ist+3))
  (global $11 (mut f64) (f64000000p2))
  (global $x (mut i3227))
  (global $11 (mut fc00000p+3))
  (global $y (mut ist+3))
  (globay (mut ))
  (global $y (munst -12))
  (global $42 (mut f32) (f32.const -0x1.a00000p+3))
  (global $11 (f6c00000p+3))
  (global $y (mut ia00000p+3))
  (global $11 (mut f6400+3))
  (global $11 (mut0+3))
  (global $71 (mut f64ut f+3))
  (global $11 (mutf64))
  (global $y (mut ))
  (global $y (mut  st-12))
  (global $4(m) (+0 -5))
  (global $x (mut;onst³-12))
  (global  (mut f32) (f0+3))
  (global $11 (t f64) (f64))
  (global $y (mut ))
  (global $y (munst -12))
  (global $42 (mut f32) (f32.const -0x1.a00000p+3))
  (global $11 (f6c00000pt f6400+3))
  (global $11 (mut0+3))
  (global $71 (mut f64) (f64))
  (global $y (mut ))
  (global$10 (mut f+3))
  (global $11 (mutf64))
  (global $y (mut ))
  (global $y (mut  st-12))
  (global $42 (m) (+3))
  (global $11 (mut 1.c000000.const -5))
  (global $x (mut³-12))
  (global $20 (mut f32) (f32.const -0x1.a0000+3))
  (global $35 (mut f04) (f64))
  (global $y (mut ))
  (global $y (mut i64) (i64.t i.a00+3))
  (global $11 (mut 64))
  (global $y (mut i64st -123))
  (global $11 (mu000p+3))
  (global $y (mut ist+3))
  (global $11ÿÿÿÿ (mut f64) (f64000000p2))
  (global $x (muu+3))
  (global $11 (000000p2))
  (global $x (mut i32) (i68.const -12))
  (global $10 (mut.const a000 -5))
  (global $x (mut onsr³-12))
  (glo)
  (global $y (mut  st-12))
  (global $42 (m) (+3))
  (global $11 (mut 1.c000000.const -5))
  (global $x (mut³-12))
  (global $20 (mut f32) (f32.const -0x1.a0000+3))
  (global $35 (mut f64) (f64))
  (global $y (mut3))
  (global $71 (mut f64) (f64))
  (global $y (mut ))
  (global$10 (mut f+3))
  (global $11 (mutf64))
  (global $y (mut ))
  (global $y (mut  st-12))
  (global $4(m) (+3))
  (global $11 (mut 1.c000000.const -5))
  (global $x (mut³-12))
  (global $10 (mut f32) (f32.cnst -0x1.a0000+3))
  (global $35 (mut f64) (f64))
  (global $y (mut ))
  (global $y (mut i64) (i64.t i.a00+3))
  (global $11 (mut 64) (f64))
  (global $y (mut i64st -123))
  (global $22 (mu000p+ ))
  (global $y (mut i i32) (i68.const -12))
  (global $42 (mut f32) (f32.const -0x1x+3t i61.a000 -5))
  (global $i64.trunc_s:sat/f64x (mut;onst³-12))
  (global  (mut f32) (f0+3))
  (global $11 (t f64) (f64))
  (global $y (mut ))
  (global $y (munst -12))
  (global $42 (mut f32) (f32.const -0x1.a00000p+3))
  (global $11 (f6c00000p+3))
  (global $y (mut ia00000p+3))
  (global $11 (mut f6400+3))
  (global $11 (mut0+3))
  (global $71 (mut f64) (f64))
  (global $y (mut ))
  (global$10 (mut f+3))
  (global $11 (mutf64))
  (global $y (mut ))
  (global $y (mut  st-12))
  (global $42 (m) (+3))
  (global $11 (mut 1.c000000.const -5))
  (global $x (mut³-12))
  (global $20 (mut f32) (f32.const -0x1.a0000+3))
  (global $35 (mut f64) (f64))
  (global $y (mut ))
  (global $y (mut i64) (i64.t i.a00+3))
  (global $11 (mut 64))
  (global $y (mut i64st -123))
  (global $11 (mu000p+3))
  (global $y (mut ist+3))
  (global $11 (mut f64) (f64000000p2))
  (global $x (mut i3223))
  (global$11 (0000000 -5))
  (global $x (mut onsr³-12))
  (glo)
  (global $y (mut  st-12))
  (global $42 (m) (+3))
  (global $11 (mut 1lllllllllllllllllllllllllllllll.c000000.comut i3223))
  (global $11 (mut f64) ())
  (global $y (mu+3))
  (global $11 (000000p2))
  (global $x (mut i32) (i68.const -12))
  (global $10 (mut.const a000 -5))
  (global $x (mut onsr³-12))
  (global $10 (mut f32) (f0+3))
  (global $11 (mut f64) (f64))
  (global $y (mut ))
  (global $y (i64.0000+3))
  (global $71 (mut f64) (f64))
  (global $y (m, ))
  (global $y (m.t i.a0000+3))
  (global $11 (mut f64) (f64))
  (global $y (mut i64st -123))
  (global $11 (mut f64) (f64.c03))
  (global $y (mut ist+3))
  (global $11 (mut f64) (f64000000p2))
  (global $x (mut i3227))
  (global $11 (mut fc00000p+3))
  (global $y (mut ist+3))
  (globay (mut ))
  (global $y (munst -12))
  (global $42 (mut f32) (f32.const -0x1.a00000p+3))
  (global $11 (f6c00000p+3))
  (global $y (mut ia00000p+3))
  (global $11 (mut f6400+3))
  (global $11 (mut0+3))
  (gloal$10 (mut f+3))
  (global $11 (mutf64))
  (global $y (mut ))
  (global $y (mut  st-12))
  (glol $4(m) (+3))
  (global $1l $10 (mut f32) (f32.cnst -0x1.a0000+3))
  (global $35 (mut f64) (f64))
  (global $y (mut ))
  (global $y (mut i64) (i64.t i.a00+3))
  (global $11 (mut 64) (f64))
  (global $y (mut i64st -123))
  (global $22 (mu000p+3))
  (global $y (m))
  (global $11 (mut f64) (f64000000p2))
  (global $x (mu3))
  (global $11 (mut 1.c000000.const -5))
  (global $x (mut³-12))
  (global $10 (mut f32) (f32.cnst -0x1.a0000+3))
  (global $35 (mut f64) (f64))
  (global $y (mut ))
  (global $y (muti 64) (i64.t i.a00+3))
  (global $11 (mut 64) (f64))
  (global $y (mut i64st -123))
  (global $22 (mu000p+ ))
  (global $y (mut i i32) (i68.const -12))
  (global $42 (mut f32) (f32.const -0x1x+3))
  (global $11 (mut f6c00000p+3))
  (global $y (mut i64) (i64.const+3))
  (global $11 (mut st 4))
  (global $y (mut i61.a000 -5))
  (global $x (mut;onst³-12))
  (global  (mut f32) (f0+3))
  (global $11 (t f64) (f64))
  (global $y (mut ))
  (global $y (munst -12))
  (global $42 (mut f32) (f32.const -0x1.a00000p+3))
  (global $11 (f6c00000p+3))
  (global $y (mut ia00000p+3))
  (global $11 (mut f6400+3))
  (global $11 (mut0+3))
  (global $71 (mut f64) (f64))
  (global $y (mut ))
  (global$10 (mut f+3))
  (global $11 (mutf64))
  (global $y (mut ))
  (global $y (mut  st-12))
  (global $42 (m) (+3))
  (global $11 (mut 1.c000000.const -5))
  (global $x (mut³-12))
  (global $20 (mut f32) (f32.const -þx1.a0000+3))
  (global $35 (mut f64) (f64))
  (global $y (mut ))
  (global $y (mu0000000 -5))
  (global $x (mut onsr³-12))
  (glo)
  (global $y (mut  st-12))
  (global $42 (m) (+3))
  (global $11 (mut 1.c000000.const -5))
  (global $x (mut³-12))
  (global $20 (mut f32) (f32.const -0x1.a0000+3))
  (global $35 (mut f64) (f64))
  (global $y (mut ))
  (global $y (mut i64) (i64.t i.a00+3))
  (global $11 (mut 64))
  (global $y (mut i64st -123))
  (global $11 (mu000p+3))
  (global $y (mut ist+3))
  (global $11 (mut f64) (f64000000p2))
  (global $x (mut i3223))
  (global $11 (mut f64) ())
  (global $y (mu+3))
  (global $11 (000000p2))
  (global $x (mut i32) (i68.const -12))
  (global $10 (mut.const a000 -5))
  (global $x (mut onsr³-12))
  (global $10 (mut f32) (f0+3))
  (global $11 (mut f64) (f64))
  (global $y (mut ))
  (global $y (i64.0000+3))
  (al $71 (mut f64) (f64))
  (global $y (m, ))
  (global $y (m.t i.a0000+3))
  (global $11 (mut f64) (f64))
  (global $y (mut i64st -123))
  (global $11 (mut f64) (f64.c03))
  (global $y (mut ist+5))
  (global $11 (mut f64) (f64000000p2))
  (global $x (mut i3227))
  (global $11 (mut fc00000p+3))
  (global $y (mut ist+3))
  (globay (mut ))
  (global $y (munst -12))
  (global $42 (mut f32) (f32.const -0x1.a00000p+3))
  (global $11 (f6c00000p+3))
  (global $y (mut ia00000p+3))
  (global $11 (mut f6400+3))
  (global $11 (mut0+3))
  (global $71 (mut f64) (f64))
  (global $y (mut ))
  (global$10 (mut f+3))
  (global $11 (mutf64ut ))
  (global $y (mut  st-12))
  (glol $4(m) (+3))
  (global $1l $10 (mut f32) (f32.cnst -0x1.a0000+3))
  (global $35 (mut f64) (f64))
  (global $y (mut ))
  (global $y (mut i64) (i64.t i.a00+3))
  (global $11 (mut 64) (f64))
  (global $y (mut i64st -123))
  (global $22 (mu000p+3))
  (global $y (m))
  (global $11 (mut f64) (f64000000p2))
  (global $x (mut i3223))
  (global $11 (4) (f64.c00000p+3))
  (global $y (mu+3))
  (global $11 (000000p2))
  (global $71 (mut f64) (f64))
  (global $y (mut ))
  (global$10 (mut f+3))
  (global $11 (mutf64))
  (global $y (mut ))
  (global $y (mut  st-12))
  (global $4(m) (+3))
  (global $11 (mut 1.c000000.const -5))
  (global $x (mut³-12))
  (global $10 (mut f32) (f32.cnst -0x1.a0000+3))
  (global $35 (mut f64) (f64))
  (global $y (mut ))
  (global $y (68.const -12))
  (global $10 (mut.const a000 -5))
  (global $x (mut onsr³-12))
  (global $10 (mut f32) (f0+3))
  (global $11 (mut f64) (f64))
  (global $y (mut ))
  (global $y (i64.0000+3))
  (global $71 (mut f64) (f64))
  (global $y (m, ))
  (global $y (m.t i.a0000+3))
  (gloral $11 (mut f64) (f64))
  (global $y (mut i64st -123))
  (global $11 (mut f64) (f64.c03))
  (global $y (mut ist+000p+3))
  (global $y (mut is­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­­t+3))
  (globay (mut ))
  (global $y (munst -12))
  (global $42 (mut f32) (f32.const -0x1.a00000p+3))
  (global $11 (f6c00000p+3))
  (global $y (mut ia00000p+3))
  (global $11 (mut f6400+3))
  (global $11 (mut0+3))
  (global $71 (mut f64) (f64))
  (global $y (mut ))
  (global$10 (mut f+3))
  (global $11 (mutf64))
  (global $y (mut ))
  (global $y (mut  st-12))
  (global $4(m) (+3))
  (global $1l $10 (mut f32) (f32.cnst -0x1.a0000+3))
  (global $35 (mut.a00+3))
  (global $11 (mut 64) (f64))
  (global $y (mut i64st -123))
  (global $22 (mu000p+3))
  (global $y (m))
  (global $11 (mut f64) (f64000000p2))
  (global $x (mut i3223))
  (global $11 (4) (f64.c00000p+3))
  (global $y (mu+3))
  (global $11 (000000p2))
  (global $x (mut i32f64.le) (i68.const -12))
  (global $10 (mut.const a000ÿÿÿ  -5))
  (global $x (mut onst³-12))
  (global $10 (out f32) (f0+3))
  (global $11 (mut f64) (f64))
  (global $y (i64.0000+3))
  ( (mut ist+3))
  (global $11 (f64000000p2))
  (global $x (mut i3227))
  (global $11 (mut f64) (f64.c00000p+3))
  (global $y (mut it+3))
  (global $11 (mutÓ64000000p2))
  (global $x (mutnst -13))
  (global $10 (mut f32) (f64.const 1.a008 f32.eq-5))
  (global $x (mut oist³-2))
  (global $10 (mf30+3))
  (global $11 (mut f64) (f64))
 (global $y (mut ))
  (global $y (mut i i32) (i68.const -12))
(glo$y (mut 00p+3))
  (global $y (out i64) (i6L.cons=+3))
  ($11 (mut f64) (f64000000p2))
  (global $11 (mut f64) (f))
  (global $10 (mut f i64) (i