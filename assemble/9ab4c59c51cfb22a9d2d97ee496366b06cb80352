(module
  (type $0 (func (param v128 v128)))
  (type $1 (func (param i64 i32 f32)))
  (type $2 (func (param funcref externref v128) (result funcref f64)))
  (type $3 (func (param f32 f32) (result funcref externref)))
  (type $4 (func (result i32 v128)))
  (type $5 (func (param f64 f64) (result i64 v128)))
  (type $6 (func (param v128) (result i32 f32)))
  (import "env" "memory" (memory $8 13 53556 shared))
  (import "env" "memory" (memory $9 74 39192))
  (import "env" "memory" (memory $10 12 24986 shared))
  (import "env" "global1" (global $11 (mut v128)))
  (import "env" "global2" (global $12 f64))
  (import "env" "global4" (global $13 (mut externref)))
  (import "env" "func0" (func $21 (param v128 v128)))
  (import "env" "func1" (func $22 (param i64 i32 f32)))
  (table $7  78 4294967295 shared funcref)
  (global $14  externref (ref.null extern))
  (global $15  i64 (i64.const 8999632411214356212))
  (global $16  v128 (v128.const i32x4 0xb357d098 0x75f9e4f4 0x6ba632bf 0xc22fce94))
  (global $17  (mut funcref) (ref.null func))
  (global $18  (mut v128) (v128.const i32x4 0xff9820fc 0x0b3d79ce 0x7b93e713 0x0829a9eb))
  (global $19  (mut f32) (f32.const 0x1.9c472ep+28))
  (global $20  (mut f64) (f64.const 0x1.e76f3dadd1ac4p+63))
  
  (func $23 (type $2)
    (param $0 funcref)
    (param $1 externref)
    (param $2 v128)
    (result funcref f64)
    (local $3 f32)
    (local $4 i64)
    (local $5 f32)
    (local $6 f64)
    global.get $20
    local.get $6
    v128.const i32x4 0x7893c10f 0xea6cefd9 0xca9a2276 0xc3d4fc80
    i16x8.neg
    drop
    f64.nearest
    loop $loop (result i32 v128)
      f32.const 0x1.892734p-20
      local.set $3
      memory.size
      v16x8.load_interleaved_2 $9 offset=140369792 align=4
      i8x16.gt_s
      global.get $11
      i16x8.add_saturate_u
      i16x8.bitmask
      i64.atomic.load16_u offset=904668472
      br $loop
    end ;; $loop
    ref.null func
    unreachable
    )
  
  (func $24 (type $3)
    (param $0 f32)
    (param $1 f32)
    (result funcref externref)
    (local $2 i32)
    (local $3 f64)
    (local $4 externref)
    (local $5 i32)
    i64.const 40268303162264378
    local.get $4
    i32.const 383509978
    v16x8.load_interleaved_4 $10 offset=2373188542 align=1
    i16x8.add
    i16x8.eq
    i8x16.extract_lane_s 4
    global.get $12
    global.get $12
    loop $loop (param f64 f64) (result i64 v128)
      global.get $18
      f32x4.convert_i32x4_u
      block $block (param v128) (result i32 f32)
        i8x16.neg
        i32x4.bitmask
        v64x2.load_interleaved_2 $9 offset=2108654106 align=4
        i32x4.ne
        global.set $11
        unreachable
      end ;; $block
      local.set $1
      br_if $loop
      f64.add
      global.set $20
      global.get $16
      global.set $18
      global.get $18
      global.set $18
      global.get $19
      drop
      local.get $4
      drop
      local.get $5
      drop
      local.get $2
      local.set $2
      global.get $19
      local.set $1
      i64.const -2274911370807002628
      global.get $16
    end ;; $loop
    global.set $18
    i64.atomic.rmw8.sub_u $9 offset=2781894557
    drop
    global.set $11
    global.set $13
    drop
    global.get $16
    global.set $11
    atomic.fence
    local.get $1
    drop
    v128.const i32x4 0xb7a730d1 0x67024189 0xee949ee6 0xfd25190b
    ref.null func
    global.set $17
    unreachable
    ))