(module
  (type $0 (func (param i64 f64 f64) (result funcref i64)))
  (type $1 (func (param funcref) (result i64)))
  (type $2 (func (param f64 f32) (result funcref f32 i64 f64)))
  (import "env" "memory" (memory $4 12 58760 shared))
  (import "env" "global0" (global $6 (mut v128)))
  (import "env" "global1" (global $7 (mut i32)))
  (import "env" "global2" (global $8 v128))
  (import "env" "global6" (global $9 (mut f32)))
  (import "env" "global7" (global $10 externref))
  (memory $5  32 41742)
  (table $3  18 4294967295 shared funcref)
  (global $11  f32 (f32.const 0x1.527f48p+31))
  (global $12  externref (ref.null extern))
  (global $13  (mut funcref) (ref.null func))
  (global $14  (mut externref) (ref.null extern))
  
  (func $16 (type $0)
    (param $0 i64)
    (param $1 f64)
    (param $2 f64)
    (result funcref i64)
    (local $3 externref)
    (local $4 i32)
    (local $5 f64)
    local.get $3
    atomic.fence
    drop
    global.get $12
    local.get $0
    f64.convert_i64_s
    f32.const 0x1.0c62aep+119
    block $block (param f64 f32) (result funcref f32 i64 f64)
      local.get $3
      local.get $4
      i32.load16_s $5 offset=2175761010 align=1
      f64.load $5 offset=3262424202 align=2
      global.get $6
      i8x16.bitmask
      f64.load offset=2657178867 align=4
      f64.mul
      local.set $2
      global.set $14
      ref.null func
      drop
      ref.null func
      drop
      ref.null func
      global.set $13
      drop
      unreachable
    end ;; $block
    drop
    drop
    global.set $9
    ref.is_null
    table.get $3
    drop
    global.set $14
    global.get $12
    ref.null func
    ref.is_null
    local.set $4
    ref.null extern
    ref.null func
    unreachable
    )
  
  (func $17 (type $1)
    (param $0 funcref)
    (result i64)
    (local $1 f64)
    (local $2 i64)
    global.get $8
    i8x16.bitmask
    i32x4.splat
    i8x16.bitmask
    i64.load32_u offset=1408692648
    i64.popcnt
    global.get $12
    drop
    br 0
    )
  
  (data $15 
    ")\90\06$\14xT"))