(module
  (type $0 (func (result externref i64)))
  (type $1 (func (result v128 funcref)))
  (type $2 (func (result f64 i64)))
  (type $3 (func (result externref v128 v128)))
  (type $4 (func (param f64) (result v128 f64 externref f32)))
  (import "env" "table" (table $5 35 4294967295 shared funcref))
  (import "env" "table" (table $6 71 4294967295 externref))
  (import "env" "table" (table $7 89 4294967295 shared funcref))
  (import "env" "global0" (global $8 (mut i32)))
  (import "env" "global1" (global $9 f32))
  (import "env" "global2" (global $10 f32))
  (import "env" "func0" (func $18 (result v128 funcref)))
  (global $11  f64 (f64.const 0x1.4bff327e562aap+62))
  (global $12  (mut v128) (v128.const i32x4 0x7c0fe5e0 0x778a9996 0x2eb9b6db 0xf5cf3a24))
  (global $13  (mut f32) (f32.const 0x1.cc511ap+31))
  (global $14  (mut f64) (f64.const 0x1.520a1c039dc76p+63))
  (elem $15 funcref
    (ref.null func) (ref.func $20) (ref.func $18) (ref.null func)
    (ref.func $20) (ref.func $20) (ref.func $18) (ref.func $20)
    (ref.func $20) (ref.func $18) (ref.func $18) (ref.func $19)
    (ref.func $19) (ref.func $20) (ref.null func) (ref.func $18)
    (ref.null func) (ref.func $19) (ref.null func) (ref.func $18)
    (ref.func $20) (ref.func $18) (ref.func $19) (ref.func $18)
    (ref.func $18) (ref.null func) (ref.func $20) (ref.func $18)
    (ref.func $19) (ref.func $18) (ref.null func) (ref.func $18)
    (ref.func $19) (ref.func $18) (ref.null func) (ref.func $20)
    (ref.func $20) (ref.func $20) (ref.func $19) (ref.func $18))
  (elem $16 (table $6) (i32.const 760049253) externref
    (ref.null extern) (ref.null extern) (ref.null extern) (ref.null extern)
    (ref.null extern) (ref.null extern) (ref.null extern) (ref.null extern)
    (ref.null extern) (ref.null extern) (ref.null extern) (ref.null extern)
    (ref.null extern) (ref.null extern) (ref.null extern) (ref.null extern)
    (ref.null extern) (ref.null extern) (ref.null extern) (ref.null extern)
    (ref.null extern) (ref.null extern) (ref.null extern) (ref.null extern)
    (ref.null extern) (ref.null extern) (ref.null extern) (ref.null extern)
    (ref.null extern) (ref.null extern) (ref.null extern))
  
  (func $19 (type $0)
    (result externref i64)
    data.drop $17
    global.get $12
    i64x2.neg
    data.drop $17
    block $block (result externref v128 v128)
      unreachable
    end ;; $block
    i8x16.le_s
    i64x2.neg
    i32x4.trunc_sat_f32x4_u
    f32x4.sqrt
    data.drop $17
    f64x2.extract_lane 0
    loop $loop (param f64) (result v128 f64 externref f32)
      i32.trunc_f64_u
      nop
      ref.null extern
      drop
      drop
      table.size $5
      drop
      global.get $8
      ref.null func
      drop
      drop
      global.get $12
      table.size $7
      i16x8.replace_lane 3
      i32x4.bitmask
      table.get $5
      ref.is_null
      table.get $6
      ref.is_null
      global.set $8
      global.get $14
      br $loop
    end ;; $loop
    global.set $13
    ref.is_null
    table.get $6
    ref.is_null
    drop
    drop
    unreachable
    )
  
  (func $20 (type $2)
    (result f64 i64)
    (local $0 f64)
    (local $1 i64)
    (local $2 v128)
    nop
    elem.drop $15
    f64.const -0x1.5a847e65e80c8p-126
    block $block (result externref)
      local.get $0
      global.get $9
      table.size $6
      global.get $14
      f64.floor
      local.tee $0
      elem.drop $16
      f32.demote_f64
      global.get $12
      i32x4.bitmask
      call_indirect $7 (type $3)
      i16x8.eq
      global.set $12
      ref.is_null
      table.get $5
      unreachable
    end ;; $block
    ref.is_null
    table.get $7
    drop
    f64.ceil
    i64.trunc_f64_u
    unreachable
    )
  
  (data $17 
    "\nF\05"))