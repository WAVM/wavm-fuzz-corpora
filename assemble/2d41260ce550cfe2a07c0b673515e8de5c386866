(module
  (type $0 (func (param f64 funcref)))
  (type $1 (func (param v128 f32 f64) (result f64 v128)))
  (type $2 (func (param i64 f32 externref) (result f64 f32)))
  (type $3 (func (result f32 f32)))
  (type $4 (func (param funcref i64 i32 i64) (result v128 i64)))
  (type $5 (func (result f32 funcref f32 funcref)))
  (type $6 (func (param f32 funcref f32 funcref) (result i32 i32 i64 externref)))
  (import "env" "global4" (global $8 f32))
  (import "env" "func0" (func $14 (param v128 f32 f64) (result f64 v128)))
  (import "env" "func1" (func $15 (param i64 f32 externref) (result f64 f32)))
  (table $7  18 4294967295 externref)
  (global $9  v128 (v128.const i32x4 0x1d8cd26c 0x45469bd8 0x465198dd 0xc1e1fddd))
  (global $10  externref (ref.null extern))
  (global $11  (mut i64) (i64.const 1782082419436897982))
  (global $12  (mut v128) (v128.const i32x4 0x755cd672 0xd33411d6 0xa5dcf1c0 0x5973dc6f))
  (global $13  f64 (f64.const 0x1.ada7a4664c296p+60))
  
  (func $16 (type $0)
    (param $0 f64)
    (param $1 funcref)
    (local $2 v128)
    (local $3 i32)
    (local $4 i32)
    (local $5 funcref)
    nop
    local.get $2
    f32x4.extract_lane 1
    f64.promote_f32
    f64.trunc
    f64.trunc
    global.get $13
    f64.gt
    table.size $7
    i32.popcnt
    i32.sub
    local.tee $3
    i16x8.splat
    i16x8.widen_high_i8x16_u
    i32x4.all_true
    table.get $7
    br 0
    )
  
  (func $17 (type $3)
    (result f32 f32)
    global.get $9
    i8x16.bitmask
    f32.convert_i32_u
    global.get $11
    global.get $10
    i32.const -1307026104
    unreachable
    )
  
  (func $18 (type $4)
    (param $0 funcref)
    (param $1 i64)
    (param $2 i32)
    (param $3 i64)
    (result v128 i64)
    (local $4 i32)
    atomic.fence
    local.get $2
    local.tee $4
    f64.convert_i32_u
    loop $loop (result f32 funcref f32 funcref)
      local.get $2
      i64.extend_i32_u
      f64.convert_i64_u
      local.get $1
      i64.extend16_s
      unreachable
    end ;; $loop
    loop $loop_0 (param f32 funcref f32 funcref) (result i32 i32 i64 externref)
      f64.const -0x1.e20ae07c93c35p+78
      f64x2.splat
      i32x4.all_true
      local.set $2
      local.set $0
      unreachable
    end ;; $loop_0
    drop
    drop
    local.set $4
    table.get $7
    unreachable
    ))