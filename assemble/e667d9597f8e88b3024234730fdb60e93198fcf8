(module
  (type $0 (func (param externref externref) (result funcref)))
  (type $1 (func))
  (type $2 (func (param funcref v128 f64 f64) (result f32)))
  (type $3 (func (param i32 funcref) (result funcref externref)))
  (type $4 (func (param f32 i64) (result v128 i32)))
  (type $5 (func (result f64 i32 externref f32)))
  (type $6 (func (result externref funcref externref)))
  (type $7 (func (param i64) (result f64)))
  (type $8 (func (param f64 f64) (result funcref v128 externref f32)))
  (type $9 (func (result v128 f64 i64)))
  (type $10 (func (param externref i64 i32 externref) (result i64 externref f64)))
  (import "env" "memory" (memory $12 59 4220 shared))
  (import "env" "global2" (global $13 f64))
  (import "env" "func0" (func $20 (param f32 i64) (result v128 i32)))
  (table $11  29 4294967295 shared funcref)
  (global $14  externref (ref.null extern))
  (global $15  (mut externref) (ref.null extern))
  (global $16  (mut externref) (ref.null extern))
  (global $17  funcref (ref.null func))
  (global $18  (mut v128) (v128.const i32x4 0x4ae5820d 0x7f578833 0x5c0d158d 0x9e0cc380))
  (elem $19 exception_type)
  
  (func $21 (type $0)
    (param $0 externref)
    (param $1 externref)
    (result funcref)
    (local $2 i64)
    (local $3 externref)
    (local $4 i64)
    (local $5 externref)
    global.get $17
    global.get $14
    f64.const -0x1.01ea455b47c15p+381
    loop $loop (result f64 i32 externref f32)
      f32.const 0x1.3b45d0p+86
      global.get $13
      block $block (result externref funcref externref)
        global.get $17
        local.get $2
        elem.drop $19
        loop $loop_0 (param i64) (result f64)
          i64.ctz
          atomic.fence
          i32.wrap_i64
          nop
          br $loop
        end ;; $loop_0
        unreachable
      end ;; $block
      global.set $15
      unreachable
    end ;; $loop
    unreachable
    )
  
  (func $22 (type $1)
    (local $0 f64)
    (local $1 f32)
    (local $2 externref)
    br 0
    )
  
  (func $23 (type $2)
    (param $0 funcref)
    (param $1 v128)
    (param $2 f64)
    (param $3 f64)
    (result f32)
    (local $4 funcref)
    (local $5 f32)
    (local $6 i32)
    (local $7 f32)
    local.get $5
    ref.null extern
    atomic.fence
    nop
    global.get $17
    i64.const 2527523517191481641
    f64.reinterpret_i64
    local.get $2
    block $block (param f64 f64) (result funcref v128 externref f32)
      local.get $4
      loop $loop (result v128 f64 i64)
        local.get $1
        f32x4.convert_i32x4_s
        i32x4.trunc_sat_f32x4_s
        i32x4.trunc_sat_f32x4_s
        i32x4.widen_high_i16x8_s
        i8x16.extract_lane_u 9
        br_if $loop
        nop
        f32.const 0x1.042084p+127
        local.set $7
        f32.const -0x1.59570cp+84
        return
      end ;; $loop
      drop
      unreachable
    end ;; $block
    local.set $5
    ref.null func
    local.set $0
    global.set $15
    drop
    local.set $4
    ref.is_null
    local.set $6
    global.set $15
    ref.null extern
    ref.null func
    ref.is_null
    unreachable
    )
  
  (func $24 (type $3)
    (param $0 i32)
    (param $1 funcref)
    (result funcref externref)
    (local $2 i32)
    global.get $17
    f64.const 0x1.887bcd20023cdp-646
    nop
    f64.neg
    ref.null extern
    global.get $18
    i32x4.extract_lane 2
    i64.atomic.load32_u offset=1701702916
    local.get $0
    global.get $14
    block $block (param externref i64 i32 externref) (result i64 externref f64)
      global.set $15
      i64.extend_i32_s
      i64.lt_u
      nop
      local.set $2
      ref.is_null
      local.set $0
      v128.const i32x4 0xffaa7cee 0x162f013b 0x7169060e 0x77f182a5
      global.set $18
      memory.size
      table.get $11
      ref.null func
      local.set $1
      ref.null extern
      ref.null func
      unreachable
    end ;; $block
    ref.null extern
    global.set $15
    ref.null func
    local.set $1
    unreachable
    ))