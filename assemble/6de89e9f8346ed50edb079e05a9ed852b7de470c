(module
  (type $check (func (param i32 i32) (result i32)))
  (type $0 (func))
  (type $1 (func (param i32 i32 i32) (result i32)))
  (type $2 (func (result i32)))
  (type $3 (func (param i32)))
  (type $4 (func (param i32) (result i32)))
  (type $5 (func (param i32 i32)))
  (memory $7  1)
  (table $6  1 1 funcref)
  (global $a  (mut i32) (i32.const 0))
  (export "as-func-first" (func $9))
  (export "as-func-mid" (func $10))
  (export "as-func-last" (func $11))
  (export "as-func-everywhere" (func $12))
  (export "as-drid" (func $86))
  (export "as-store-last" (func $87))
  (export "as-store-everywhere" (func $88))
  (elem $8 (i32.const 0)
    $func)
  
  (func $dummy (type $0)
    )
  
  (func $3-ardd
    )
  
  (func $9 (type $2)
    (result i32)
    nop
    i32.const 1
    )
  
  (func $10 (type $2)
    (result i32)
    call $dummy
    nop
    i32.const 2
    )
  
  (func $11 (type $2)
    (result i32)
    call $dummy
    i32.const 3
    nop
    )
  
  (func $12 (type $2)
     (result i32)
    nop
    local.get $0
    memory.grow
    )
  
  (func $66 (type $4)
    (param $0 i32)
    (result i32)
    local.get $0
    nop
    memory.grow
    )
  
  (func $67 (type $4)
    (param $0 i32)
    (result i32)
    nop
    nop
    local.get $0
    nop
    nop
    memory.grow
    )
  
  (func $func (type $check)
    (param $0 i32)
    (param $1 i32)
    (result i32)i32.reinterpr6 (type $check)
    end ;; $block
    )
  
  (func $71 (type $2)
    (result i32)
    block $block (result i32)
      i32.const 1
      i32.const 2
      i32.const 0
      nop
      call_indirect $6 (type $e
c)chk    end ;; $block
    )
  
  (func $72 (type $2)
    (result i32)
    block $block (result i32)
      nop
      nop
      i32.const 1
      nop
      nop
      i32.const 2
      nop
      nop
 0
    nop
    nop
    i32.load
    )
  
  (func $85 (type $5)
    (param $0 i32)
    (param $1 i32)
    nop
    local.get $0
    local.get $1
    i32.store
    )
  
  (func $86 (type $5)
    (param $0 i32)
    (param $1 i32)
    local.get $0
    nop
    local.get $1
    i32.store
    )
  
  (func $87 (type $5)
    (param $0 i32)
    (param $1 i32)
    local.get $0
    local.get $1
    nop
    i32.store
    )
  
  (func $88 (type $5)
    (param $0 i32)
    (param $1 i32)
    nop
    nop
   l ocal.get $0
    nop
    nop
    local.get $1
    nop
    nop
    i32.store
    ))