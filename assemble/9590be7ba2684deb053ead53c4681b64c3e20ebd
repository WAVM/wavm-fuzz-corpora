(module
  (type $0 (func (param externref externref externref i32)))
  (type $1 (func (param i64 v128) (result externref i32)))
  (type $2 (func (param v128 funcref f64) (result f64)))
  (import "env" "table" (table $3 32 4294967295 externref))
  (import "env" "global0" (global $4 (mut funcref)))
  (import "env" "global1" (global $5 v128))
  (import "env" "global5" (global $6 externref))
  (import "env" "func0" (func $14 (param externref externref externref i32)))
  (import "env" "func1" (func $15 (param v128 funcref f64) (result f64)))
  (global $7  f64 (f64.const 0x1.542c45fbe92afp+61))
  (global $8  (mut v128) (v128.const i32x4 0x388700eb 0xd34f7f13 0x9a49f5fe 0x083a50b7))
  (global $9  (mut v128) (v128.const i32x4 0xee7a7861 0x040b46a9 0x5b2813b3 0xdd03d3fe))
  (global $10  f32 (f32.const 0x1.5ef222p+30))
  (global $11  f64 (f64.const 0x1.9eff666ea55e4p+62))
  
  (func $16 (type $1)
    (param $0 i64)
    (param $1 v128)
    (result externref i32)
    (local $2 externref)
    (local $3 externref)
    (local $4 i64)
    ref.null extern
    local.set $2
    global.get $10
    global.get $6
    global.get $4
    global.get $6
    f32.const 0x1.7e8640p-71
    global.get $7
    local.get $3
    ref.is_null
    drop
    f64.const -0x1.f0f4c613d5171p+617
    f64.min
    global.get $11
    f64.min
    drop
    f32.sqrt
    global.get $8
    global.get $6
    local.set $3
    ref.null extern
    ref.null extern
    local.set $2
    unreac0\c0\ceQ\b3Wz\107"))