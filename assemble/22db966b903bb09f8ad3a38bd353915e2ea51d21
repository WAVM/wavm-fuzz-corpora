(module
  (type $0 (func (param v128)))
  (type $1 (func (param funcref funcref)))
  (type $2 (func (param i32 v128 i32 f32) (result funcref)))
  (type $3 (func (param i64)))
  (type $4 (func (param f64) (result i32 i32)))
  (type $5 (func (param v128 i64) (result f64 f64)))
  (type $6 (func (param f64 f64 i64) (result i32 f32 funcref)))
  (import "env" "table" (table $7 22 4294967295 externref))
  (import "env" "func0" (func $12 (param v128)))
  (memory $9  79 10387 shared)
  (table $8  60 4294967295 shared externref)
  (global $10  (mut i32) (i32.const 1660081374))
  (elem $11 global
    $10 $10 $10 $10)
  
  (func $13 (type $1)
    (param $0 funcref)
    (param $1 funcref)
    (local $2 funcref)
    (local $3 i32)
    (local $4 f32)
    (local $5 f64)
    table.size $8
    table.size $8
    i32.and
    v8x16.load_splat offset=1778590292
    i8x16.extract_lane_u 4
    local.get $1
    block $block
      local.get $0
      ref.is_null
      memory.size
      i32.and
      i64.load8_u offset=553913817
      local.get $5
      memory.size
      v32x4.load_interleaved_2 offset=474710482 align=4
      i8x16.eq
      call $12
      return
    end ;; $block
    local.set $1
    unreachable
    )
  
  (func $14 (type $2)
    (param $0 i32)
    (param $1 v128)
    (param $2 i32)
    (param $3 f32)
    (result funcref)
    (local $4 f64)
    (local $5 v128)
    atomic.fence
    elem.drop $11
    f64.const 0x1.b1015d16eecd9p+329
    table.size $8
    i16x8.splat
    i64.const 8625089517598469347
    i64.ctz
    loop $loop (param v128 i64) (result f64 f64)
      i64x2.replace_lane 0
      i8x16.any_true
      i64.load16_u offset=3938089765
      f64.convert_i64_s
      f64.abs
      local.set $4
      memory.size
      unreachable
    end ;; $loop
    f64.lt
    ref.null func
    ref.null extern
    ref.null extern
    ref.null func
    br 0
    )
  
  (func $15 (type $3)
    (param $0 i64)
    (local $1 i32)
    (local $2 i32)
    (local $3 f64)
    (local $4 funcref)
    )
  
  (func $16 (type $4)
    (param $0 f64)
    (result i32 i32)
    (local $1 v128)
    local.get $1
    local.get $1
    i8x16.avgr_u
    memory.size
    i16x8.shl
    local.get $0
    local.get $0
    local.tee $0
    i64.const 8816937435312448871
    block $block (param f64 f64 i64) (result i32 f32 funcref)
      i64.popcnt
      i64.extend8_s
      i64x2.splat
      f32x4.sqrt
      i16x8.bitmask
      global.set $10
      unreachable
    end ;; $block
    unreachable
    ))