(module
  (type $0 (func (result externref)))
  (type $1 (func (param f32 i32 i32)))
  (type $2 (func (result v128 i32)))
  (type $3 (func (param externref externref i32) (result i32)))
  (type $4 (func (param i64) (result i64)))
  (type $5 (func (result f64 f32 funcref)))
  (type $6 (func (param f32 funcref) (result i32 externref)))
  (type $7 (func (param f64 i32 externref) (result f32 funcref f32 v128)))
  (import "env" "memory" (memory $9 88 38097 shared))
  (import "env" "global3" (global $10 i32))
  (import "env" "func0" (func $16 (param externref externref i32) (result i32)))
  (table $8  24 4294967295 externref)
  (global $11  funcref (ref.null func))
  (global $12  (mut externref) (ref.null extern))
  (global $13  externref (ref.null extern))
  (elem $14 memory
    $9 $9 $9 $9 $9 $9 $9 $9
    $9 $9 $9 $9 $9 $9 $9 $9
    $9 $9 $9 $9 $9 $9 $9 $9
    $9 $9 $9 $9 $9 $9 $9 $9
    $9)
  (elem $15 funcref
    (ref.func $19) (ref.func $16) (ref.null func) (ref.func $19)
    (ref.null func) (ref.func $17) (ref.func $18) (ref.null func)
    (ref.null func) (ref.func $19) (ref.func $18) (ref.func $18)
    (ref.func $16) (ref.func $17) (ref.func $16) (ref.func $19)
    (ref.func $18) (ref.null func) (ref.func $17) (ref.func $19)
    (ref.func $16) (ref.func $18) (ref.func $18) (ref.func $18)
    (ref.null func) (ref.null func) (ref.func $18) (ref.func $19)
    (ref.func $19) (ref.func $18) (ref.func $18) (ref.null func)
    (ref.func $19) (ref.func $16) (ref.func $19) (ref.func $18)
    (ref.func $19) (ref.null func) (ref.func $19) (ref.func $18)
    (ref.null func) (ref.func $19) (ref.null func) (ref.null func)
    (ref.func $17) (ref.func $17) (ref.func $19) (ref.func $17)
    (ref.func $18) (ref.func $16) (ref.func $19) (ref.func $17)
    (ref.null func) (ref.null func) (ref.func $17) (ref.func $18)
    (ref.func $17) (ref.null func) (ref.func $18) (ref.func $17)
    (ref.func $19) (ref.func $17) (ref.func $16) (ref.func $16)
    (ref.func $16) (ref.func $19) (ref.func $19) (ref.null func)
    (ref.func $17) (ref.func $16) (ref.func $19) (ref.null func)
    (ref.func $16) (ref.func $17) (ref.func $16) (ref.func $16)
    (ref.null func) (ref.null func) (ref.func $18) (ref.func $17)
    (ref.func $19) (ref.func $17) (ref.func $18) (ref.func $19)
    (ref.func $16) (ref.func $16) (ref.func $19) (ref.func $19)
    (ref.func $17) (ref.func $19) (ref.func $17) (ref.func $19)
    (ref.func $19) (ref.null func) (ref.null func))
  
  (func $17 (type $0)
    (result externref)
    (local $0 i32)
    elem.drop $14
    local.get $0
    f32.const 0x1.7745aep+44
    i64.trunc_f32_u
    elem.drop $15
    block $block (param i64) (result i64)
      i32.wrap_i64
      i32.eqz
      i64.load16_u offset=1753639766 align=1
      br $block
    end ;; $block
    i64.atomic.rmw16.xchg_u offset=3209234751
    v128.const i32x4 0xdd17f4d3 0xce375c81 0x1f9202a9 0x55608f45
    i8x16.abs
    local.get $0
    table.get $8
    unreachable
    )
  
  (func $18 (type $1)
    (param $0 f32)
    (param $1 i32)
    (param $2 i32)
    (local $3 i32)
    (local $4 i32)
    (local $5 i32)
    global.get $13
    global.get $12
    table.size $8
    loop $loop (result f64 f32 funcref)
      br $loop
    end ;; $loop
    call $17
    drop
    loop $loop_0 (param f32 funcref) (result i32 externref)
      unreachable
    end ;; $loop_0
    memory.size
    local.set $3
    block $block (param f64 i32 externref) (result f32 funcref f32 v128)
      br 1
    end ;; $block
    br 0
    )
  
  (func $19 (type $2)
    (result v128 i32)
    (local $0 f32)
    (local $1 f64)
    (local $2 i64)
    (local $3 i64)
    call $19
    i32.atomic.load8_u offset=1775725457
    i8x16.shr_u
    elem.drop $14
    v128.const i32x4 0x01a2652c 0x1c1c75eb 0x41676f4d 0x9e33efb0
    i8x16.min_s
    i16x8.any_true
    local.get $2
    i64.atomic.rmw16.xchg_u offset=488885502
    f32.const -0x1.e063dap+7
    local.tee $0
    drop
    f32.convert_i64_s
    f32.ceil
    global.get $11
    ref.null extern
    ref.is_null
    unreachable
    ))