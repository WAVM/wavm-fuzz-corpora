(module
  (type $0 (func (param f32) (result f32 f32)))
  (type $1 (func (param externref f32 f32 v128) (result funcref v128)))
  (type $2 (func (param f32 f32)))
  (type $3 (func (param externref f32 funcref f64)))
  (type $4 (func (result f32 funcref)))
  (type $5 (func (param funcref f32) (result f32 f32)))
  (type $6 (func (result funcref funcref i32)))
  (type $7 (func (param funcref funcref) (result funcref f32)))
  (type $8 (func (result i32 f32 i32 funcref)))
  (type $9 (func (param externref) (result v128 externref v128 f32)))
  (type $10 (func (result f32 f32 i64)))
  (type $11 (func (param i64) (result f64 f64)))
  (type $12 (func (result externref externref i64)))
  (type $13 (func (param i32 funcref) (result i64)))
  (type $14 (func (param i64 f32 funcref) (result f32 funcref)))
  (type $15 (func (param funcref f32 funcref) (result i64 externref)))
  (type $16 (func (param externref) (result funcref v128 i64)))
  (import "env" "table" (table $17 28 4294967295 shared funcref))
  (import "env" "table" (table $18 55 4294967295 shared externref))
  (import "env" "global0" (global $20 (mut funcref)))
  (import "env" "global4" (global $21 f64))
  (import "env" "func0" (func $28 (result f32 funcref)))
  (table $19  61 4294967295 shared funcref)
  (global $22  (mut f64) (f64.const 0x1.7e0f63c968c09p+63))
  (global $23  funcref (ref.null func))
  (global $24  (mut funcref) (ref.null func))
  (elem $25 (table $18) (i32.const -1125874219) table
    $19 $18 $19 $18 $18 $19 $18 $19
    $19 $17 $18 $18 $17 $18 $18 $19
    $18 $19 $18 $18 $19 $17 $18 $18
    $17 $17 $17 $17 $18 $19 $18 $19
    $17 $17 $17 $17 $19 $18 $17 $18
    $17 $18 $17 $19 $18 $19 $18 $18
    $19 $17 $19 $18 $17 $17 $19 $17
    $18 $19 $19 $19 $19 $18 $18 $17
    $19 $19 $17 $19 $18 $18 $18 $19
    $18 $17 $17 $19 $17 $18 $19 $19
    $18 $19 $17 $17 $18 $18 $18 $19)
  
  (func $29 (type $0)
    (param $0 f32)
    (result f32 f32)
    global.get $20
    global.get $23
    local.get $0
    loop $loop (param funcref f32) (result f32 f32)
      ref.null extern
      loop $loop_0 (result funcref)
        elem.drop $25
        br $loop_0
      end ;; $loop_0
      loop $loop_1 (result funcref funcref i32)
        v128.const i32x4 0x0db53933 0xf286e7f8 0xb6a14056 0x5e1c1ea2
        i8x16.any_true
        unreachable
      end ;; $loop_1
      table.get $17
      global.set $20
      block $block (param funcref funcref) (result funcref f32)
        drop
        global.get $23
        global.set $24
        loop $loop_2 (result i32 f32 i32 funcref)
          elem.drop $25
          unreachable
        end ;; $loop_2
        ref.is_null
        i32.gt_u
        drop
        local.set $0
        table.get $18
        drop
        ref.null extern
        drop
        global.get $21
        unreachable
      end ;; $block
      local.set $0
      global.set $24
      drop
      unreachable
    end ;; $loop
    return
    )
  
  (func $30 (type $1)
    (param $0 externref)
    (param $1 f32)
    (param $2 f32)
    (param $3 v128)
    (result funcref v128)
    (local $4 i64)
    (local $5 f32)
    v128.const i32x4 0xf69ce66f 0xd3ac82a6 0x5fd9d8b7 0xfb6ebf29
    ref.null extern
    loop $loop (param externref) (result v128 externref v128 f32)
      v128.const i32x4 0x58e813e8 0x5bdd8802 0xae5d760b 0x4ed6d0c8
      ref.null func
      ref.null func
      local.get $1
      local.tee $2
      f32.nearest
      i64.trunc_f32_u
      loop $loop_0 (result f32 f32 i64)
        i32.const 1873656503
        call_indirect $19 (type $10)
        i64.popcnt
        block $block (param i64) (result f64 f64)
          unreachable
        end ;; $block
        f64.gt
        table.get $19
        global.set $24
        block $block_0 (result externref externref i64)
          elem.drop $25
          ref.null func
          unreachable
        end ;; $block_0
        local.set $4
        local.set $0
        br $loop_0
      end ;; $loop_0
      unreachable
    end ;; $loop
    ref.null extern
    ref.is_null
    drop
    drop
    unreachable
    )
  
  (func $31 (type $2)
    (param $0 f32)
    (param $1 f32)
    (local $2 f32)
    (local $3 externref)
    global.get $20
    v128.const i32x4 0xc7fce494 0x245793e7 0x8af6f2b3 0xfe69cbf3
    f32x4.extract_lane 3
    i32.reinterpret_f32
    atomic.fence
    ref.null extern
    local.set $3
    call_indirect $19 (type $12)
    i64.ctz
    return
    )
  
  (func $32 (type $3)
    (param $0 externref)
    (param $1 f32)
    (param $2 funcref)
    (param $3 f64)
    table.size $17
    call_indirect $17 (type $8)
    loop $loop (param i32 funcref) (result i64)
      i64.const -5253942108445761507
      local.get $1
      f32.abs
      ref.null func
      block $block (param i64 f32 funcref) (result f32 funcref)
        br 2
      end ;; $block
      block $block_0 (param funcref f32 funcref) (result i64 externref)
        local.get $0
        atomic.fence
        block $block_1 (param externref) (result funcref v128 i64)
          local.get $2
          loop $loop_0 (result funcref)
            data.drop $27
            v128.const i32x4 0x967ad951 0xad57df52 0x527cadc4 0x3718ba91
            br $loop_0
          end ;; $loop_0
          br 3
        end ;; $block_1
        ref.null extern
        local.set $0
        drop
        drop
        return
      end ;; $block_0
      drop
      unreachable
    end ;; $loop
    drop
    br 0
    )
  
  (data $26 
    "`\a3\04\a4\00?\96\95\04p\e0\c4\d7.\a2\91\03\fa\c1\97Z\bc+t\9b\bc")
  
  (data $27 
    "\e8e1\b8\e6N\bb\15y\1b\f4yN3\9f\f1"))