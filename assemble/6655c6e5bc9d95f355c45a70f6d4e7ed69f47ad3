(module
  (type $0 (func (param externref i32) (result funcref)))
  (type $1 (func (param f32 externref) (result f32)))
  (type $2 (func (param i64 i64 v128) (result f64 f64)))
  (type $3 (func (param i32 i32)))
  (type $4 (func (param f64 f32) (result externref f32 f32 f64)))
  (import "env" "table" (table $5 73 4294967295 externref))
  (import "env" "global2" (global $6 externref))
  (import "env" "global3" (global $7 f64))
  (import "env" "global4" (global $8 i32))
  (import "env" "global5" (global $9 f32))
  (import "env" "func0" (func $13 (param f32 externref) (result f32)))
  (import "env" "func1" (func $14 (param i64 i64 v128) (result f64 f64)))
  (global $10  (mut v128) (v128.const i32x4 0x644a9b13 0xb9f5fa1b 0xe198b574 0x2133254b))
  (global $11  (mut i64) (i64.const 7556654024142447221))
  (global $12  (mut i64) (i64.const -1613344088238615106))
  
  (func $15 (type $0)
    (param $0 externref)
    (param $1 i32)
    (result funcref)
    (local $2 i64)
    (local $3 f64)
    (local $4 f32)
    (local $5 v128)
    ref.null extern
    local.tee $0
    global.get $9
    i32.reinterpret_f32
    i32.eqz
    local.get $1
    block $block (param i32 i32)
      i32.ge_u
      f32.convert_i32_s
      i32.trunc_sat_f32_u
      table.get $5
      f64.const 0x1.8d339befcc576p+980
      f32.const 0x1.ea9912p+20
      block $block_0 (param f64 f32) (result externref f32 f32 f64)
        i64.trunc_f32_u
        unreachable
      end ;; $block_0
      ref.null func
      ref.null extern
      local.set $0
      ref.is_null
      local.set $1
      ref.null func
      drop
      br $block
    end ;; $block
    local.set $0
    global.get $8
    ref.null func
    ref.is_null
    i32.shr_u
    local.set $1
    table.size $5
    local.set $1
    global.get $6
    drop
    local.get $0
    unreachable
    ))