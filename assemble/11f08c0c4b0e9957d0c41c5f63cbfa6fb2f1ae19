(module
  (type $0 (func (param f32 v128 v128 funcref) (result externref)))
  (type $1 (func (param externref externref f32 v128) (result externref)))
  (type $2 (func (param i64 f32)))
  (import "env" "memory" (memory $3 55 13378 shared))
  (import "env" "global0" (global $4 f32))
  (import "env" "global2" (global $5 i64))
  (global $6  (mut funcref) (ref.null func))
  (elem $7 declare funcref
    (ref.func $8) (ref.func $9) (ref.func $8) (ref.func $8)
    (ref.func $8) (ref.null func) (ref.func $9) (ref.func $9)
    (ref.func $9) (ref.func $9) (ref.func $8) (ref.null func)
    (ref.func $9) (ref.null func) (ref.func $8) (ref.null func)
    (ref.func $8) (ref.func $8) (ref.func $8) (ref.func $8)
    (ref.null func) (ref.func $9) (ref.func $9) (ref.null func)
    (ref.func $9) (ref.func $8) (ref.null func) (ref.func $8)
    (ref.func $9) (ref.func $9) (ref.func $9) (ref.func $8)
    (ref.null func) (ref.func $8) (ref.func $9) (ref.func $8)
    (ref.func $9) (ref.func $8) (ref.func $8) (ref.func $8)
    (ref.null func) (ref.func $8) (ref.func $8) (ref.func $8)
    (ref.func $9) (ref.func $8) (ref.null func) (ref.func $9)
    (ref.null func) (ref.func $9) (ref.func $9) (ref.null func)
    (ref.null func) (ref.null func) (ref.null func) (ref.null func)
    (ref.func $8) (ref.func $8) (ref.null func) (ref.func $9)
    (ref.func $8) (ref.func $8) (ref.func $8) (ref.func $8)
    (ref.null func) (ref.func $8) (ref.null func) (ref.func $8)
    (ref.func $8) (ref.null func) (ref.func $9) (ref.func $8)
    (ref.func $8) (ref.func $8) (ref.func $8) (ref.func $9)
    (ref.null func) (ref.func $9) (ref.func $8) (ref.null func)
    (ref.func $8) (ref.func $8) (ref.func $8) (ref.func $8)
    (ref.null func) (ref.null func) (ref.func $8) (ref.null func))
  
  (func $8 (type $0)
    (param $0 f32)
    (param $1 v128)
    (param $2 v128)
    (param $3 funcref)
    (result externref)
    (local $4 v128)
    (local $5 f64)
    global.get $5
    elem.drop $7
    local.get $1
    i32x4.any_true
    v64x2.load_splat offset=3583632286 align=2
    i16x8.widen_low_i8x16_s
    i64x2.neg
    f64x2.neg
    i32x4.abs
    i32x4.all_true
    i32.ctz
    i64.extend_i32_s
    global.get $4
    loop $loop (param i64 f32)
      elem.drop $7
      br $loop
    end ;; $loop
    unreachable
    )
  
  (func $9 (type $1)
    (param $0 externref)
    (param $1 externref)
    (param $2 f32)
    (param $3 v128)
    (result externref)
    i64.const -1966691307903640907
    local.get $1
    drop
    elem.drop $7
    local.get $2
    f32.nearest
    f32.sqrt
    atomic.fence
    f64.promote_f32
    memory.size
    ref.null extern
    ref.is_null
    i64.atomic.load8_u offset=3625562963
    i64.atomic.rmw8.xor_u offset=3146407879
    f32.convert_i64_u
    unreachable
    ))