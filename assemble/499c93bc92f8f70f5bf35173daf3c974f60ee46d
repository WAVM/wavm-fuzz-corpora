(module
  (type $0 (func (param i32 v128 v128 v128) (result v128 f64)))
  (type $1 (func (result f32 f32)))
  (type $2 (func (param f32 i32)))
  (type $3 (func (param v128 f64 i64 funcref) (result f32 externref)))
  (type $4 (func (param i32 i32) (result f64)))
  (import "env" "memory" (memory $5 83 58544 shared))
  (import "env" "global1" (global $7 (mut externref)))
  (import "env" "global2" (global $8 (mut i32)))
  (import "env" "func0" (func $11 (param f32 i32)))
  (import "env" "func1" (func $12 (param v128 f64 i64 funcref) (result f32 externref)))
  (import "env" "func2" (func $13 (param i32 i32) (result f64)))
  (memory $6  31 23956 shared)
  (global $9  (mut i64) (i64.const -1286759728101754982))
  
  (func $14 (type $0)
    (param $0 i32)
    (param $1 v128)
    (param $2 v128)
    (param $3 v128)
    (result v128 f64)
    (local $4 i32)
    (local $5 f64)
    (local $6 i32)
    global.get $9
    global.get $9
    i64.extend8_s
    i64.or
    atomic.fence
    v128.const i32x4 0x18ab5b8a 0x6ed03297 0x0e36fa68 0x60614539
    i32x4.bitmask
    local.set $4
    unreachable
    )
  
  (func $15 (type $1)
    (result f32 f32)
    (local $0 f32)
    (local $1 i64)
    (local $2 i32)
    local.get $1
    i64.ctz
    memory.size $6
    local.tee $2
    i64x2.load32x2_u offset=1987477518 align=4
    v128.not
    memory.size $6
    local.get $1
    f64.reinterpret_i64
    f64.sqrt
    f64.neg
    f64.nearest
    f64.abs
    f64x2.splat
    i8x16.extract_lane_s 15
    i32.atomic.rmw8.xchg_u $6 offset=33374309
    unreachable
    )
  
  (data $10 
    "L,\9dxL\14\81sC*\a9\8c\f1y\e1\93\83\9d\16\caKQ!\9c\9d"))