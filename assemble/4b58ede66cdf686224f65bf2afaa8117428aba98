(module
  (type $0 (func (result externref f64)))
  (type $1 (func (param externref funcref i32)))
  (type $2 (func (param i64 f64 f32 externref) (result externref externref)))
  (type $3 (func (param v128)))
  (type $4 (func (param v128 i64) (result funcref v128)))
  (type $5 (func (param f32) (result i64 i64 externref)))
  (import "env" "table" (table $6 25 4294967295 shared funcref))
  (import "env" "table" (table $7 92 4294967295 shared funcref))
  (import "env" "global0" (global $9 (mut f32)))
  (import "env" "func0" (func $11 (result externref f64)))
  (import "env" "func1" (func $12 (param v128)))
  (table $8  44 4294967295 externref)
  (global $10  externref (ref.null extern))
  
  (func $13 (type $1)
    (param $0 externref)
    (param $1 funcref)
    (param $2 i32)
    call $11
    table.size $6
    i64.extend_i32_s
    f32.convert_i64_s
    f32.abs
    f32.neg
    i32.reinterpret_f32
    f32.convert_i32_u
    i64.trunc_f32_s
    f64.convert_i64_u
    f64.ceil
    f64.floor
    i64.trunc_f64_s
    global.get $9
    block $block (param f32) (result i64 i64 externref)
      unreachable
    end ;; $block
    br 0
    )
  
  (func $14 (type $2)
    (param $0 i64)
    (param $1 f64)
    (param $2 f32)
    (param $3 externref)
    (result externref externref)
    (local $4 i64)
    (local $5 v128)
    (local $6 funcref)
    call $11
    f64.sqrt
    i64.reinterpret_f64
    f64.convert_i64_u
    f64x2.splat
    call $12
    drop
    v128.const i32x4 0xe3653227 0x4ff6e63e 0xb0f141bb 0x5c2efed0
    nop
    i16x8.bitmask
    table.size $8
    i32.add
    call_indirect $6 (type $0)
    local.get $2
    ref.null func
    ref.null func
    ref.null extern
    ref.null func
    ref.is_null
    ref.null extern
    local.set $3
    unreachable
    )
  
  (func $15 (type $4)
    (param $0 v128)
    (param $1 i64)
    (result funcref v128)
    (local $2 i64)
    (local $3 i64)
    (local $4 i32)
    (local $5 f32)
    global.get $9
    drop
    local.get $3
    local.get $0
    ref.null extern
    unreachable
    ))