(module
  (type $0 (func (result i32)))
  (type $1 (func (result i64)))
  (type $2 (func (result f32)))
  (type $3 (func (result f64)))
  (type $4 (func (result v128)))
  (export "func_i8x16_extract_lane_s_0" (func $5))
  (export "func_i8x16_extract_lane_u_0" (func $6))
  (export "func_i16x8_extract_lane_s_0" (func $7))
  (export "func_i16x8_extract_lane_u_0" (func $8))
  (export "func_i32x4_extract_lane_0" (func $9))
  (export "func_i64x2_extract_lane_0" (func $10))
  (export "func_f32x4_extract_lane_0" (func $11))
  (export "func_f64x2_extract_lane_0" (func $12))
  (export "func_i8x16_replace_lane_0" (func $13))
  (export "func_i16x8_replace_lane_0" (func $14))
  (export "func_i32x4_replace_lane_0" (func $15))
  (export "func_i64x2_replace_lane_0" (func $16))
  (export "func_f32x4_replace_lane_0" (func $17))
  (export "func_f64x2_replace_lane_0" (func $18))
  (export "func_v8x16_shuffle_0" (func $19))
  
  (func $5 (type $0)
    (result i32)
    v128.const i32x4 0x00000001 0x0000000f 0x000000ff 0x0000017f
    i8x16.extract_lane_s 8
    )
  
  (func $6 (type $0)
    (result i32)
    v128.const i32x4 0x00000001 0x0000000f 0x000000ff 0x0000017f
    i8x16.extract_lane_u 8
    )
  
  (func $7 (type $0)
    (result i32)
    v128.const i32x4 0x00000001 0x0000000f 0x0000ffff 0x0000017f
    i16x8.extract_lane_s 4
    )
  
  (func $8 (type $0)
    (result i32)
    v128.const i32x4 0x00000001 0x0000000f 0x0000ffff 0x0000017f
    i16x8.extract_lane_u 4
    )
  
  (func $9 (type $0)
    (result i32)
    v128.const i32x4 0x00000001 0x0000000f 0x0000ffff 0x0000017f
    i32x4.extract_lane 2
    )
  
  (func $10 (type $1)
    (result i64)
    v128.const i32x4 0x0000000f 0x00000000 0x0000ffff 0x0000017f
    i64x2.extract_lane 0
    )
  
  (func $11 (type $2)
    (result f32)
    v128.const i32x4 0x00000001 0x3fc00000 0x0000ffff 0x0000017f
    f32x4.extract_lane 1
    )
  
  (func $12 (type $3)
    (result f64)
    v128.const i32x4 0x00000000 0x40120000 0x0000ffff 0x0000017f
    f64x2.extract_lane 0
    )
  
  (func $13 (type $4)
    (result v128)
    v128.const i32x4 0x00000001 0x0000000f 0x000000ff 0x0000017f
    i32.const 229
    i8x16.replace_lane 8
    )
  
  (func $14 (type $4)
    (result v128)
    v128.const i32x4 0x00000001 0x0000000f 0x0000ffff 0x0000017f
    i32.const 58854
    i16x8.replace_lane 4
    )
  
  (func $15 (type $4)
    (result v128)
    v128.const i32x4 0x00000001 0x0000000f 0x0000ffff 0x0000017f
    i32.const 305419896
    i32x4.replace_lane 2
    )
  
  (func $16 (type $4)
    (result v128)
    v128.const i32x4 0x0000000f 0x00000000 0x0000ffff 0x0000017f
    i64.const 20014547621496
    i64x2.replace_lane 0
    )
  
  (func $17 (type $4)
    (result v128)
    v128.const i32x4 0x00000001 0x00000000 0x0000ffff 0x0000017f
    f32.const 0x1.800000p-0
    f32x4.replace_lane 1
    )
  
  (func $18 (type $4)
    (result v128)
    v128.const i32x4 0x0000789a 0xff880330 0x0000ffff 0x0000017f
    f64.const 0x1.2000000000000p+2
    f64x2.replace_lane 0
    )
  
  (func $19 (type $4)
    (result v128)
    v128.const i32x4 0xff00ff01 0xff00ff0f 0xff00ffff 0xff00ff7f
    v128.const i32x4 0x00550055 0x00550055 0x00550055 0x00550155
    v8x16.shuffle 16 1 18 3 20 5 22 7 24 9 26 11 28 13 30 15
    ))