(module
  (type $0 (func (param funcref i32)))
  (type $1 (func (param f32) (result i64 funcref)))
  (type $2 (func (param i32) (result i32)))
  (type $3 (func (param f32) (result f32 i64 externref)))
  (type $4 (func (param i64) (result f32 v128)))
  (type $5 (func (param i32 f64 v128)))
  (import "env" "memory" (memory $7 30 14890 shared))
  (import "env" "memory" (memory $8 36 64054 shared))
  (import "env" "func0" (func $10 (param funcref i32)))
  (table $6  0 4294967295 externref)
  (elem $9 (i32.const 1562620361) table
    $6 $6 $6 $6 $6 $6 $6 $6
    $6 $6 $6 $6 $6 $6 $6 $6
    $6 $6 $6 $6 $6 $6 $6 $6
  $6 $6 $6 $6
    $6 $6 $6 $6 $6 $6 $6 $6
    $6 $6 $6 $6 $6)
  
  (func $11 (type $1)
    (param $0 f32)
    (result i64 funcref)
    (local $1 f64)
    (local $2 v128)
    f32.const 0x1.6ff2c0p+33
    f64.promote_f32
    i64.trunc_f64_s
    local.get $1
    f64.trunc
    loop $loop (param f64) (result f32 i64 externref)
      atomic.fence
      i32.trunc_f64_s
      f64.convert_i32_s
      f32.demote_f64
      f64.promote_f32
      f64.abs
      local.tee $1
      local.get $0
      call $11
      br 1
    end ;; $loop
    ref.null func
    unreachable
    )
  
  (func $12 (type $2)
    (param $0 i32)
    (result i32)
    (local $1 i64)
    (local $2 v128)
    ref.null extern
    local.get $1
    block $block (param i64) (result f32 v128)
      nop
      atomic.fence
      ref.null func
      table.size $6
      i32.const 1393887718
      f32.convert_i32_u
      f64.promote_f32
      local.get $2
      loop $loop (param i32 f64 v128)
        i16x8.neg
        i16x8.extract_lane_s 1
        i64.load16_s $8 offset=3842006368 align=1
        drop
        ref.null func
        drop
        unreachable   
   end ;; $loop
      unreachable
    end ;; $block
    unreachable
    ))