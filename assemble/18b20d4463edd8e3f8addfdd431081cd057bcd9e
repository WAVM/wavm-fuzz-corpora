(module
  (type $0 (func (param funcref) (result i32 f32)))
  (type $1 (func))
  (type $2 (func (param f32 f64 externref) (result externref)))
  (type $3 (func (param f64 i64 f64) (result i64)))
  (type $4 (func (param v128 v128) (result v128 f32)))
  (type $5 (func (param i32 funcref funcref f32) (result i32 f64 i32)))
  (type $6 (func (result i32 f32 v128 funcref)))
  (import "env" "memory" (memory $10 62 29689))
  (import "env" "table" (table $7 41 4294967295 externref))
  (import "env" "global1" (global $13 (mut i32)))
  (import "env" "global2" (global $14 externref))
  (import "env" "global5" (global $15 (mut i64)))
  (import "env" "func0" (func $23))
  (memory $11  96 34314 shared)
  (memory $12  48 58383)
  (table $8  6 4294967295 funcref)
  (table $9  71 4294967295 externref)
  (global $16  i64 (i64.const -6424983502452696493))
  (global $17  (mut f32) (f32.const 0x1.4a3342p+31))
  (global $18  (mut i32) (i32.const -754750271))
  (global $19  (mut funcref) (ref.null func))
  (global $20  (mut v128) (v128.const i32x4 0xa66becab 0x4a75e52d 0x7f6fcb5e 0xff0bcd9c))
  (global $21  (mut funcref) (ref.null func))
  (elem $22 declare funcref
    (ref.func $23) (ref.func $23) (ref.func $27) (ref.func $26)
    (ref.func $23) (ref.func $24) (ref.func $24) (ref.null func)
    (ref.func $23) (ref.func $24) (ref.null func) (ref.null func)
    (ref.func $26) (ref.func $25) (ref.func $23) (ref.func $24)
    (ref.func $26) (ref.func $23) (ref.func $27) (ref.func $24)
    (ref.func $23) (ref.null func) (ref.null func) (ref.func $26)
    (ref.func $23) (ref.func $24) (ref.func $23) (ref.func $27)
    (ref.func $26) (ref.func $24) (ref.func $27) (ref.func $25)
    (ref.func $27) (ref.func $27) (ref.func $26) (ref.func $24)
    (ref.func $24))
  
  (func $24 (type $0)
    (param $0 funcref)
    (result i32 f32)
    (local $1 i64)
    local.get $0
    ref.is_null
    i64.const 6036903222341386976
    i64.eqz
    global.get $21
    global.get $21
    global.get $15
    f32.convert_i64_s
    block $block (param i32 funcref funcref f32) (result i32 f64 i32)
      i64.trunc_f32_s
      global.set $15
      global.set $21
      table.set $8
      global.get $15
      local.get $0
      drop
      local.set $1
      local.get $1
      local.set $1
      call $23
      global.get $21
      drop
      v128.const i32x4 0x2e5b2c6d 0x414ecc0a 0xb976d789 0xd9c186ce
      ref.null extern
      unreachable
    end ;; $block
    global.set $13
    drop
    i32.atomic.rmw16.sub_u $11 offset=1071314358
    v128.const i32x4 0xde62a4ce 0x20867f58 0x6bb574fe 0xce49840e
    drop
    global.get $14
    table.set $7
    f64.const 0x1.a9fd5e13ade70p-843
    ref.null extern
    drop
    ref.null func
    drop
    unreachable
    )
  
  (func $25 (type $2)
    (param $0 f32)
    (param $1 f64)
    (param $2 externref)
    (result externref)
    (local $3 f32)
    (local $4 f64)
    (local $5 i32)
    (local $6 v128)
    v128.const i32x4 0xadbdc238 0x6a50fe91 0xd435fdd4 0x6267aa8e
    i32x4.neg
    i16x8.extract_lane_s 4
    i32.extend8_s
    i64.atomic.load8_u $12 offset=2395553377
    block $block (result i32 f32 v128 funcref)
      memory.size
      i32.extend16_s
      i64.load8_u $12 offset=4239004611
      drop
      local.get $4
      i64.trunc_sat_f64_s
      i64.const -9165572852002204353
      global.set $15
      f32.convert_i64_s
      global.set $17
      f32.const 0x1.a77124p+112
      local.set $3
      nop
      memory.size
      i8x16.splat
      local.set $6
      global.get $16
      drop
      local.get $4
      ref.null func
      ref.is_null
      table.get $7
      local.set $2
      ref.null extern
      unreachable
    end ;; $block
    drop
    local.set $6
    local.set $3
    unreachable
    )
  
  (func $26 (type $3)
    (param $0 f64)
    (param $1 i64)
    (param $2 f64)
    (result i64)
    (local $3 externref)
    (local $4 funcref)
    v128.const i32x4 0x1c6575b4 0x1f6daeb3 0x315d473e 0xbef24605
    i32x4.neg
    i16x8.widen_high_i8x16_u
    global.get $14
    i32.const 1436668968
    f32.load offset=2910574304 align=1
    i64.trunc_f32_s
    global.get $16
    i64.rotl
    local.tee $1
    f64.convert_i64_u
    nop
    elem.drop $22
    global.get $21
    local.get $2
    local.set $2
    unreachable
    )
  
  (func $27 (type $4)
    (param $0 v128)
    (param $1 v128)
    (result v128 f32)
    (local $2 i64)
    (local $3 f32)
    (local $4 externref)
    memory.size $11
    global.get $15
    global.get $15
    f32.convert_i64_u
    drop
    unreachable
    ))