(module
  (type $0 (func (param externref i64 v128 i64)))
  (type $1 (func (param f32 funcref)))
  (type $2 (func (result funcref)))
  (type $3 (func (param funcref externref) (result externref i32)))
  (import "env" "memory" (memory $4 11 2410 shared))
  (import "env" "memory" (memory $5 11 63814))
  (import "env" "global3" (global $7 f64))
  (import "env" "global6" (global $8 (mut i32)))
  (import "env" "func0" (func $15 (param externref i64 v128 i64)))
  (import "env" "func1" (func $16 (result funcref)))
  (import "env" "func2" (func $17 (param funcref externref) (result externref i32)))
  (memory $6  25 51479)
  (global $9  (mut i64) (i64.const -777963781854754633))
  (global $10  i32 (i32.const -1169005313))
  (global $11  (mut i64) (i64.const 8788276940805226788))
  (global $12  (mut f32) (f32.const 0x1.0f5d0ap+31))
  (global $13  f32 (f32.const 0x1.a3ea30p+30))
  (elem $14 global
    $10 $9 $8 $13 $8 $10 $11 $12
    $11 $12 $9 $8 $11 $10 $9 $8
    $9 $8 $8 $11 $12 $7 $10 $12
    $11 $9 $8 $13 $9 $7 $7 $13
    $12 $13 $9 $12 $13 $12 $10 $13
    $7 $12 $11 $7 $11 $9 $11 $7
    $13 $9 $7 $7 $9 $9 $8 $10
    $12 $11 $9 $11 $8 $11 $12 $11
    $8 $7 $8 $13 $9 $8 $11 $11
    $13 $12 $12 $8 $11 $13 $8 $11
    $13 $7 $13 $8 $9 $9 $12 $9
    $7 $7 $11 $10 $12 $13 $12 $13
    $8 $12 $8)
  
  (func $18 (type $1)
    (param $0 f32)
    (param $1 funcref)
    global.get $8
    memory.size $5
    global.get $11
    i64.extend32_s
    global.get $11
    i64.sub
    i64.atomic.store16 $6 offset=2169628391
    atomic.fence
    br 0
    ))