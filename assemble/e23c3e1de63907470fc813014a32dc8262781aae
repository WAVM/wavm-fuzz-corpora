(module
  (type $0 (func (result i32)))
  (type $1 (func))
  (type $2 (func (param i32) (result i32)))
  (import "a" "ef0" (func $9 (result i32)))
  (import "a" "ef1" (func $10 (result i32)))
  (import "a" "ef2" (func $11 (result i32)))
  (import "a" "ef3" (func $12 (result i32)))
  (import "a" "ef4" (func $13 (result i32)))
  (table $t0  30 30 funcref)
  (table $t1  30 30 funcref)
  (export "test" (func $19))
  (export "check_t0" (func $20))
  (export "check_t1" (func $21))
  (elem $3 (table $t1) (i32.const 2)
    $12 $10 $13 $10)
  (elem $4 funcref
    (ref.func $11) (ref.func $16) (ref.func $10) (ref.func $17))
  (elem $5 (table $t1) (i32.const 12)
    $16 $14 $11 $12 $15)
  (elem $6 funcref
    (ref.func $14) (ref.func $18) (ref.func $11) (ref.func $16)
    (ref.func $15))
  (elem $7 (i32.const 3)
    $10 $12 $10 $13)
  (elem $8 (i32.const 11)
    $15 $12 $11 $14 $16)
  
  (func $14 (type $0)
    (result i32)
    i32.const 5
    )
  
  (func $15 (type $0)
    (result i32)
    i32.const 6
    )
  
  (func $16 (type $0)
    (result i32)
    i32.const 7
    )
  
  (func $17 (type $0)
    (result i32)
    i32.const 8
    )
  
  (func $18 (type $0)
    (result i32)
    i32.const 9
    )
  
  (func $19 (type $1)
    i32.const 25
    i32.const 15
    i32.const 2
    table.copy $t1
    )
  
  (func $20 (type $2)
    (param $0 i32)
    (result i32)
    local.get $0
    call_indirect $t1 (type $0)
    )
  
  (func $21 (type $2)
    (param $0 i32)
    (result i32)
    local.get $0
    call_indirect $t0 (type $0)
    ))