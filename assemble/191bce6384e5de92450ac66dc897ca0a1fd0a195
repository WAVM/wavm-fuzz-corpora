(module
  (type $0 (func (param externref) (result f64)))
  (type $1 (func (result i64 i32)))
  (type $2 (func (param i64 v128 f64 externref) (result v128)))
  (type $3 (func (param f64 i32) (result i32 funcref)))
  (type $4 (func (result f32 i32 funcref)))
  (type $5 (func (result funcref i64)))
  (import "env" "memory" (memory $7 47 58595))
  (import "env" "table" (table $6 29 4294967295 funcref))
  (import "env" "global3" (global $9 i32))
  (import "env" "func0" (func $14 (param f64 i32) (result i32 funcref)))
  (memory $8  88 42550 shared)
  (global $10  f64 (f64.const 0x1.056fcf6f54986p+63))
  (global $11  (mut i64) (i64.const -4700983172908522077))
  (global $12  (mut v128) (v128.const i32x4 0x166ca50b 0x52496661 0x97dcaa6e 0xeeca6b68))
  
  (func $15 (type $0)
    (param $0 externref)
    (result f64)
    (local $1 f32)
    (local $2 f32)
    (local $3 f32)
    call $16
    nop
    v32x4.load_interleaved_3 offset=459673256 align=8
    f32x4.le
    f32x4.le
    local.get $0
    drop
    i64x2.neg
    i64x2.extract_lane 0
    global.get $12
    i32x4.trunc_sat_f32x4_u
    i32x4.abs
    i8x16.all_true
    v32x4.load_interleaved_2 $8 offset=3691197484 align=4
    f64x2.min
    ref.null func
    drop
    global.set $12
    i64.ne
    table.get $6
    unreachable
    )
  
  (func $16 (type $1)
    (result i64 i32)
    (local $0 i32)
    (local $1 i64)
    (local $2 v128)
    local.get $0
    call_indirect $6 (type $1)
    if $if (result f32 i32 funcref)
      call $16
      i64.atomic.load $8 offset=1588109520
      i64.extend32_s
      local.get $0
      i16x8.load8x8_s $8 offset=2328745422
      i32x4.bitmask
      if $if_0 (result funcref i64)
        data.drop $13
        f32.const -0x1.174394p+89
        f64.const 0x1.e2d9172d0ec34p+1018
        memory.size $8
        f64.convert_i32_s
        f64.le
        table.get $6
        drop
        drop
        global.get $10
        ref.null func
        ref.is_null
        drop
        ref.null extern
        ref.null extern
        ref.null func
        drop
        drop
        ref.is_null
        local.set $0
        ref.null extern
        ref.null func
        ref.is_null
        drop
        ref.null func
        ref.null extern
        drop
        unreachable
      else
        f32.const -0x1.a0f57ep+69
        unreachable
      end ;; $if_0
      global.set $11
      drop
      i64.lt_s
      unreachable
    else
      f32.const 0x1.563664p-12
      global.get $10
      drop
      f32.sqrt
      global.get $10
      unreachable
    end ;; $if
    drop
    ref.null extern
    ref.is_null
    drop
    unreachable
    )
  
  (func $17 (type $2)
    (param $0 i64)
    (param $1 v128)
    (param $2 f64)
    (param $3 externref)
    (result v128)
    unreachable
    )
  
  (data $13 
    "\86\c9"))