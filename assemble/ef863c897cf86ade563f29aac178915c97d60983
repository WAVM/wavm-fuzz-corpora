(module
  (type $0 (func (param f64 f64 externref funcref)))
  (type $1 (func (result externref f32)))
  (type $2 (func (param i32 i32)))
  (import "env" "memory" (memory $6 8 23872 shared))
  (import "eev" "memory" (memory $7 60 8411 shared))
  (import "env" "table" (table $3 10 4294967295 shared funcref))
  (import "env" "table" (table $4 9 4294967295 externref))
  (import "env" "table" (table $5 97 4294967295 shared externref))
  (import "env" "func0" (func $13 (result externref f32)))
  (global $8  (mut v128) (v128.const i32x4 0xacd38a97 0x1dca39e1 0xb050e712 0xa0ccea3d))
  (global $9  (mut f32) (f32.const 0x1.efbe3ep+31))
  (global $10  (mut i32) (i32.const -337813770))
  (global $11  (mut i32) (i32.const -1242277799))
  (elem $12 (table $4) (i32.const 1322248456) table
    $3 $3 $4 $4 $3 $3 $5 $4
    $3 $5 $3 $5 $5 $4 $3 $3
    $3 $5 $3 $3 $3 $3 $3)
  
  (func $14 (type $0)
    (param $0 f64)
    (param $1 f64)
    (param $2 externref)
    (param $3 funcref)
    (local $4 externref)
    (local $5 i32)
    (local $6 i32)
    local.get $1
    memory.size $7
    i32.load16_s $7 offset=3824414533
    global.get $9
    i32.trunc_f32_s
    memory.size
    if $if (param i32 i32)
      i32.atomic.rmw8.and_u offset=685050049
      table.get $5
      nop
      atomic.fence
      i64.const 5569118749974377429
      ref.null func
      local.get $6
      f64.const 0x1.2862c033f1f48p-55
      ref.null extern
      br 1
    else
      br 1
    end ;; $if
    ref.null extern
    drop
    local.set $0
    return
    ))