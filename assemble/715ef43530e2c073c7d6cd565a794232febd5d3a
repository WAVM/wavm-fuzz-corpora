(module
  (type $0 (func (param funcref f64 f32) (result f32)))
  (type $1 (func (param i64 funcref v128 funcref) (result f64 funcref)))
  (type $2 (func (param f64 f64 i32)))
  (type $3 (func (param f64) (result f64)))
  (type $4 (func (result i32 i32)))
  (type $5 (func (param i32) (result externref v128 i64)))
  (type $6 (func (result v128 v128 v128)))
  (type $7 (func (param funcref)))
  (type $8 (func (result v128 v128 i64 i32)))
  (import "env" "table" (table $9 23 4294967295 shared externref))
  (import "env" "global0" (global $12 f32))
  (import "env" "global1" (global $13 v128))
  (import "env" "global2" (global $14 (mut f64)))
  (import "env" "global3" (global $15 (mut externref)))
  (import "env" "global5" (global $16 (mut f64)))
  (import "env" "global7" (global $17 i32))
  (import "env" "func0" (func $24 (param f64 f64 i32)))
  (import "env" "func1" (func $25 (param f64) (result f64)))
  (import "env" "func2" (func $26 (result i32 i32)))
  (memory $11  71 52864 shared)
  (table $10  57 4294967295 externref)
  (global $18  (mut funcref) (ref.null func))
  (global $19  (mut v128) (v128.const i32x4 0x9a65776e 0xedb5cf4a 0xe8629343 0x116abcb5))
  (global $20  v128 (v128.const i32x4 0x27442b0e 0x253806b7 0xfeb04694 0x1a151f19))
  (global $21  (mut funcref) (ref.null func))
  
  (func $27 (type $0)
    (param $0 funcref)
    (param $1 f64)
    (param $2 f32)
    (result f32)
    global.get $17
    f64.convert_i32_s
    loop $loop (result f32)
      i64.const 6730374081462524228
      global.get $12
      f64.promote_f32
      i32.trunc_f64_s
      block $block (param i32) (result externref v128 i64)
        i64.load16_s offset=2486642996 align=1
        global.get $21
        global.get $17
        if $if (result f32)
          local.get $2
          loop $loop_0 (result v128 v128 v128)
            global.get $18
            br $loop
          end ;; $loop_0
          i16x8.eq
          i32x4.le_u
          global.set $19
          return
        else
          v128.const i32x4 0x05dcf709 0x8abffdfd 0x5202323d 0x43619dd6
          global.set $19
          global.get $18
          global.set $21
          local.get $2
          drop
          unreachable
        end ;; $if
        br $loop
      end ;; $block
      ref.null func
      br $loop
    end ;; $loop
    return
    )
  
  (func $28 (type $1)
    (param $0 i64)
    (param $1 funcref)
    (param $2 v128)
    (param $3 funcref)
    (result f64 funcref)
    (local $4 v128)
    (local $5 i64)
    (local $6 funcref)
    global.get $13
    global.get $18
    block $block (param funcref)
      table.size $9
      if $if (result v128 v128 i64 i32)
        global.get $13
        i8x16.extract_lane_s 2
        global.get $16
        f64.sqrt
        i64.trunc_f64_s
        call $26
        i32.atomic.store16 offset=3700622040
        global.get $18
        local.tee $6
        br $block
      else
        local.get $4
        i64x2.extract_lane 0
        local.set $5
        br $block
      end ;; $if
      table.get $10
      ref.is_null
      br_if $block
      i64x2.replace_lane 1
      i32x4.gt_u
      global.set $19
      local.set $3
      ref.null extern
      drop
      unreachable
    end ;; $block
    global.set $19
    f32.const -0x1.468b24p+45
    ref.null func
    ref.null func
    unreachable
    )
  
  (data $22 (i32.const 643780420)
    "\b2\10rPH#q\91\814\8a\cd\d5Q\81&P\9d\c3\92\f11\c0\d9[\1d\01m\a2\a7z*\89\fd\15\10\e6V\0d\f3\94\f1B\e3DC F\ca@\10\01\95\1c\0d9\01\e7\15t5\7fJ`"
    "\84")
  
  (data $23 
    "\9d\"b\11L\f4\840"))