(module
  (type $0 (func (param i64 externref) (result f32 f64)))
  (type $1 (func (result f64 funcref)))
  (type $2 (func (param f64)))
  (import "env" "memory" (memory $6 47 13008 shared))
  (import "env" "table" (table $3 70 4294967295 shared funcref))
  (import "env" "table" (table $4 72 4294967295 shared externref))
  (import "env" "global0" (global $9 i32))
  (import "env" "global1" (global $10 v128))
  (memory $7  87 42670 shared)
  (memory $8  41 8519 shared)
  (table $5  31 4294967295 shared funcref)
  
  (func $11 (type $0)
    (param $0 i64)
    (param $1 externref)
    (result f32 f64)
    nop
    memory.size
    table.get $4
    global.get $10
    i32x4.any_true
    loop $loop
      call $12
      global.get $9
      f64.load offset=3966725016 align=4
      f64.const 0x1.a25d5d044fbe6p-268
      block $block (param f64)
        f64.ceil
        i32.trunc_sat_f64_u
        f32.const 0x1.610e70p-75
        f32x4.splat
        br $loop
      end ;; $block
      unreachable
    end ;; $loop
    drop
    unreachable
    )
  
  (func $12 (type $1)
    (result f64 funcref)
    (local $0 i32)
    (local $1 f64)
    (local $2 f32)
    global.get $9
    global.get $10
    i16x8.extract_lane_u 1
    i32.xor
    i32.load16_u $8 offset=756443247 align=1
    v128.const i32x4 0x6cd2a54c 0xea9235e1 0x9b67bdc1 0x01ac540f
    i32x4.widen_high_i16x8_u
    global.get $9
    v8x16.load_interleaved_2 $7 offset=3859416147 align=1
    f64x2.div
    f32x4.convert_i32x4_u
    i16x8.min_s
    i32x4.all_true
    f32.convert_i32_u
    table.size $5
    table.get $5
    unreachable
    ))