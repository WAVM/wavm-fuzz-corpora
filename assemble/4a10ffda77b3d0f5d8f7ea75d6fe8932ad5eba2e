(module
  (type $0 (func (result f32 i32)))
  (type $1 (func (param f64) (result funcref externref)))
  (type $2 (func (param i64) (result funcref)))
  (type $3 (func (param v128) (result funcref i32 funcref funcref)))
  (import "env" "table" (table $4 60 4294967295 funcref))
  (import "env" "table" (table $5 0 4294967295 shared funcref))
  (import "env" "global2" (global $7 (mut v128)))
  (import "env" "global5" (global $8 (mut funcref)))
  (import "env" "func0" (func $13 (param i64) (result funcref)))
  (memory $6  11 32944 shared)
  (global $9  (mut v128) (v128.const i32x4 0x9857cada 0x94c125be 0xf76420a5 0xbaddf843))
  (global $10  (mut externref) (ref.null extern))
  (global $11  funcref (ref.null func))
  (global $12  funcref (ref.null func))
  
  (func $14 (type $0)
    (result f32 i32)
    (local $0 f64)
    global.get $10
    table.size $5
    v16x8.load_interleaved_2 offset=2399953223 align=1
    i8x16.add_saturate_s
    loop $loop (param v128) (result funcref i32 funcref funcref)
      i8x16.extract_lane_s 15
      table.get $5
      drop
      global.get $12
      f32.const -0x1.650260p-29
      memory.size
      i32.popcnt
      i64.const -6346858414894329223
      i64.atomic.rmw8.xor_u offset=1169794677
      call $14
      table.get $4
      global.set $8
      drop
      drop
      ref.null extern
      drop
      drop
      global.get $10
      ref.is_null
      v8x16.load_interleaved_4 offset=4146562742 align=4
      f32x4.ne
      v128.xor
      i32x4.eq
      br $loop
    end ;; $loop
    ref.null extern
    ref.is_null
    unreachable
    )
  
  (func $15 (type $1)
    (param $0 f64)
    (result funcref externref)
    (local $1 funcref)
    (local $2 externref)
    (local $3 i64)
    (local $4 i32)
    atomic.fence
    table.size $4
    i8x16.splat
    i32x4.any_true
    i32.const -1699694322
    i32.atomic.rmw8.sub_u offset=3192085482
    i32x4.load16x4_u offset=3661356322
    f64x2.sqrt
    i16x8.bitmask
    v16x8.load_interleaved_2 offset=2098083916
    f64x2.ne
    i32x4.trunc_sat_f32x4_s
    f64x2.neg
    f32x4.abs
    f64x2.abs
    unreachable
    ))