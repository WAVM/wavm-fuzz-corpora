(module
  (type $0 (func (param f32 f64 f32) (result f32 i64)))
  (type $1 (func (param v128 i32 f64) (result f32)))
  (type $2 (func (param v128 i32 i32) (result i32 f32)))
  (type $3 (func))
  (type $4 (func (param funcref) (result f32 f64)))
  (type $5 (func (param externref) (result f32)))
  (type $6 (func (result funcref funcref v128 f64)))
  (type $7 (func (param f64) (result f32 v128 f32 v128)))
  (import "env" "memory" (memory $10 94 56543 shared))
  (import "env" "memory" (memory $11 46 22208))
  (import "env" "memory" (memory $12 79 52864 shared))
  (import "env" "table" (table $8 86 4294967295 shared externref))
  (import "env" "global1" (global $13 f64))
  (import "env" "global2" (global $14 i32))
  (import "env" "global4" (global $15 (mut funcref)))
  (import "env" "global6" (global $16 externref))
  (import "env" "global7" (global $17 (mut v128)))
  (import "env" "global9" (global $18 f64))
  (import "env" "func0" (func $25))
  (table $9  34 4294967295 funcref)
  (global $19  funcref (ref.null func))
  (global $20  (mut i32) (i32.const 1607129065))
  (global $21  (mut v128) (v128.const i32x4 0x6fa52b7a 0x8e75ee2b 0x5b71ed51 0x13eca653))
  (global $22  i32 (i32.const -292909280))
  (elem $23 declare memory
    $12 $10 $12 $10 $12 $12 $11 $10
    $12 $12 $10 $11 $12 $11 $12 $10
    $10 $12 $11 $10 $10 $11 $12 $12
    $11 $12 $11 $10 $11 $12 $10 $10
    $10 $11 $10 $10 $11 $11 $10 $10
    $10 $12 $12 $10 $11 $11 $10 $10
    $11 $12 $11 $11 $12 $10 $10 $11
    $12 $10 $10 $11 $11 $10 $10 $10
    $12 $10 $12 $12 $12 $11 $12 $11
    $12 $10)
  (elem $24 (i32.const -896372038) global
    $18 $22 $17 $19 $21 $16 $14 $17
    $18 $18 $18 $17 $19 $21 $19 $13
    $20 $13 $16 $18 $16 $20 $17 $19
    $17 $15 $16 $14 $22 $13 $16 $18
    $13 $19 $13 $18 $17 $19 $22 $19
    $20 $16 $19 $13 $20 $20 $18 $14
    $19 $19 $15 $20 $17 $17 $17 $13
    $15 $16 $21 $14)
  
  (func $26 (type $0)
    (param $0 f32)
    (param $1 f64)
    (param $2 f32)
    (result f32 i64)
    (local $3 f32)
    (local $4 externref)
    (local $5 funcref)
    (local $6 externref)
    local.get $6
    v128.const i32x4 0xe3eab58f 0x667d00ea 0x76115992 0xf5790839
    i32x4.all_true
    v32x4.load_interleaved_4 $12 offset=3689744517 align=2
    i8x16.min_s
    v128.or
    f64x2.ne
    global.get $15
    loop $loop (param funcref) (result f32 f64)
      local.get $4
      global.get $21
      i16x8.bitmask
      i32.extend8_s
      local.get $6
      global.get $14
      table.get $8
      ref.is_null
      call_indirect $9 (type $3)
      ref.null func
      global.set $15
      table.set $8
      local.set $6
      ref.null func
      ref.null extern
      drop
      drop
      br $loop
    end ;; $loop
    drop
    unreachable
    )
  
  (func $27 (type $1)
    (param $0 v128)
    (param $1 i32)
    (param $2 f64)
    (result f32)
    (local $3 i32)
    (local $4 i32)
    local.get $2
    ref.null extern
    local.get $1
    memory.size $12
    local.get $2
    f32.demote_f64
    global.get $16
    block $block (param externref) (result f32)
      elem.drop $24
      local.get $2
      global.get $13
      f32.const 0x1.42dacep+38
      block $block_0 (result funcref funcref v128 f64)
        global.get $15
        local.get $0
        global.set $17
        elem.drop $24
        f32.const -0x1.8e6b4ep+60
        br 2
      end ;; $block_0
      drop
      global.set $21
      ref.is_null
      local.set $3
      global.set $15
      ref.null func
      unreachable
    end ;; $block
    unreachable
    )
  
  (func $28 (type $2)
    (param $0 v128)
    (param $1 i32)
    (param $2 i32)
    (result i32 f32)
    (local $3 f32)
    (local $4 i64)
    global.get $13
    f64.trunc
    i64.trunc_f64_u
    global.get $16
    global.get $16
    nop
    local.get $1
    v16x8.load_splat $11 offset=2641744163 align=1
    i16x8.neg
    drop
    global.get $13
    f64.trunc
    loop $loop (param f64) (result f32 v128 f32 v128)
      i64.reinterpret_f64
      i64.ctz
      local.set $4
      atomic.fence
      global.get $13
      ref.null extern
      ref.is_null
      table.get $9
      ref.is_null
      ref.null func
      unreachable
    end ;; $loop
    global.set $21
    ref.null extern
    unreachable
    ))