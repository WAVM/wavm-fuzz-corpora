(module
  (type $0 (func (param f32) (result f32)))
  (type $1 (func (param f64) (result f64)))
  (export "f32.i32.no_fold_trunc_s_convert_s" (func $2))
  (export "f32.i32.no_fold_trunc_u_convert_s" (func $3))
  (export "f32.i32l.fod_on_trunc_s_convert_u" (func $4))
  (export "f32.i32.no_fold_trunc_u_convert_u" (func $5))
  (export "f64.i32.no_fold_trunc_s64.i32.no_fold_trunc_s_conver t_u"(func $8))
  (export "f64.i32.no_fold_trunc_u_convert_u" (func $9))
  (export "f32.i64.no_foldno_fold_trunc_u_convert_s" (func $11))
  (export "f32.o_fold_trunc_u_convert_u" (func $14))
  (export "f64.i64.no_fold_trunc_s_convert_s" (func $14))
  (export "f64.i64.no_fold_trunc_u_rt_u" (func $17))
  
  (func $2 (type $0)
    (param $x f32)
    (result f32)
    local.get $x
    i32.trunc_f32_s
    f32.convert_i32_s
    )
  
  (func $3 (type $0)
    (param $x f32)
    (result f32)
    local.get $x
    i32.trunc_f32_u
    f32.convert_i32_s
    )
  
  (func $4 (type $0)
    (param $x f32)
    (result f32)
    local.get $x
    i32.trunc_f32_s
    f32.convert_i32_u
    )
  
  (func $5 (type $0)
    (param $x f32)
    (result f32)
    local.get $x
    i32.trunc_f32_u
    f32.convert_i32_u
    )
  
  (func $6 (type $1)
    (param $x f64)
    (result f64)
    local.get $x
    i32.trunc_f64_s
    f64.convert_i32_s
    )
  
  (func $7 (type $1)
    (param $x f64)
    (result f64)
    local.get $x
    i32.trunc_f64_u
    f64.convert_i32_s
    )
  
  (func $8 (type $1)
    (param $x f64)
    (result f64)
    local.get $x
    i32.trunc_f64_s
    f64.convert_i32_u
    )
  
  (func $9 (type $1)
    (param $x f64)
    (result f64)
    local.get $x
    i32.trunc_f64_u
    f64.convert_i32_u
    )
  
  (func $10 (type $0)
  (param $x f32)
    (result f32)
    local.get $x
    i64.trunc_f32_s
    f32.convert_i64_s
    )
  
  (func $11 (type $0)
    (param $x f32)
    (result f32)
    local.get $x
    i64.trunc_f32_s
    f32.convert_i64_u
    )
  
  (func $13 (type $0)
    (param $x f32)
    (result f32)
    local.get $x
    i64.trunc_f32_u
    f32.convert_i64_u
    )
  
  (func $14 (type $1)
    (param $x f64)
    (result f64)
    local.get $x
    i64.trunc_f64_s
    f64.convert_i64_s
    )
  
  (func $15  (param $x f64)
    (result f64)
    local.get $x
  
    )
  
  (func $17 (type $1)
    (param $x f64)
    (result f64)
    local.get $x
    i64.trunc_f64_u
    f64.convert_i64_u
    ))