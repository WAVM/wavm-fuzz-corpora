(module
  (type $0 (func (result i32)))
  (type $1 (func (result i64)))
  (type $2 (func (result f32)))
  (type $3 (func (result f64)))
  (export "f32.nan" (func $4))
  (export "f32.positive_nan" (func $5))
  (export "f32.negatiep3" (func $41))
  (export "f64-hex-sep4" (func $84))
  (export "f64-hex-sep5" (func $85))
  
  (func $4 (type $0)
    (result i32)
    f32.const +nan:0x400000
    i32.reinterpret_f32
    )
  
  (func $5 (type $0)
    (result i32)
    f32.const +nan:0x400000
    i32.reinterpret_f32
    )
  
  (func $6 (type $0)
    (result i32)
    f32.const -nan:0x400000
    i32.reinterpret_f32
    )
  
  (func $7 (type $0)

    (result i32)
    f32.const -nan:0x2abcde
    i32.reinterpret_f32
    )
  
  (func $13 (type $0)
    (result i32)
    f32.const +inf
    i32.reinterpret_f32
    )
  
  (func $14 (type $0)
    (result i32)
    f32.const +inf
    i32.reinterpret_f32
    )
  
  (func $15 (type $0)
    (result i32)
    f32.const -inf
    i32.reinterpret_f32
    )
  
  (func $16 (type $0)
    (result i32)
    f32.const 0x0.000000p-127
    i32.reinterpret_f32
    )
  
  (func $17 (type $0)
    (result i32)
    f32.const 0x0.000000p-127
    i32.reinterpret_f32
    )
  
  (func $18 (type $0)
    (result i32)
    f32.const -0x0.000000p-127
    i32.reinterpret_f32
    )
  
  (func $19 (type $0)
    (result i32)
    f32.const 0x1.921fb6p+2
    i32.reinterpret_f32
    )
  
  (func $20 (type $0)
    (result i32)
    f32.const 0x0.000004p-127
    i32.reinterpret_f32
    )
  
  (func $57 (type $0)
    (result i32)
    f32.const 0x1.000000p-126
    i32.reinterpret_f32
    )

  (func $31 (type $0)
    (result i32)
    f32.const 0x1
    i32.reinterpret_f32
    )
  
  (func $33 (type $0)
    (result i32)
    f32.const 0x1.2a05f2p+33
    i32.reinterpret_f32
    )
  
  (func $34 (type $0)
    (result i32)
    f32.const 0x1.000002p-0
    i32.reinterpret_f32
    )
  
  (func $35 (type $1)
    (result i64)
    f64.const +nan:0x8000000000000
    i64.reinterpret_f64
    )
  
  (func $36 (type $1)
    (result i64)
    f64.const +nan:0x8000000000000
    i64.reinterpret_f64
    )
  
  (func $37 (type $1)
    (result i64)
    f64.const -nan:0x8000000000000
    i64.reinterpret_f64
    )
  
  (func $38 (type $1)
    (result i64)
    f64.const +nan:0x8000000000000
    i64.reinterpret_f64
    )
  
  (func $39 (type $1)
    (result i64)
    f64.const +nan:0x4000000000000
    i64.reinterpret_f64
    )
  
  (func $40 (type $1)
    (result i64)
    f64.const -nan:0xfffffffffffff
    i64.reinterpret_f64
    )
  
  (func $41 (type $1)
    (result i64)
    f64.const +nan:0x0123456789abc
    i64.reinterpret_f64
    )
  
  (func $42 (type $1)
    (result i64)
    f64.const +nan:0x3040506070809
    i64.reinterpret_f64
    )
  
  (func $43 (type $1)
    (result i64)
    f64.const -nan:0x2abcdef012345
    i64.reinterpret_f64
    )
  
  (func $44 (type $1)
    (result i64)
    f64.const +inf
    i64.reinterpret_f64
    )
  
  (func $45 (type $1)
    (result i64)
    f64.const +inf
    i64.reinterpret_f64
    )
  
  (func $46  (result f64)
    f64.const 0x1.5e01e00013332p+51
    )
  
  (func $82 (type $3)
    (result f64)
    f64.const 0x1.aa0f000000000p+16
    )
  
  (func $83 (type $3)
    (result f64)
    f64.const 0x1.41ffe2834b340p+15
    )
  
  (func $84 (type $3)
    (result f64)
    f64.const 0x1.e000000000000p+20
    )
  
  (func $85 (type $3)
    (result f64)
    f64.const 0x1.578050f9f7000p+44
    ))