(module
  (type $0 (func (param i32) (result v128)))
  (type $1 (func (param i32 v128) (result v128)))
  (type $2 (func (result v128)))
  (type $3 (func (param v128 v128) (result v128)))
  (type $4 (func (param v128) (result v128)))
  (type $5 (func (param v128) (result i32)))
  (type $6 (func (param v128 i32) (result v128)))
  (type $7 (func (param i64) (result v128)))
  (type $8 (func (param v128) (result i64)))
  (type $9 (func (param v128 i64) (result v128)))
  (type $10 (func (param f32) (result v128)))
  (type $11 (func (param v128) (result f32)))
  (type $12 (func (param v128 f32) (result v128)))
  (type $13 (func (param f64) (result v128)))
  (type $14 (func (param v128) (result f64)))
  (type $15 (func (param v128 f64) (result v128)))
  (type $16 (func (param v128 v128 v128) (result v128)))
  (memory $17  1)
  (export "v128.load" (func $19))
  (export "v128.store" (func $20))
  (export "v128.const" (func $21))
  (export "v128.shuffle_interleave_bytes" (func $22))
  (export "v128.shuffle_reverse_i32s" (func $23))
  (export "i8x16.splat" (func $24))
  (export "i8x16.extract_lane_s_first" (func $25))
  (export "i8x16.extract_lane_s_last" (func $26))
  (export "i8x16.extract_lane_u_first" (func $27))
  (export "i8x16.extract_lane_u_last" (func $28))
  (export "i8x16.replace_lane_first" (func $29))
  (export "i8x16.replace_lane_last" (func $30))
  (export "i16x8.splat" (func $31))
  (export "i16x8.extract_lane_s_first" (func $32))
  (export "i16x8.extract_lane_s_last" (func $33))
  (export "i16x8.extract_lane_u_first" (func $34))
  (export "i16x8.extract_lane_u_last" (func $35))
  (export "i16x8.replace_lane_first" (func $36))
  (export "i16x8.replace_lane_last" (func $37))
  (export "i32x4.splat" (func $38))
  (export "i32x4.extract_lane_first" (func $39))
  (export "i32x4.extract_lane_last" (func $40))
  (export "i32x4.replace_lane_first" (func $41))
  (export "i32x4.replace_lane_last" (func $42))
  (export "i64x2.splat" (func $43))
  (export "i64x2.extract_lane_first" (func $44))
  (export "i64x2.extract_lane_last" (func $45))
  (export "i64x2.replace_lane_first" (func $46))
  (export "i64x2.replace_lane_last" (func $47))
  (export "f32x4.splat" (func $48))
  (export "f32x4.extract_lane_first" (func $49))
  (export "f32x4.extract_lane_last" (func $50))
  (export "f32x4.replace_lane_first" (func $51))
  (export "f32x4.replace_lane_last" (func $52))
  (export "f64x2.splat" (func $53))
  (export "f64x2.extract_lane_first" (func $54))
  (export "f64x2.extract_lane_last" (func $55))
  (export "f64x2.replace_lane_first" (func $56))
  (export "f64x2.replace_lane_last" (func $57))
  (export "i8x16.eq" (func $58))
  (export "i8x16.ne" (func $59))
  (export "i8x16.lt_s" (func $60))
  (export "i8x16.lt_u" (func $61))
  (export "i8x16.gt_s" (func $62))
  (export "i8x16.gt_u" (func $63))
  (export "i8x16.le_s" (func $64))
  (export "i8x16.le_u" (func $65))
  (export "i8x16.ge_s" (func $66))
  (export "i8x16.ge_u" (func $67))
  (export "i16x8.eq" (func $68))
  (export "i16x8.ne" (func $69))
  (export "i16x8.lt_s" (func $70))
  (export "i16x8.lt_u" (func $71))
  (export "i16x8.gt_s" (func $72))
  (export "i16x8.gt_u" (func $73))
  (export "i16x8.le_s" (func $74))
  (export "i16x8.le_u" (func $75))
  (export "i16x8.ge_s" (func $76))
  (export "i16x8.ge_u" (func $77))
  (export "i32x4.eq" (func $78))
  (export "i32x4.ne" (func $79))
  (export "i32x4.lt_s" (func $80))
  (export "i32x4.lt_u" (func $81))
  (export "i32x4.gt_s" (func $82))
  (export "i32x4.gt_u" (func $83))
  (export "i32x4.le_s" (func $84))
  (export "i32x4.le_u" (func $85))
  (export "i32x4.ge_s" (func $86))
  (export "i32x4.ge_u" (func $87))
  (export "f32x4.eq" (func $88))
  (export "f32x4.ne" (func $89))
  (export "f32x4.lt" (func $90))
  (export "f32x4.gt" (func $91))
  (export "f32x4.le" (func $92))
  (export "f32x4.ge" (func $93))
  (export "f64x2.eq" (func $94))
  (export "f64x2.ne" (func $95))
  (export "f64x2.lt" (func $96))
  (export "f64x2.gt" (func $97))
  (export "f64x2.le" (func $98))
  (export "f64x2.ge" (func $99))
  (export "v128.not" (func $100))
  (export "v128.and" (func $101))
  (export "v128.or" (func $102))
  (export "v128.xor" (func $103))
  (export "v128.bitselect" (func $104))
  (export "i8x16.neg" (func $105))
  (export "i8x16.any_true" (func $106))
  (export "i8x16.all_true" (func $107))
  (export "i8x16.shl" (func $108))
  (export "i8x16.shr_s" (func $109))
  (export "i8x16.shr_u" (func $110))
  (export "i8x16.add" (func $111))
  (export "i8x16.add_saturate_s" (func $112))
  (export "i8x16.add_saturate_u" (func $113))
  (export "i8x16.sub" (func $114))
  (export "i8x16.sub_saturate_s" (func $115))
  (export "i8x16.sub_saturate_u" (func $116))
  (export "i16x8.neg" (func $117))
  (export "i16x8.any_true" (func $118))
  (export "i16x8.all_true" (func $119))
  (export "i16x8.shl" (func $120))
  (export "i16x8.shr_s" (func $121))
  (export "i16x8.shr_u" (func $122))
  (export "i16x8.add" (func $123))
  (export "i16x8.add_saturate_s" (func $124))
  (export "i16x8.add_saturate_u" (func $125))
  (export "i16x8.sub" (func $126))
  (export "i16x8.sub_saturate_s" (func $127))
  (export "i16x8.sub_saturate_u" (func $128))
  (export "i16x8.mul" (func $129))
  (export "i32x4.neg" (func $130))
  (export "i32x4.any_true" (func $131))
  (export "i32x4.all_true" (func $132))
  (export "i32x4.shl" (func $133))
  (export "i32x4.shr_s" (func $134))
  (export "i32x4.shr_u" (func $135))
  (export "i32x4.add" (func $136))
  (export "i32x4.sub" (func $137))
  (export "i32x4.mul" (func $138))
  (export "i64x2.neg" (func $139))
  (export "i64x2.shl" (func $140))
  (export "i64x2.shr_s" (func $141))
  (export "i64x2.shr_u" (func $142))
  (export "i64x2.add" (func $143))
  (export "i64x2.sub" (func $144))
  (export "f32x4.abs" (func $145))
  (export "f32x4.neg" (func $146))
  (export "f32x4.sqrt" (func $147))
  (export "f32x4.add" (func $148))
  (export "f32x4.sub" (func $149))
  (export "f32x4.mul" (func $150))
  (export "f32x4.div" (func $151))
  (export "f32x4.min" (func $152))
  (export "f32x4.max" (func $153))
  (export "f64x2.abs" (func $154))
  (export "f64x2.neg" (func $155))
  (export "f64x2.sqrt" (func $156))
  (export "f64x2.add" (func $157))
  (export "f64x2.sub" (func $158))
  (export "f64x2.mul" (func $159))
  (export "f64x2.div" (func $160))
  (export "f64x2.min" (func $161))
  (export "f64x2.max" (func $162))
  (export "i32x4.trunc_sat_f32x4_s" (func $163))
  (export "i32x4.trunc_sat_f32x4_u" (func $164))
  (export "f32x4.convert_i32x4_s" (func $165))
  (export "f32x4.convert_i32x4_u" (func $166))
  
  (func $19 (type $0)
    (param $0 i32)
    (result v128)
    local.get $0
    v128.load
    )
  
  (func $20 (type $1)
    (param $0 i32)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    v128.store
    local.get $0
    v128.load
    )
  
  (func $21 (type $2)
    (result v128)
    v128.const i32x4 0x00000001 0x00000002 0x00000003 0x00000004
    )
  
  (func $22 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    v8x16.shuffle 0 17 2 19 4 21 6 23 8 25 10 27 12 29 14 31
    )
  
  (func $23 (type $4)
    (param $0 v128)
    (result v128)
    local.get $0
    local.get $0
    v8x16.shuffle 12 13 14 15 8 9 10 11 4 5 6 7 0 1 2 3
    )
  
  (func $24 (type $0)
    (param $0 i32)
    (result v128)
    local.get $0
    i8x16.splat
    )
  
  (func $25 (type $5)
    (param $0 v128)
    (result i32)
    local.get $0
    i8x16.extract_lane_s 0
    )
  
  (func $26 (type $5)
    (param $0 v128)
    (result i32)
    local.get $0
    i8x16.extract_lane_s 15
    )
  
  (func $27 (type $5)
    (param $0 v128)
    (result i32)
    local.get $0
    i8x16.extract_lane_u 0
    )
  
  (func $28 (type $5)
    (param $0 v128)
    (result i32)
    local.get $0
    i8x16.extract_lane_u 15
    )
  
  (func $29 (type $6)
    (param $0 v128)
    (param $1 i32)
    (result v128)
    local.get $0
    local.get $1
    i8x16.replace_lane 0
    )
  
  (func $30 (type $6)
    (param $0 v128)
    (param $1 i32)
    (result v128)
    local.get $0
    local.get $1
    i8x16.replace_lane 15
    )
  
  (func $31 (type $0)
    (param $0 i32)
    (result v128)
    local.get $0
    i16x8.splat
    )
  
  (func $32 (type $5)
    (param $0 v128)
    (result i32)
    local.get $0
    i16x8.extract_lane_s 0
    )
  
  (func $33 (type $5)
    (param $0 v128)
    (result i32)
    local.get $0
    i16x8.extract_lane_s 7
    )
  
  (func $34 (type $5)
    (param $0 v128)
    (result i32)
    local.get $0
    i16x8.extract_lane_u 0
    )
  
  (func $35 (type $5)
    (param $0 v128)
    (result i32)
    local.get $0
    i16x8.extract_lane_u 7
    )
  
  (func $36 (type $6)
    (param $0 v128)
    (param $1 i32)
    (result v128)
    local.get $0
    local.get $1
    i16x8.replace_lane 0
    )
  
  (func $37 (type $6)
    (param $0 v128)
    (param $1 i32)
    (result v128)
    local.get $0
    local.get $1
    i16x8.replace_lane 7
    )
  
  (func $38 (type $0)
    (param $0 i32)
    (result v128)
    local.get $0
    i32x4.splat
    )
  
  (func $39 (type $5)
    (param $0 v128)
    (result i32)
    local.get $0
    i32x4.extract_lane 0
    )
  
  (func $40 (type $5)
    (param $0 v128)
    (result i32)
    local.get $0
    i32x4.extract_lane 3
    )
  
  (func $41 (type $6)
    (param $0 v128)
    (param $1 i32)
    (result v128)
    local.get $0
    local.get $1
    i32x4.replace_lane 0
    )
  
  (func $42 (type $6)
    (param $0 v128)
    (param $1 i32)
    (result v128)
    local.get $0
    local.get $1
    i32x4.replace_lane 3
    )
  
  (func $43 (type $7)
    (param $0 i64)
    (result v128)
    local.get $0
    i64x2.splat
    )
  
  (func $44 (type $8)
    (param $0 v128)
    (result i64)
    local.get $0
    i64x2.extract_lane 0
    )
  
  (func $45 (type $8)
    (param $0 v128)
    (result i64)
    local.get $0
    i64x2.extract_lane 1
    )
  
  (func $46 (type $9)
    (param $0 v128)
    (param $1 i64)
    (result v128)
    local.get $0
    local.get $1
    i64x2.replace_lane 0
    )
  
  (func $47 (type $9)
    (param $0 v128)
    (param $1 i64)
    (result v128)
    local.get $0
    local.get $1
    i64x2.replace_lane 1
    )
  
  (func $48 (type $10)
    (param $0 f32)
    (result v128)
    local.get $0
    f32x4.splat
    )
  
  (func $49 (type $11)
    (param $0 v128)
    (result f32)
    local.get $0
    f32x4.extract_lane 0
    )
  
  (func $50 (type $11)
    (param $0 v128)
    (result f32)
    local.get $0
    f32x4.extract_lane 3
    )
  
  (func $51 (type $12)
    (param $0 v128)
    (param $1 f32)
    (result v128)
    local.get $0
    local.get $1
    f32x4.replace_lane 0
    )
  
  (func $52 (type $12)
    (param $0 v128)
    (param $1 f32)
    (result v128)
    local.get $0
    local.get $1
    f32x4.replace_lane 3
    )
  
  (func $53 (type $13)
    (param $0 f64)
    (result v128)
    local.get $0
    f64x2.splat
    )
  
  (func $54 (type $14)
    (param $0 v128)
    (result f64)
    local.get $0
    f64x2.extract_lane 0
    )
  
  (func $55 (type $14)
    (param $0 v128)
    (result f64)
    local.get $0
    f64x2.extract_lane 1
    )
  
  (func $56 (type $15)
    (param $0 v128)
    (param $1 f64)
    (result v128)
    local.get $0
    local.get $1
    f64x2.replace_lane 0
    )
  
  (func $57 (type $15)
    (param $0 v128)
    (param $1 f64)
    (result v128)
    local.get $0
    local.get $1
    f64x2.replace_lane 1
    )
  
  (func $58 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i8x16.eq
    )
  
  (func $59 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i8x16.ne
    )
  
  (func $60 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i8x16.lt_s
    )
  
  (func $61 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i8x16.lt_u
    )
  
  (func $62 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i8x16.gt_s
    )
  
  (func $63 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i8x16.gt_u
    )
  
  (func $64 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i8x16.le_s
    )
  
  (func $65 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i8x16.le_u
    )
  
  (func $66 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i8x16.ge_s
    )
  
  (func $67 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i8x16.ge_u
    )
  
  (func $68 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i16x8.eq
    )
  
  (func $69 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i16x8.ne
    )
  
  (func $70 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i16x8.lt_s
    )
  
  (func $71 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i16x8.lt_u
    )
  
  (func $72 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i16x8.gt_s
    )
  
  (func $73 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i16x8.gt_u
    )
  
  (func $74 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i16x8.le_s
    )
  
  (func $75 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i16x8.le_u
    )
  
  (func $76 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i16x8.ge_s
    )
  
  (func $77 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i16x8.ge_u
    )
  
  (func $78 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i32x4.eq
    )
  
  (func $79 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i32x4.ne
    )
  
  (func $80 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i32x4.lt_s
    )
  
  (func $81 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i32x4.lt_u
    )
  
  (func $82 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i32x4.gt_s
    )
  
  (func $83 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i32x4.gt_u
    )
  
  (func $84 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i32x4.le_s
    )
  
  (func $85 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i32x4.le_u
    )
  
  (func $86 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i32x4.ge_s
    )
  
  (func $87 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i32x4.ge_u
    )
  
  (func $88 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    f32x4.eq
    )
  
  (func $89 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    f32x4.ne
    )
  
  (func $90 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    f32x4.lt
    )
  
  (func $91 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    f32x4.gt
    )
  
  (func $92 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    f32x4.le
    )
  
  (func $93 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    f32x4.ge
    )
  
  (func $94 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    f64x2.eq
    )
  
  (func $95 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    f64x2.ne
    )
  
  (func $96 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    f64x2.lt
    )
  
  (func $97 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    f64x2.gt
    )
  
  (func $98 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    f64x2.le
    )
  
  (func $99 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    f64x2.ge
    )
  
  (func $100 (type $4)
    (param $0 v128)
    (result v128)
    local.get $0
    v128.not
    )
  
  (func $101 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    v128.and
    )
  
  (func $102 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    v128.or
    )
  
  (func $103 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    v128.xor
    )
  
  (func $104 (type $16)
    (param $0 v128)
    (param $1 v128)
    (param $2 v128)
    (result v128)
    local.get $0
    local.get $1
    local.get $2
    v128.bitselect
    )
  
  (func $105 (type $4)
    (param $0 v128)
    (result v128)
    local.get $0
    i8x16.neg
    )
  
  (func $106 (type $5)
    (param $0 v128)
    (result i32)
    local.get $0
    i8x16.any_true
    )
  
  (func $107 (type $5)
    (param $0 v128)
    (result i32)
    local.get $0
    i8x16.all_true
    )
  
  (func $108 (type $6)
    (param $0 v128)
    (param $1 i32)
    (result v128)
    local.get $0
    local.get $1
    i8x16.shl
    )
  
  (func $109 (type $6)
    (param $0 v128)
    (param $1 i32)
    (result v128)
    local.get $0
    local.get $1
    i8x16.shr_s
    )
  
  (func $110 (type $6)
    (param $0 v128)
    (param $1 i32)
    (result v128)
    local.get $0
    local.get $1
    i8x16.shr_u
    )
  
  (func $111 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i8x16.add
    )
  
  (func $112 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i8x16.add_saturate_s
    )
  
  (func $113 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i8x16.add_saturate_u
    )
  
  (func $114 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i8x16.sub
    )
  
  (func $115 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i8x16.sub_saturate_s
    )
  
  (func $116 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i8x16.sub_saturate_u
    )
  
  (func $117 (type $4)
    (param $0 v128)
    (result v128)
    local.get $0
    i16x8.neg
    )
  
  (func $118 (type $5)
    (param $0 v128)
    (result i32)
    local.get $0
    i16x8.any_true
    )
  
  (func $119 (type $5)
    (param $0 v128)
    (result i32)
    local.get $0
    i16x8.all_true
    )
  
  (func $120 (type $6)
    (param $0 v128)
    (param $1 i32)
    (result v128)
    local.get $0
    local.get $1
    i16x8.shl
    )
  
  (func $121 (type $6)
    (param $0 v128)
    (param $1 i32)
    (result v128)
    local.get $0
    local.get $1
    i16x8.shr_s
    )
  
  (func $122 (type $6)
    (param $0 v128)
    (param $1 i32)
    (result v128)
    local.get $0
    local.get $1
    i16x8.shr_u
    )
  
  (func $123 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i16x8.add
    )
  
  (func $124 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i16x8.add_saturate_s
    )
  
  (func $125 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i16x8.add_saturate_u
    )
  
  (func $126 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i16x8.sub
    )
  
  (func $127 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i16x8.sub_saturate_s
    )
  
  (func $128 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i16x8.sub_saturate_u
    )
  
  (func $129 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i16x8.mul
    )
  
  (func $130 (type $4)
    (param $0 v128)
    (result v128)
    local.get $0
    i32x4.neg
    )
  
  (func $131 (type $5)
    (param $0 v128)
    (result i32)
    local.get $0
    i32x4.any_true
    )
  
  (func $132 (type $5)
    (param $0 v128)
    (result i32)
    local.get $0
    i32x4.all_true
    )
  
  (func $133 (type $6)
    (param $0 v128)
    (param $1 i32)
    (result v128)
    local.get $0
    local.get $1
    i32x4.shl
    )
  
  (func $134 (type $6)
    (param $0 v128)
    (param $1 i32)
    (result v128)
    local.get $0
    local.get $1
    i32x4.shr_s
    )
  
  (func $135 (type $6)
    (param $0 v128)
    (param $1 i32)
    (result v128)
    local.get $0
    local.get $1
    i32x4.shr_u
    )
  
  (func $136 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i32x4.add
    )
  
  (func $137 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i32x4.sub
    )
  
  (func $138 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i32x4.mul
    )
  
  (func $139 (type $4)
    (param $0 v128)
    (result v128)
    local.get $0
    i64x2.neg
    )
  
  (func $140 (type $6)
    (param $0 v128)
    (param $1 i32)
    (result v128)
    local.get $0
    local.get $1
    i64x2.shl
    )
  
  (func $141 (type $6)
    (param $0 v128)
    (param $1 i32)
    (result v128)
    local.get $0
    local.get $1
    i64x2.shr_s
    )
  
  (func $142 (type $6)
    (param $0 v128)
    (param $1 i32)
    (result v128)
    local.get $0
    local.get $1
    i64x2.shr_u
    )
  
  (func $143 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i64x2.add
    )
  
  (func $144 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    i64x2.sub
    )
  
  (func $145 (type $4)
    (param $0 v128)
    (result v128)
    local.get $0
    f32x4.abs
    )
  
  (func $146 (type $4)
    (param $0 v128)
    (result v128)
    local.get $0
    f32x4.neg
    )
  
  (func $147 (type $4)
    (param $0 v128)
    (result v128)
    local.get $0
    f32x4.sqrt
    )
  
  (func $148 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    f32x4.add
    )
  
  (func $149 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    f32x4.sub
    )
  
  (func $150 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    f32x4.mul
    )
  
  (func $151 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    f32x4.div
    )
  
  (func $152 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    f32x4.min
    )
  
  (func $153 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    f32x4.max
    )
  
  (func $154 (type $4)
    (param $0 v128)
    (result v128)
    local.get $0
    f64x2.abs
    )
  
  (func $155 (type $4)
    (param $0 v128)
    (result v128)
    local.get $0
    f64x2.neg
    )
  
  (func $156 (type $4)
    (param $0 v128)
    (result v128)
    local.get $0
    f64x2.sqrt
    )
  
  (func $157 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    f64x2.add
    )
  
  (func $158 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    f64x2.sub
    )
  
  (func $159 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    f64x2.mul
    )
  
  (func $160 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    f64x2.div
    )
  
  (func $161 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    f64x2.min
    )
  
  (func $162 (type $3)
    (param $0 v128)
    (param $1 v128)
    (result v128)
    local.get $0
    local.get $1
    f64x2.max
    )
  
  (func $163 (type $4)
    (param $0 v128)
    (result v128)
    local.get $0
    i32x4.trunc_sat_f32x4_s
    )
  
  (func $164 (type $4)
    (param $0 v128)
    (result v128)
    local.get $0
    i32x4.trunc_sat_f32x4_u
    )
  
  (func $165 (type $4)
    (param $0 v128)
    (result v128)
    local.get $0
    f32x4.convert_i32x4_s
    )
  
  (func $166 (type $4)
    (param $0 v128)
    (result v128)
    local.get $0
    f32x4.convert_i32x4_u
    )
  
  (data $18 (i32.const 128)
    "WASMSIMDGOESFAST"))