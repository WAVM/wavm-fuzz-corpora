(module
  (type $0 (func (param i32 v128 f64) (result i64)))
  (type $1 (func (param funcref i64 f32) (result v128 f32)))
  (type $2 (func (result funcref f32)))
  (type $3 (func))
  (type $4 (func (param i32 i64) (result f32)))
  (type $5 (func (result f64 i32 v128)))
  (type $6 (func (result i64 f32 externref funcref)))
  (import "env" "memory" (memory $9 48 14182 shared))
  (import "env" "table" (table $7 13 4294967295 shared funcref))
  (import "env" "global0" (global $11 funcref))
  (import "env" "global3" (global $12 i32))
  (import "env" "global5" (global $13 i64))
  (import "env" "func0" (func $21 (param i32 v128 f64) (result i64)))
  (import "env" "func1" (func $22 (result funcref f32)))
  (memory $10  5 64988 shared)
  (table $8  65 4294967295 funcref)
  (global $14  i32 (i32.const -2024226509))
  (global $15  i32 (i32.const 1322839522))
  (global $16  (mut i64) (i64.const 1945217216841739619))
  (elem $17 funcref
    (ref.func $23) (ref.func $24) (ref.func $21) (ref.func $24)
    (ref.null func) (ref.func $24) (ref.null func) (ref.func $24)
    (ref.func $21) (ref.null func) (ref.func $23) (ref.func $21)
    (ref.null func) (ref.func $21) (ref.func $24) (ref.func $23)
    (ref.func $24) (ref.func $24) (ref.func $22) (ref.func $23)
    (ref.func $21) (ref.func $22) (ref.null func) (ref.func $24)
    (ref.func $21) (ref.func $23) (ref.func $24) (ref.func $24)
    (ref.null func) (ref.null func) (ref.null func) (ref.func $21)
    (ref.func $24) (ref.func $24) (ref.func $23) (ref.func $23)
    (ref.func $23) (ref.func $22) (ref.func $23) (ref.func $21)
    (ref.func $23) (ref.func $23))
  (elem $18 memory
    $10 $10 $10 $10 $9 $9 $10 $9
    $10 $10)
  
  (func $23 (type $1)
    (param $0 funcref)
    (param $1 i64)
    (param $2 f32)
    (result v128 f32)
    (local $3 f32)
    (local $4 funcref)
    (local $5 f32)
    (local $6 i64)
    global.get $14
    global.get $12
    i64.atomic.load32_u $10 offset=2647526695
    i64.atomic.rmw8.xor_u offset=662362437
    i32.const 669208574
    local.get $6
    loop $loop (param i32 i64) (result f32)
      memory.size $10
      call_indirect $8 (type $4)
      f64.const -0x1.72a4c7daaf94ap+585
      block $block (result f64 i32 v128)
        i64.const 8874431290507585563
        table.size $7
        v64x2.load_splat $10 offset=4107993861 align=4
        i16x8.extract_lane_s 7
        ref.null extern
        ref.is_null
        i32.or
        call_indirect $7 (type $3)
        global.set $16
        global.get $11
        ref.is_null
        table.get $8
        ref.is_null
        ref.null func
        table.set $7
        i64.const 7861849982885809652
        global.set $16
        global.get $12
        call_indirect $8 (type $3)
        global.get $16
        local.set $1
        local.get $2
        drop
        global.get $11
        ref.is_null
        ref.null extern
        ref.is_null
        i32.rotr
        call_indirect $7 (type $3)
        local.get $2
        local.set $5
        atomic.fence
        i32.const -505996186
        table.get $8
        ref.null extern
        drop
        ref.null func
        local.set $0
        ref.is_null
        unreachable
      end ;; $block
      v128.store offset=313123978
      unreachable
    end ;; $loop
    local.set $3
    global.set $16
    local.get $3
    local.set $2
    local.get $1
    ref.null extern
    ref.null extern
    ref.is_null
    table.get $8
    unreachable
    )
  
  (func $24 (type $3)
    ref.null extern
    table.size $8
    global.get $13
    i64.atomic.rmw16.and_u $10 offset=3481375333
    call $24
    global.get $11
    loop $loop (result i64 f32 externref funcref)
      atomic.fence
      global.get $13
      table.size $7
      i64.extend_i32_u
      atomic.fence
      nop
      i64.or
      ref.null func
      return
    end ;; $loop
    ref.null extern
    ref.is_null
    table.get $7
    return
    )
  
  (data $19 (i32.const 1036218210)
    ";h\aadX\98DJ\f2h\f1e\dc\1c\f7U")
  
  (data $20 
    "d\8d\b8\85,\c1\e9)KF\e0\fd1\c5<\98\9a\e2B\9e8V\e6\ebo\c6K\f7\82\13\a8\96\99Vk\1cBh\8f"))