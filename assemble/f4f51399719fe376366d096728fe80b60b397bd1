(module
  (type $0 (func (param f32 i32)))
  (type $1 (func (param i32)))
  (type $2 (func (param i64) (result externref)))
  (type $3 (func (result f64 i32 f32 f32)))
  (import "env" "table" (table $4 68 4294967295 shared funcref))
  (import "env" "global2" (global $7 (mut i32)))
  (memory $6  45 49421 shared)
  (table $5  71 4294967295 shared funcref)
  (global $8  (mut i64) (i64.const -8894038799163788003))
  (global $9  f64 (f64.const 0x1.7e28636516fd7p+63))
  (elem $10 declare global
    $8 $8 $8 $8 $9 $9 $8 $9
    $7 $9 $8 $7 $9 $9 $8 $8
    $7 $9 $9 $7 $7 $9 $9 $7
    $9 $7 $7 $9 $7 $9 $8 $9
    $9 $7 $8 $8 $7 $7 $8 $8
    $9 $7 $7 $7 $7 $9 $7 $8
    $7 $9 $8 $9 $7 $8 $7 $8
    $7 $8 $9 $7 $7 $9 $7 $9
    $7)
  
  (func $11 (type $0)
    (param $0 f32)
    (param $1 i32)
    (local $2 externref)
    (local $3 f32)
    (local $4 externref)
    table.size $4
    v64x2.load_splat offset=3922230609
    i32x4.trunc_sat_f32x4_s
    i16x8.extract_lane_s 6
    i32.const -282523338
    i64.atomic.load offset=2332114019
    local.get $1
    i32.clz
    i64.atomic.load offset=3308106792
    i64.shr_s
    i64.atomic.store32 offset=3156480000
    f32.const -0x1.3de27cp+27
    i64.const 2431195122308097994
    i64.extend16_s
    block $block (param i64) (result externref)
      return
    end ;; $block
    return
    )
  
  (func $12 (type $1)
    (param $0 i32)
    (local $1 externref)
    (local $2 v128)
    global.get $9
    loop $loop (result f64 i32 f32 f32)
      f64.const 0x1.390db462631e8p-933
      elem.drop $10
      local.get $0
      local.get $0
      i16x8.splat
      global.get $7
      i32.load8_s offset=900981248
      i16x8.splat
      i16x8.ne
      v128.not
      i32x4.neg
      v128.store offset=1857710033 align=4
      drop
      global.get $7
      br_if $loop
      v128.const i32x4 0xf31f7518 0x9c098e45 0x61eda711 0x72e58a70
      br $loop
    end ;; $loop
    f32.min
    unreachable
    ))