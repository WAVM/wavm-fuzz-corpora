(module
  (type $0 (func (param v128) (result i32)))
  (type $1 (func (param v128 v128) (result i32)))
  (type $2 (func (param v128 v128 v128) (result i32)))
  (memory $3  1)
  (export "i8x16_any_true_as_if_cond" (func $4))
  (export "i16x8_any_true_as_if_cond" (func $5))
  (export "i32x4_any_true_as_if_cond" (func $6))
  (export "i8x16_all_true_as_if_cond" (func $7))
  (export "i16x8_all_true_as_if_cond" (func $8))
  (export "i32x4_all_true_as_if_cond" (func $9))
  (export "i8x16_any_true_as_select_cond" (func $10))
  (export "i16x8_any_true_as_select_cond" (func $11))
  (export "i32x4_any_true_as_select_cond" (func $12))
  (export "i8x16_all_true_as_select_cond" (func $13))
  (export "i16x8_all_true_as_select_cond" (func $14))
  (export "i32x4_all_true_as_select_cond" (func $15))
  (export "i8x16_any_true_as_br_if_cond" (func $16))
  (export "i16x8_any_true_as_br_if_cond" (func $17))
  (export "i32x4_any_true_as_br_if_cond" (func $18))
  (export "i8x16_all_true_as_br_if_cond" (func $19))
  (export "i16x8_all_true_as_br_if_cond" (func $20))
  (export "i32x4_all_true_as_br_if_cond" (func $21))
  (export "i8x16_any_true_as_i32.and_operand" (func $22))
  (export "i16x8_any_true_as_i32.and_operand" (func $23))
  (export "i32x4_any_true_as_i32.and_operand" (func $24))
  (export "i8x16_any_true_as_i32.or_operand" (func $25))
  (export "i16x8_any_true_as_i32.or_operand" (func $26))
  (export "i32x4_any_true_as_i32.or_operand" (func $27))
  (export "i8x16_any_true_as_i32.xor_operand" (func $28))
  (export "i16x8_any_true_as_i32.xor_operand" (func $29))
  (export "i32x4_any_true_as_i32.xor_operand" (func $30))
  (export "i8x16_all_true_as_i32.and_operand" (func $31))
  (export "i16x8_all_true_as_i32.and_operand" (func $32))
  (export "i32x4_all_true_as_i32.and_operand" (func $33))
  (export "i8x16_all_true_as_i32.or_operand" (func $34))
  (export "i16x8_all_true_as_i32.or_operand" (func $35))
  (export "i32x4_all_true_as_i32.or_operand" (func $36))
  (export "i8x16_all_true_as_i32.xor_operand" (func $37))
  (export "i16x8_all_true_as_i32.xor_operand" (func $38))
  (export "i32x4_all_true_as_i32.xor_operand" (func $39))
  (export "i8x16_any_true_with_v128.not" (func $40))
  (export "i16x8_any_true_with_v128.not" (func $41))
  (export "i32x4_any_true_with_v128.not" (func $42))
  (export "i8x16_any_true_with_v128.and" (func $43))
  (export "i16x8_any_true_with_v128.and" (func $44))
  (export "i32x4_any_true_with_v128.and" (func $45))
  (export "i8x16_any_true_with_v128.or" (func $46))
  (export "i16x8_any_true_with_v128.or" (func $47))
  (export "i32x4_any_true_with_v128.or" (func $48))
  (export "i8x16_any_true_with_v128.xor" (func $49))
  (export "i16x8_any_true_with_v128.xor" (func $50))
  (export "i32x4_any_true_with_v128.xor" (func $51))
  (export "i8x16_any_true_with_v128.bitselect" (func $52))
  (export "i16x8_any_true_with_v128.bitselect" (func $53))
  (export "i32x4_any_true_with_v128.bitselect" (func $54))
  (export "i8x16_all_true_with_v128.not" (func $55))
  (export "i16x8_all_true_with_v128.not" (func $56))
  (export "i32x4_all_true_with_v128.not" (func $57))
  (export "i8x16_all_true_with_v128.and" (func $58))
  (export "i16x8_all_true_with_v128.and" (func $59))
  (export "i32x4_all_true_with_v128.and" (func $60))
  (export "i8x16_all_true_with_v128.or" (func $61))
  (export "i16x8_all_true_with_v128.or" (func $62))
  (export "i32x4_all_true_with_v128.or" (func $63))
  (export "i8x16_all_true_with_v128.xor" (func $64))
  (export "i16x8_all_true_with_v128.xor" (func $65))
  (export "i32x4_all_true_with_v128.xor" (func $66))
  (export "i8x16_all_true_with_v128.bitselect" (func $67))
  (export "i16x8_all_true_with_v128.bitselect" (func $68))
  (export "i32x4_all_true_with_v128.bitselect" (func $69))
  
  (func $4 (type $0)
    (param $0 v128)
    (result i32)
    local.get $0
    i8x16.any_true
    if $if (result i32)
      i32.const 1
    else
      i32.const 0
    end ;; $if
    )
  
  (func $5 (type $0)
    (param $0 v128)
    (result i32)
    local.get $0
    i16x8.any_true
    if $if (result i32)
      i32.const 1
    else
      i32.const 0
    end ;; $if
    )
  
  (func $6 (type $0)
    (param $0 v128)
    (result i32)
    local.get $0
    i32x4.any_true
    if $if (result i32)
      i32.const 1
    else
      i32.const 0
    end ;; $if
    )
  
  (func $7 (type $0)
    (param $0 v128)
    (result i32)
    local.get $0
    i8x16.all_true
    if $if (result i32)
      i32.const 1
    else
      i32.const 0
    end ;; $if
    )
  
  (func $8 (type $0)
    (param $0 v128)
    (result i32)
    local.get $0
    i16x8.all_true
    if $if (result i32)
      i32.const 1
    else
      i32.const 0
    end ;; $if
    )
  
  (func $9 (type $0)
    (param $0 v128)
    (result i32)
    local.get $0
    i32x4.all_true
    if $if (result i32)
      i32.const 1
    else
      i32.const 0
    end ;; $if
    )
  
  (func $10 (type $0)
    (param $0 v128)
    (result i32)
    i32.const 1
    i32.const 0
    local.get $0
    i8x16.any_true
    select
    )
  
  (func $11 (type $0)
    (param $0 v128)
    (result i32)
    i32.const 1
    i32.const 0
    local.get $0
    i16x8.any_true
    select
    )
  
  (func $12 (type $0)
    (param $0 v128)
    (result i32)
    i32.const 1
    i32.const 0
    local.get $0
    i32x4.any_true
    select
    )
  
  (func $13 (type $0)
    (param $0 v128)
    (result i32)
    i32.const 1
    i32.const 0
    local.get $0
    i8x16.all_true
    select
    )
  
  (func $14 (type $0)
    (param $0 v128)
    (result i32)
    i32.const 1
    i32.const 0
    local.get $0
    i16x8.all_true
    select
    )
  
  (func $15 (type $0)
    (param $0 v128)
    (result i32)
    i32.const 1
    i32.const 0
    local.get $0
    i32x4.all_true
    select
    )
  
  (func $16 (type $0)
    (param $0 v128)
    (result i32)
    (local $1 i32)
    i32.const 2
    local.set $1
    block $block
      i32.const 1
      local.set $1
      local.get $0
      i8x16.any_true
      br_if $block
      i32.const 0
      local.set $1
    end ;; $block
    local.get $1
    )
  
  (func $17 (type $0)
    (param $0 v128)
    (result i32)
    (local $1 i32)
    i32.const 2
    local.set $1
    block $block
      i32.const 1
      local.set $1
      local.get $0
      i16x8.any_true
      br_if $block
      i32.const 0
      local.set $1
    end ;; $block
    local.get $1
    )
  
  (func $18 (type $0)
    (param $0 v128)
    (result i32)
    (local $1 i32)
    i32.const 2
    local.set $1
    block $block
      i32.const 1
      local.set $1
      local.get $0
      i32x4.any_true
      br_if $block
      i32.const 0
      local.set $1
    end ;; $block
    local.get $1
    )
  
  (func $19 (type $0)
    (param $0 v128)
    (result i32)
    (local $1 i32)
    i32.const 2
    local.set $1
    block $block
      i32.const 1
      local.set $1
      local.get $0
      i8x16.all_true
      br_if $block
      i32.const 0
      local.set $1
    end ;; $block
    local.get $1
    )
  
  (func $20 (type $0)
    (param $0 v128)
    (result i32)
    (local $1 i32)
    i32.const 2
    local.set $1
    block $block
      i32.const 1
      local.set $1
      local.get $0
      i16x8.all_true
      br_if $block
      i32.const 0
      local.set $1
    end ;; $block
    local.get $1
    )
  
  (func $21 (type $0)
    (param $0 v128)
    (result i32)
    (local $1 i32)
    i32.const 2
    local.set $1
    block $block
      i32.const 1
      local.set $1
      local.get $0
      i32x4.all_true
      br_if $block
      i32.const 0
      local.set $1
    end ;; $block
    local.get $1
    )
  
  (func $22 (type $1)
    (param $0 v128)
    (param $1 v128)
    (result i32)
    local.get $0
    i8x16.any_true
    local.get $1
    i8x16.any_true
    i32.and
    )
  
  (func $23 (type $1)
    (param $0 v128)
    (param $1 v128)
    (result i32)
    local.get $0
    i16x8.any_true
    local.get $1
    i16x8.any_true
    i32.and
    )
  
  (func $24 (type $1)
    (param $0 v128)
    (param $1 v128)
    (result i32)
    local.get $0
    i32x4.any_true
    local.get $1
    i32x4.any_true
    i32.and
    )
  
  (func $25 (type $1)
    (param $0 v128)
    (param $1 v128)
    (result i32)
    local.get $0
    i8x16.any_true
    local.get $1
    i8x16.any_true
    i32.or
    )
  
  (func $26 (type $1)
    (param $0 v128)
    (param $1 v128)
    (result i32)
    local.get $0
    i16x8.any_true
    local.get $1
    i16x8.any_true
    i32.or
    )
  
  (func $27 (type $1)
    (param $0 v128)
    (param $1 v128)
    (result i32)
    local.get $0
    i32x4.any_true
    local.get $1
    i32x4.any_true
    i32.or
    )
  
  (func $28 (type $1)
    (param $0 v128)
    (param $1 v128)
    (result i32)
    local.get $0
    i8x16.any_true
    local.get $1
    i8x16.any_true
    i32.xor
    )
  
  (func $29 (type $1)
    (param $0 v128)
    (param $1 v128)
    (result i32)
    local.get $0
    i16x8.any_true
    local.get $1
    i16x8.any_true
    i32.xor
    )
  
  (func $30 (type $1)
    (param $0 v128)
    (param $1 v128)
    (result i32)
    local.get $0
    i32x4.any_true
    local.get $1
    i32x4.any_true
    i32.xor
    )
  
  (func $31 (type $1)
    (param $0 v128)
    (param $1 v128)
    (result i32)
    local.get $0
    i8x16.all_true
    local.get $1
    i8x16.all_true
    i32.and
    )
  
  (func $32 (type $1)
    (param $0 v128)
    (param $1 v128)
    (result i32)
    local.get $0
    i16x8.all_true
    local.get $1
    i16x8.all_true
    i32.and
    )
  
  (func $33 (type $1)
    (param $0 v128)
    (param $1 v128)
    (result i32)
    local.get $0
    i32x4.all_true
    local.get $1
    i32x4.all_true
    i32.and
    )
  
  (func $34 (type $1)
    (param $0 v128)
    (param $1 v128)
    (result i32)
    local.get $0
    i8x16.all_true
    local.get $1
    i8x16.all_true
    i32.or
    )
  
  (func $35 (type $1)
    (param $0 v128)
    (param $1 v128)
    (result i32)
    local.get $0
    i16x8.all_true
    local.get $1
    i16x8.all_true
    i32.or
    )
  
  (func $36 (type $1)
    (param $0 v128)
    (param $1 v128)
    (result i32)
    local.get $0
    i32x4.all_true
    local.get $1
    i32x4.all_true
    i32.or
    )
  
  (func $37 (type $1)
    (param $0 v128)
    (param $1 v128)
    (result i32)
    local.get $0
    i8x16.all_true
    local.get $1
    i8x16.all_true
    i32.xor
    )
  
  (func $38 (type $1)
    (param $0 v128)
    (param $1 v128)
    (result i32)
    local.get $0
    i16x8.all_true
    local.get $1
    i16x8.all_true
    i32.xor
    )
  
  (func $39 (type $1)
    (param $0 v128)
    (param $1 v128)
    (result i32)
    local.get $0
    i32x4.all_true
    local.get $1
    i32x4.all_true
    i32.xor
    )
  
  (func $40 (type $0)
    (param $0 v128)
    (result i32)
    local.get $0
    v128.not
    i8x16.any_true
    )
  
  (func $41 (type $0)
    (param $0 v128)
    (result i32)
    local.get $0
    v128.not
    i16x8.any_true
    )
  
  (func $42 (type $0)
    (param $0 v128)
    (result i32)
    local.get $0
    v128.not
    i32x4.any_true
    )
  
  (func $43 (type $1)
    (param $0 v128)
    (param $1 v128)
    (result i32)
    local.get $0
    local.get $1
    v128.and
    i8x16.any_true
    )
  
  (func $44 (type $1)
    (param $0 v128)
    (param $1 v128)
    (result i32)
    local.get $0
    local.get $1
    v128.and
    i16x8.any_true
    )
  
  (func $45 (type $1)
    (param $0 v128)
    (param $1 v128)
    (result i32)
    local.get $0
    local.get $1
    v128.and
    i32x4.any_true
    )
  
  (func $46 (type $1)
    (param $0 v128)
    (param $1 v128)
    (result i32)
    local.get $0
    local.get $1
    v128.or
    i8x16.any_true
    )
  
  (func $47 (type $1)
    (param $0 v128)
    (param $1 v128)
    (result i32)
    local.get $0
    local.get $1
    v128.or
    i16x8.any_true
    )
  
  (func $48 (type $1)
    (param $0 v128)
    (param $1 v128)
    (result i32)
    local.get $0
    local.get $1
    v128.or
    i32x4.any_true
    )
  
  (func $49 (type $1)
    (param $0 v128)
    (param $1 v128)
    (result i32)
    local.get $0
    local.get $1
    v128.xor
    i8x16.any_true
    )
  
  (func $50 (type $1)
    (param $0 v128)
    (param $1 v128)
    (result i32)
    local.get $0
    local.get $1
    v128.xor
    i16x8.any_true
    )
  
  (func $51 (type $1)
    (param $0 v128)
    (param $1 v128)
    (result i32)
    local.get $0
    local.get $1
    v128.xor
    i32x4.any_true
    )
  
  (func $52 (type $2)
    (param $0 v128)
    (param $1 v128)
    (param $2 v128)
    (result i32)
    local.get $0
    local.get $1
    local.get $2
    v128.bitselect
    i8x16.any_true
    )
  
  (func $53 (type $2)
    (param $0 v128)
    (param $1 v128)
    (param $2 v128)
    (result i32)
    local.get $0
    local.get $1
    local.get $2
    v128.bitselect
    i16x8.any_true
    )
  
  (func $54 (type $2)
    (param $0 v128)
    (param $1 v128)
    (param $2 v128)
    (result i32)
    local.get $0
    local.get $1
    local.get $2
    v128.bitselect
    i32x4.any_true
    )
  
  (func $55 (type $0)
    (param $0 v128)
    (result i32)
    local.get $0
    v128.not
    i8x16.all_true
    )
  
  (func $56 (type $0)
    (param $0 v128)
    (result i32)
    local.get $0
    v128.not
    i16x8.all_true
    )
  
  (func $57 (type $0)
    (param $0 v128)
    (result i32)
    local.get $0
    v128.not
    i32x4.all_true
    )
  
  (func $58 (type $1)
    (param $0 v128)
    (param $1 v128)
    (result i32)
    local.get $0
    local.get $1
    v128.and
    i8x16.all_true
    )
  
  (func $59 (type $1)
    (param $0 v128)
    (param $1 v128)
    (result i32)
    local.get $0
    local.get $1
    v128.and
    i16x8.all_true
    )
  
  (func $60 (type $1)
    (param $0 v128)
    (param $1 v128)
    (result i32)
    local.get $0
    local.get $1
    v128.and
    i32x4.all_true
    )
  
  (func $61 (type $1)
    (param $0 v128)
    (param $1 v128)
    (result i32)
    local.get $0
    local.get $1
    v128.or
    i8x16.all_true
    )
  
  (func $62 (type $1)
    (param $0 v128)
    (param $1 v128)
    (result i32)
    local.get $0
    local.get $1
    v128.or
    i16x8.all_true
    )
  
  (func $63 (type $1)
    (param $0 v128)
    (param $1 v128)
    (result i32)
    local.get $0
    local.get $1
    v128.or
    i32x4.all_true
    )
  
  (func $64 (type $1)
    (param $0 v128)
    (param $1 v128)
    (result i32)
    local.get $0
    local.get $1
    v128.xor
    i8x16.all_true
    )
  
  (func $65 (type $1)
    (param $0 v128)
    (param $1 v128)
    (result i32)
    local.get $0
    local.get $1
    v128.xor
    i16x8.all_true
    )
  
  (func $66 (type $1)
    (param $0 v128)
    (param $1 v128)
    (result i32)
    local.get $0
    local.get $1
    v128.xor
    i32x4.all_true
    )
  
  (func $67 (type $2)
    (param $0 v128)
    (param $1 v128)
    (param $2 v128)
    (result i32)
    local.get $0
    local.get $1
    local.get $2
    v128.bitselect
    i8x16.all_true
    )
  
  (func $68 (type $2)
    (param $0 v128)
    (param $1 v128)
    (param $2 v128)
    (result i32)
    local.get $0
    local.get $1
    local.get $2
    v128.bitselect
    i16x8.all_true
    )
  
  (func $69 (type $2)
    (param $0 v128)
    (param $1 v128)
    (param $2 v128)
    (result i32)
    local.get $0
    local.get $1
    local.get $2
    v128.bitselect
    i32x4.all_true
    ))