(module
  (type $0 (func (param f32 f64) (result i32)))
  (type $1 (func (result funcref)))
  (type $2 (func (param f64) (result funcref)))
  (type $3 (func (param f64 i32 f32 v128)))
  (type $4 (func (param f64 f32 externref funcref) (result i32 i32)))
  (type $5 (func (param f64 f64 i32 f32) (result externref funcref funcref f32)))
  (type $6 (func (param v128) (result v128 funcref i64)))
  (type $7 (func (result funcref f32 funcref)))
  (type $8 (func (result f64 f32 externref funcref)))
  (type $9 (func (result i64 v128 funcref)))
  (type $10 (func (result f64 i32 funcref i32)))
  (import "env" "global4" (global $14 (mut v128)))
  (import "env" "func0" (func $23 (result funcref)))
  (memory $11  46 52253 shared)
  (memory $12  10 35381)
  (memory $13  87 27029 shared)
  (global $15  (mut f32) (f32.const 0x1.4b7a82p+30))
  (global $16  externref (ref.null extern))
  (global $17  funcref (ref.null func))
  (global $18  (mut f64) (f64.const 0x1.f4ccebd56d1b1p+61))
  (global $19  (mut f32) (f32.const 0x1.ad07f4p+30))
  (global $20  f32 (f32.const 0x1.89941ap+30))
  
  (func $24 (type $0)
    (param $0 f32)
    (param $1 f64)
    (result i32)
    atomic.fence
    global.get $16
    local.get $1
    global.get $18
    memory.size $12
    local.get $0
    loop $loop (param f64 f64 i32 f32) (result externref funcref funcref f32)
      f64.promote_f32
      v128.const i32x4 0x1da5560a 0x583b4f28 0x73cdba6f 0x1fac80ab
      block $block (param v128) (result v128 funcref i64)
        i32x4.neg
        memory.size $12
        i8x16.replace_lane 13
        global.get $18
        i64.trunc_f64_u
        i64x2.replace_lane 1
        i32x4.widen_high_i16x8_s
        v128.const i32x4 0xf12672f5 0x1fe28d41 0x594663e9 0xe35ad2a9
        f64x2.div
        i32x4.trunc_sat_f32x4_u
        local.get $1
        ref.null func
        ref.is_null
        ref.null extern
        ref.is_null
        i32.and
        drop
        local.set $1
        data.drop $22
        v128.not
        i8x16.neg
        memory.size $12
        i8x16.replace_lane 11
        i32x4.neg
        atomic.fence
        local.get $0
        unreachable
      end ;; $block
      unreachable
    end ;; $loop
    drop
    ref.is_null
    br 0
    )
  
  (func $25 (type $2)
    (param $0 f64)
    (result funcref)
    v128.const i32x4 0x58414277 0x831fa6d9 0x6aee3332 0xd51553d6
    i16x8.abs
    i16x8.extract_lane_s 5
    v16x8.load_interleaved_2 offset=4291695085
    f64x2.mul
    memory.size $12
    i32.extend16_s
    i32x4.load16x4_s offset=2748531675
    i16x8.ne
    f32.const -0x1.b81a4ep-110
    global.get $14
    loop $loop (result funcref f32 funcref)
      global.get $16
      loop $loop_0 (result f64 f32 externref funcref)
        br $loop_0
      end ;; $loop_0
      br $loop
    end ;; $loop
    ref.null extern
    unreachable
    )
  
  (func $26 (type $3)
    (param $0 f64)
    (param $1 i32)
    (param $2 f32)
    (param $3 v128)
    (local $4 f64)
    unreachable
    )
  
  (func $27 (type $4)
    (param $0 f64)
    (param $1 f32)
    (param $2 externref)
    (param $3 funcref)
    (result i32 i32)
    (local $4 i64)
    (local $5 v128)
    (local $6 i64)
    ref.null extern
    local.get $2
    global.get $20
    global.get $20
    loop $loop
      local.get $3
      f32.const 0x1.2a7d96p-111
      global.get $15
      atomic.fence
      f32.neg
      local.tee $1
      block $block (result i64 v128 funcref)
        f64.const 0x1.bd6c290427033p+29
        i64.trunc_sat_f64_s
        v128.const i32x4 0x3fee5599 0xdd01321d 0xd8a1b881 0x31f9c1dc
        loop $loop_0 (result f64 i32 funcref i32)
          local.get $5
          br $loop
        end ;; $loop_0
        ref.null func
        br $loop
      end ;; $block
      local.set $3
      br $loop
    end ;; $loop
    f32.min
    global.set $15
    unreachable
    )
  
  (data $21 (i32.const 1636111829)
    "\0d?\91\8a\cc\bcSjp]\a6\c2\ac\94\86\cf?\be\9d\bc+\8d@\ca\9d\e1\1aH\03\d5")
  
  (data $22 (memory $13) (i32.const -278433421)
    "\d1\00F\ef\ae]e\d5\fc\10n\e6\9c\d8\06\db\ae5\ca\87\0f\a9Z[\d1\e72{"))