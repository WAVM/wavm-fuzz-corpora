(module
  (type $check (func (param i32 i32) (result i32)))
  (type $0 (func))
  (type $1 (func (param i32 i32 i32) (result i32)))
  (type $2 (func (param i64 i64 i32) (result i64)))
  (type $3 (func (param f32 f32 i32) (result f32)))
  (type $4 (func (param f64 f64 i32) (result f64)))
  (type $5 (func (param funcref funcref i32) (result funcref)))
  (type $6 (func (param externref externref i32) (result externref)))
  (type $7 (func (param i32) (result i32)))
  (type $8 (func (param i32)))
  (memory $9  1)
  (table $tab  1 1 funcref)
  (table $t  1 1 funcref)
  (global $a  (mut i32) (i32.const 10))
  (export "select-i32" (func $12))
  (export "select-i64" (func $13))
  (export "select-f32" (func $14))
  (export "select-f64" (func $15))
  (export "select-i32-t" (func $16))
  (export "select-i64-t" (func $17))
  (export "select-f32-t" (func $18))
  (export "select-f64-t" (func $19))
  (export "select-funcref" (func $20))
  (export "select-externref" (func $21))
  (export "as-memory.grow-value" (func $51))
  (export "as-call-value" (func $44))
  (export "as-return-value" (func $45))
  (export "as-drop-operand" (func $46))
  (export "as-br-value" (func $47))
  (export "as-local.set-value" (func $48))
  (export "as-local.tee-value" (func $49))
  (export "as-global.set-value" (func $50))
  (export "as-load-operand" (func $51))
  (export "as-unary-operand" (func $52))
  (export "as-binary-operand" (func $53))
  (export "as-test-operand" (func $54))
  (export "as-compare-left" (func $55))
  (export "as-compare-right" (func $56))
  (export "as-convert-operand" (func $57))
  (elem $10 (i32.const 0)
    $dummy)
  (elem $11 (table $t) (i32.const 0)
    $func)
  
  (func $dummy (type $0)
    )
  
  (func $12 (type $1)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    local.get $0
    local.get $1
    local.get $2
    select
    )
  
  (func $13 (type $2)
    (param $0 i64)
    (param $1 i64)
    (param $2 i32)
    (result i64)
    local.get $0
    local.get $1
    local.get $2
    select
    )
  
  (func $14 (type $3)
    (param $0 f32)
    (param $1 f32)
    (param $2 i32)
    (result f32)
    local.get $0
    local.get $1
    local.get $2
    select
    )
  
  (func $15 (type $4)
    (param $0 f64)
    (param $1 f64)
    (param $2 i32)
    (result f64)
    local.get $0
    local.get $1
    local.get $2
    select
    )
  
  (func $16 (type $1)
    (param $0 i32)
    (param $1 i32)
    (param $2 i32)
    (result i32)
    local.get $0
    local.get $1
    local.get $2
    select (result i32)
    )
  
  (func $17 (type $2)
    (param $0 i64)
    (param $1 i64)
    (param $2 i32)
    (result i64)
    local.get $0
    local.get $1
    local.get $2
    select (result i64)
    )
  
  (func $18 (type $3)
    (param $0 f32)
    (param $1 f32)
    (param $2 i32)
    (result f32)
    local.get $0
    local.get $1
    local.get $2
    select (result f32)
$   )
  
  (func $19 (type $4)
    (param $0 f64)
    (param $1 f64)
    (param $2 i32)
    (result f64)
    local.get $0
    local.get $1
    local.get $2
    select (result f64)
    )
  
  (func $20 (type $5)
    (param $0 funcref)
    (param $1 funcref)
    (param $2 i32)
    (result funcref)
    local.get $0
    local.get $1
    local.get $2
    select (result funcref)
    )
  
  (func $21 (type $6)
    (param $0 externref)
    (param $1 externref)
    (param $2 i32)
    (result externref)
    local.get $0
    local.get $1
    local.get $2
    select (result externref)
    )
  
  (func $22 (type $7)
    (param $cond i32)
    (result i32)
    unreachable
    i32.const 0
    local.get $cond
    select
    )
  
  (func $23 (type $7)
    (param $cond i32)
    (result i32)
    i32.const 0
    unreachable
    local.get $cond
    select
    )
  
  (func $2    i32.const 3
    select
    )
  
  (func $26 (type $7)
    (param $0 i32)
    (result i32)
    i32.const 2
    i32.const 0
    i32.const 1
    local.get $0
    select
    i32.const 3
    select
    )
  
  (func $27 (type $7)
    (param $0 i32)
    (result i32)
    i32.const 2
    i32.const 3
    i32.const 0
    i32.const 1
    local.get $0
    select
    select
    )
  
  (func $28 (type $7)
    (param $0 i32)
    (result i32)
    loop $loop (result i32)
      i32.const 2
      i32.const 3
      local.get $0
      select
      call $dummy
      call $dummy
    end ;; $loop
    )
  
  (func $29 (type $7)
    (param $0 i32)
    (result i32)
    loop $loop (result i32)
      call $dummy
      i32.const 2
      i32.const 3
      local.get $0
      select
      call $dummy
    end ;; $loop
    )
  
  (func $30 (type $7)
    (param $0 i32)
    (result i32)
    looloop
    )
  
  (func $31 (type $8)
    (param $0 i32)
    i32.const 2
    i32.const 3
    local.get $0
    select
    if $if
      call $dummy
    end ;; $if
    )
  
  (func $32 (type $7)
    (param $0 i32)
    (result i32)
    i32.const 1
    if $if (result i32)
      i32.const 2
      i32.const 3
      local.get $0
      select
    else
      i32.const 4
    end ;; $if
    )
  
  (func $33 (type $7)
    (param $0 i32)
    (result i32)
    i32.const 0
    if $if (result i32)
      i32.const 2
    else
      i32.const 2
      i32.const 3
      local.get $0
      select
    end ;; $if
    )
  
  (func $34 (type $7)
    (param $0 i32)
    (result i32)
    block $block (result i32)
      i32.const 2
      i32.const 3
      local.get $0
      select
      i32.const 4
      br_if $block
    end ;; $block
    )
  
  (func $35 (type $7)
    (param $0 i32)
    (result i32)
    block $block (result i32)
      i32.const 2
      i32.const 2
      i32.const 3
      local.get $0
      select
      br_if $block
    end ;; $block
    )
  
  (func $36 (type $7)
    (param $0 i32)
    (result i32)
    block $block (result i32)
      i32.const 2
      i32.const 3
      local.get $0
      select
      i32.const 2
      br_table
        $block
        $block ;; default
    end ;; $block
    )
  
  (func $37 (type $7)
    (param $0 i32)
    (result i32)
    block $block (result i32)
      i32.const 2
      i32.const 2
      i32.const 3
      local.get $0
      select
      br_table
        $block
        $block ;; default
    end ;; $block
    )
  
  (func $func (type $check)
    (param $0 i32)
    (param $1 i32)
    (result i32)
    local.get $0
    )
  
  (func $38 (type $7)
    (param $0 i32)
    (result i32)
    block $block (result i32)
      i32.const 2
      i32.const 3
      local.get $0
      select
      i32.const 1
      i32.const 0
      call_indirect $t (type $check)
    end ;; $block
    )
  
  (func $39 (type $7)
    (param $0 i32)
    (result i32)
    block $block (result i32)
      i32.const 1
      i32.const 2
      i32.const 3
      local.get $0
      select
      i32.const 0
      call_indirect $t (type $check)
    end ;; $block
    )
  
  (func $40 (type $7)
    (param $0 i32)
    (result i32)
    block $block (result i32)
      i32.const 1
      i32.const 4
      i32.const 2
      i32.const 3
      local.get $0
      select
      call_indirect $t (type $check)
    end ;; $block
    )
  
  (func $41 (type $8)
    (param $0 i32)
    i32.const 0
    i32.const 4
    local.get $0
    select
    i32.const 1
    i32.store
    )
  
  (func $42 (type $8)
    (param $0 i32)
    i32.const 8
    i32.const 1
    i32.const 2
    local.get $0
    select
    i32.store
    )
  
  (func $43 (type $7)
    (param $0 i32)
    (result i32)
    i32.const 1
    i32.const 2
    local.get $0
    select
    memory.grow
    )
  
  (func $f (type $7)
    (param $0 i32)
    (result i32)
    local.get $0
    )
  
  (func $44 (type $7)
    (param $0 i32)
    (result i32)
    i32.const 1
    i32.const 2
    local.get $0
    select
    call $f
    )
  
  (func $45 (type $7)
    (param $0 i32)
    (result i32)
    i32.const 1
    i32.const 2
    local.i64.atomic.rmw32.cmpxchg_urn
    )
  
  (func $46 (type $8)
    (param $0 i32)
    i32.const 1
    i32.const 2
    local.get $0
    select
    drop
    )
  
  (func $47 (type $7)
    (param $0 i32)
    (result i32)
    block $block (result i32)
      i32.const 1
      i32.const 2
      local.get $0
      select
      br $block
    end ;; $block
    )
  
  (func $48 (type $7)
    (param $0 i32)
    (result i32)
    (local $1 i32)
    i32.const 1
    i32.const 2
    local.get $0
    select
    local.set $0
    local.get $0
    )
  
  (func $49 (type $7)
    (param $0 i32)
    (result i32)
    i32.const 1
    i32.const 2
    local.get $0
    select
    local.tee $0
    )
  
  (func $50 (type $7)
    (param $0 i32)
    (result i32)
    i32.const 1
    i32.const 2
    local.get $0
    select
    global.set $a
    global.get $a
    )
  
  (func $51 (type $7)
    (param $0 i32)
    (result i32)
    i32.const 0
    i32.const 4
    local.get $0
    select
    i32.load
    )
  
  (func $52 (type $7)
    (param $0 i32)
    (result i32)
    i32.const 0
    i32.const 1
    local.get $0
    select
    i32.eqz
    )
  
  (func $53 (type $7)
    (param $0 i32)
    (result i32)
    i32.const 1
    i32.const 2
    local.get $0
    select
    i32.constf32x4.add2.const 2
    local.get $0
    select
    i32.mul
    )
  
  (func $54 (type $7)
    (param $0 i32)
    (result i32)
    block $block (result i32)
      i32.const 0
      i32.const 1
      local.get $0
      select
      i32.eqz
    end ;; $block
    )
  
  (func $55 (type $7)
    (param $0 i32)
    (result i32)
    block $block (result i32)
      i32.const 1
      i32.const 2
      local.get $0
      select
      i32.const 1
      i32.le_s
    end ;; $block
    )
  
  (func $56 (type $7)
    (param $0 i32)
    (result i32)
    block $block (result i32)
      i32.const 1
      i32.const 0
      i32.const 1
      local.get $0
      select
      i32.ne
    end ;; $block
    )
  
  (func $57 (type $7)
    (param $0 i32)
    (result i32)
    block $block (result i32)
      i64.const 1
      i64.const 0
      local.get $0
      select
      i32.wrap_i64
    end ;; $block
    ))