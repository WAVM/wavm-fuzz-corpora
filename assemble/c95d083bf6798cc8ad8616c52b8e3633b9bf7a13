(module
  (type $0 (func (param i32 i64 f32 i64)))
  (type $1 (func (param f64 v128 externref) (result f64 externref)))
  (type $2 (func (param funcref funcref i64) (result funcref externref)))
  (import "env" "memory" (memory $5 52 28589 shared))
  (import "env" "memory" (memory $6 90 13587 shared))
  (import "env" "memory" (memory $7 16 54920))
  (import "env" "global1" (global $8 (mut i32)))
  (table $3  97 4294967295 funcref)
  (table $4  58 4294967295 shared funcref)
  (global $9  i64 (i64.const 5980818670597581585))
  (global $10  (mut f64) (f64.const 0x1.0e04189e7c6f8p+63))
  
  (func $11 (type $0)
    (param $0 i32)
    (param $1 i64)
    (param $2 f32)
    (param $3 i64)
    memory.size
    table.size $3
    v32x4.load_interleaved_2 offset=545266504 align=8
    i64x2.extract_lane 0
    i64.extend8_s
    f32.convert_i64_s
    return
    )
  
  (func $12 (type $1)
    (param $0 f64)
    (param $1 v128)
    (param $2 externref)
    (result f64 externref)
    (local $3 externref)
    (local $4 f32)
    (local $5 externref)
    (local $6 v128)
    table.size $4
    i64.atomic.load8_u offset=50413031
    atomic.fence
    block $block (result externref)
      local.get $2
      i32.const 2006271074
      i32.extend16_s
      v32x4.load_interleaved_2 offset=2596963213 align=2
      i8x16.eq
      local.set $1
      global.get $10
      local.get $2
      i32.const -1180535196
      drop
      global.get $10
      global.set $10
      return
    end ;; $block
    ref.null func
    ref.null func
    ref.null extern
    local.set $2
    unreachable
    )
  
  (func $13 (type $2)
    (param $0 funcref)
    (param $1 funcref)
    (param $2 i64)
    (result funcref externref)
    (local $3 v128)
    (local $4 i64)
    (local $5 funcref)
    atomic.fence
    global.get $10
    memory.size $7
    i8x16.splat
    i32x4.neg
    i32x4.any_true
    i16x8.load8x8_u offset=1942035751 align=1
    i32x4.widen_low_i16x8_s
    i8x16.any_true
    i64.extend_i32_s
    i64.extend16_s
    i64.clz
    local.get $0
    unreachable
    ))