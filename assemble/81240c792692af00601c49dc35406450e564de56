(module
  (type $0 (func))
  (type $1 (func (result i64 f64)))
  (type $2 (func (result f64)))
  (type $3 (func (param externref)))
  (type $4 (func (param f64 externref) (result i64 i32)))
  (import "env" "memory" (memory $8 94 33165))
  (import "env" "table" (table $5 51 4294967295 externref))
  (import "env" "table" (table $6 36 4294967295 shared externref))
  (import "env" "global0" (global $11 (mut externref)))
  (import "env" "global1" (global $12 f32))
  (import "env" "func0" (func $16))
  (import "env" "func1" (func $17 (result i64 f64)))
  (memory $9  6 41619 shared)
  (memory $10  61 39933)
  (table $7  91 4294967295 funcref)
  (global $13  (mut v128) (v128.const i32x4 0xac92a6c7 0x2d7592f6 0x386e4b83 0x3d27b66d))
  (global $14  i32 (i32.const 167249930))
  (global $15  externref (ref.null extern))
  
  (func $18 (type $2)
    (result f64)
    (local $0 i64)
    (local $1 f64)
    (local $2 i64)
    (local $3 i64)
    local.get $0
    call $18
    global.get $11
    loop $loop (param externref)
      v128.const i32x4 0xb20729ce 0x85724d08 0xa9879292 0x1ad3cf6c
      call $18
      local.get $3
      local.tee $2
      f64.convert_i64_u
      global.get $15
      nop
      loop $loop_0 (param f64 externref) (result i64 i32)
        ref.is_null
        table.size $7
        i32.or
        ref.null extern
        ref.is_null
        i32.eq
        br_if 2
        local.set $1
        global.get $12
        ref.null func
        drop
        ref.null func
        drop
        unreachable
      end ;; $loop_0
      table.get $5
      unreachable
    end ;; $loop
    br 0
    ))